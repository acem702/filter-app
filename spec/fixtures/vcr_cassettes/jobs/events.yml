---
http_interactions:
- request:
    method: get
    uri: https://crm.pludoni.com/api/community_workshops.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Thu, 11 Nov 2021 13:01:44 GMT
      Etag:
      - W/"3f004b2c282242af91a9a9fd433c6fdc"
      Server:
      - Caddy
      - nginx + Phusion Passenger 6.0.6
      Status:
      - 200 OK
      X-Powered-By:
      - Phusion Passenger 6.0.6
      X-Request-Id:
      - fa217a9d-e151-4e44-a3d2-49b592beb29c
      X-Runtime:
      - '1.074398'
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        [{"id":64,"name":"Mittlr für PD 2","hashtag":"ebcw","title":"Mittlr für Personaldienstleister: Kontakte zu neuen Arbeitgebern aufbauen","teaser":"Mittlr.de bietet Ihnen eine diskrete Kontaktplattform zu über 300 Arbeitgebern. Mit Mittlr laden Sie per CSV-Import Ihre Kandidaten hoch, ein Matchingsystem informiert daraufhin Arbeitgeber bei Passung zu einer ausgeschriebenen Stelle. Arbeitgeber erhalten alle notwendigen Informationen zu Ihrem Angebot und suchen abschließend den Kontakt zu Ihnen. \r\n\r\nIn einem einstündigen Webinar möchten wir Ihnen das Konzept von Mittlr und die Vorteile der passiven Form der Personalvermittlung als zusätzlicher Kundengewinnungskanal für Personaldienstleister genauer vorstellen. In einer Live-Demonstration zeigen wir Ihnen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen können, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kontaktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräften erhalten. ","teaser_hrfilter":"In einem einstündigen Webinar möchten wir Ihnen das Konzept von Mittlr und die Vorteile der passiven Form der Personalvermittlung als zusätzlicher Kundengewinnungskanal für Personaldienstleister genauer vorstellen. In einer Live-Demonstration zeigen wir Ihnen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen können, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kontaktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräften erhalten. ","countdown_visible":false,"countdown_start":"2021-11-26T10:00:30.000+01:00","countdown_description":"In einem einstündigen Webinar möchten wir Personaldienstlern das Konzept von Mittlr und die Vorteile der passiven Form der Personalvermittlung als zusätzlicher Kundengewinnungskanal genauer vorstellen. In einer Live-Demonstration zeigen wir Ihnen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen können, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kontaktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräften erhalten. ","description":"\u003cdiv\u003eMittlr.de bietet Ihnen eine diskrete Kontaktplattform zu 300 Arbeitgebern deutschlandweit. Mit Mittlr laden Sie per CSV-Import Ihre Kandidaten hoch. Ein Matchingsystem informiert daraufhin Arbeitgeber bei Passung zu einer ausgeschriebenen Stelle. Arbeitgeber erhalten alle notwendigen Informationen zu Ihrem Angebot und suchen abschließend den Kontakt zu Ihnen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eIn einem einstündigen Webinar möchten wir Ihnen das Konzept von Mittlr und die Vorteile der passiven Form der Personalvermittlung als zusätzlicher Kundengewinnungskanal genauer vorstellen. In einer Live-Demonstration zeigen wir Ihnen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen können, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kontaktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräften erhalten.\u0026nbsp;\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eBegrüßung (10 min)\u003c/li\u003e\u003cli\u003eVorstellung der Kontaktplattform Mittlr (40 min)\u003c/li\u003e\u003cli\u003eFeedback und Fragerunde (10 min)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2021-12-02T10:00:07.000+01:00","finish":"2021-12-02T11:00:07.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/64/wide_28-10_Kontaktplattform_f%C3%BCr_Personalvermittler_und_Arbeitgeber.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/64/wide_28-10_Kontaktplattform_f%C3%BCr_Personalvermittler_und_Arbeitgeber.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/64/register","show_url":"https://www.empfehlungsbund.de/events/64","events":[{"id":144,"display_line":"02.12.2021 - 10 bis 11:00 Uhr Cleveland - Einladung zum {{title}} im Zeitraum vom {{from_to_days}} - Gastgeber: pludoni GmbH","subtitle":"Einladung zum {{title}} im Zeitraum vom {{from_to_days}}","city":"Cleveland","start":"2021-12-02T10:00:07.000+01:00","finish":"2021-12-02T11:00:07.000+01:00","address":"Online-Veranstaltung","event_host":"pludoni GmbH","lat":41.5007,"lon":-81.6129,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20211031T030000\nRDATE:20211031T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20211202T110007\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20211202T100007\nCATEGORIES:BUSINESS\nDESCRIPTION:Mittlr.de bietet Ihnen eine diskrete Kontaktplattform zu 300 \n Arbeitgebern deutschlandweit. Mit Mittlr laden Sie per CSV-Import Ihre K\n andidaten hoch. Ein Matchingsystem informiert daraufhin Arbeitgeber bei \n Passung zu einer ausgeschriebenen Stelle. Arbeitgeber erhalten alle notw\n endigen Informationen zu Ihrem Angebot und suchen abschließend den Konta\n kt zu Ihnen. \\n\\nIn einem einstündigen Webinar möchten wir Ihnen das Kon\n zept von Mittlr und die Vorteile der passiven Form der Personalvermittlu\n ng als zusätzlicher Kundengewinnungskanal genauer vorstellen. In einer L\n ive-Demonstration zeigen wir Ihnen\\, wie Sie schnell und sicher Ihre Kan\n didaten in Mittlr einpflegen können\\, der Ablauf des Benachrichtigungspr\n ozesses und der gegenseitigen Kontaktaufnahme\\, und wie Sie einen schnel\n len Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräf\n ten erhalten. \\n\\n* Begrüßung (10 min)* Vorstellung der Kontaktplattform\n  Mittlr (40 min)* Feedback und Fragerunde (10 min)\\n\\n\nURL:https://www.empfehlungsbund.de/events/64\nSUMMARY:Mittlr für Personaldienstleister: Kontakte zu neuen Arbeitgebern \n aufbauen\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/64\nATTACH:https://www.empfehlungsbund.de/events/64\nLOCATION:pludoni GmbH\\, Online-Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eMittlr.de bietet Ihnen eine d\n iskrete Kontaktplattform zu 300 Arbeitgebern deutschlandweit. Mit Mittlr\n  laden Sie per CSV-Import Ihre Kandidaten hoch. Ein Matchingsystem infor\n miert daraufhin Arbeitgeber bei Passung zu einer ausgeschriebenen Stelle\n . Arbeitgeber erhalten alle notwendigen Informationen zu Ihrem Angebot u\n nd suchen abschließend den Kontakt zu Ihnen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eIn einem einst\n ündigen Webinar möchten wir Ihnen das Konzept von Mittlr und die Vorteil\n e der passiven Form der Personalvermittlung als zusätzlicher Kundengewin\n nungskanal genauer vorstellen. In einer Live-Demonstration zeigen wir Ih\n nen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen kön\n nen, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kon\n taktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Su\n chvolumen nach qualifizierten Fachkräften erhalten.\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\u003eB\n egrüßung (10 min)\u003c/li\u003e\u003cli\u003eVorstellung der Kontaktplattform Mittlr (40 mi\n n)\u003c/li\u003e\u003cli\u003eFeedback und Fragerunde (10 min)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BO\n DY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":65,"name":"akquise_empfehlungsbund2","hashtag":"ebcw","title":"Webinar: Alternative Wege der Personalbeschaffung am 11. November 2021","teaser":"Der Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe gemacht, Arbeitgeber in regionale Branchennetzwerke zu vereinen. Arbeitgeber empfehlen sich innerhalb der Netzwerke gegenseitig Zweit- und Drittkandidaten, die sie selbst nicht einstellen konnten. Jedes Mitgliedsunternehmen in unseren regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa.","teaser_hrfilter":"In unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der solidarischen Fachkräftegewinnung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert demonstrieren. Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ingenieure, sowie an kaufmännische Berufsgruppen.","countdown_visible":true,"countdown_start":"2021-11-01T16:00:39.000+01:00","countdown_description":"In unserer einstündigen Online-Veranstaltung stellen wir Ihnen den Empfehlungsbund und sein Kernkonzept der solidarischen Fachkräftegewinnung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vor. Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ingenieure, sowie an kaufmännische Berufsgruppen.","description":"\u003cdiv\u003eDer Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe gemacht, Arbeitgeber in regionale Branchennetzwerke zu vereinen. Arbeitgeber empfehlen sich innerhalb der Netzwerke gegenseitig Zweit- und Drittkandidaten, die sie selbst nicht einstellen konnten. Jedes Mitgliedsunternehmen in unseren regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der solidarischen Fachkräftegewinnung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert veranschaulichen.\u0026nbsp; Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ingenieure, sowie an kaufmännische Berufsgruppen.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Fachkräftegewinnung in einer Solidargemeinschaft hat folgende Vorteile:\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuer Recruitingkanal: Empfohlene Bewerbende von anderen Mitgliedern\u003c/li\u003e\u003cli\u003eArbeitgeberimage: Sie geben abgesagten Kandidaten wichtige Orientierung in der Berufssuche\u003c/li\u003e\u003cli\u003eEmpfehlungsbund-Kooperationsnetzwerke: Weiterleitung Ihres Stellenangebotes an Stellenbörsen, Hochschulen und Fachkräfteinitiativen von Bund und Länder\u003c/li\u003e\u003cli\u003eKPI: Zugriff auf Gehaltsbenchmarks und Recruitingperformancebenchmarks\u003c/li\u003e\u003cli\u003eAnzeigenflatrate inkusive\u003c/li\u003e\u003cli\u003eBewerbermanagementsystem EBMS inklusive\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003eSeit 2009 bewährt sich das Konzept der gegenseitigen Bewerberempfehlung.\u003cstrong\u003e \u003c/strong\u003eInsgesamt haben unsere Mitglieder\u003cstrong\u003e über 16.000 qualifizierte, hochrelevante IT-, MINT und kaufmännische Fachkräfte ohne Provision\u003c/strong\u003e \u003cstrong\u003eempfohlen.\u003cbr\u003e\u003c/strong\u003eDarüber hinaus ist der Empfehlungbund, dank seines umfangreichen Kooperationsnetzwerkes, ein leistungsstarke Lösung für Ihre Personalgewinnung.\u003cstrong\u003e In den letzten 365 Tagen erhielten unsere Mitglieder zusätzlich über 26.000 Bewerbungen durch den Empfehlungsbund.\u0026nbsp;\u003c/strong\u003e\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 min.)\u003c/li\u003e\u003cli\u003eVorstellung des Empfehlungsbundes (ca. 40 min.)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 min.)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2021-11-11T10:00:39.000+01:00","finish":"2021-11-11T11:00:39.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/65/wide_Alternative_Wege_der_Personalbeschaffung.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/65/wide_Alternative_Wege_der_Personalbeschaffung.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/65/register","show_url":"https://www.empfehlungsbund.de/events/65","events":[{"id":145,"display_line":"11.11.2021 - 10 bis 11:00 Uhr Online-Veranstaltung - Alternative Wege der Personalbeschaffung am 11. November 2021 - Gastgeber: pludoni GmbH","subtitle":"Alternative Wege der Personalbeschaffung am 11. November 2021","city":"Online-Veranstaltung","start":"2021-11-11T10:00:39.000+01:00","finish":"2021-11-11T11:00:39.000+01:00","address":"Online Veranstaltung","event_host":"pludoni GmbH","lat":29.6878,"lon":-95.4061,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20211031T030000\nRDATE:20211031T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20211111T110039\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20211111T100039\nCATEGORIES:BUSINESS\nDESCRIPTION:Der Empfehlungsbund\\, das größte Arbeitgebernetzwerk Deutschl\n ands zur gegenseitigen Fachkräfteempfehlung\\, hat es sich zur Aufgabe ge\n macht\\, Arbeitgeber in regionale Branchennetzwerke zu vereinen. Arbeitge\n ber empfehlen sich innerhalb der Netzwerke gegenseitig Zweit- und Drittk\n andidaten\\, die sie selbst nicht einstellen konnten. Jedes Mitgliedsunte\n rnehmen in unseren regionalen Arbeitgebergemeinschaften profitiert von d\n en Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa\n .\\n\\nIn unserer einstündigen Online-Veranstaltung möchten wir Ihnen den \n Empfehlungsbund und sein Kernkonzept der solidarischen Fachkräftegewinnu\n ng\\, sowie seinen Leistungsumfang in den Bereichen Employer Branding\\, P\n ersonalmarketing und Personalauswahl detailliert veranschaulichen.  Unse\n re Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräfte\n bedarf wie Informatiker\\, Ingenieure\\, sowie an kaufmännische Berufsgrup\n pen.\\n\\nDie Fachkräftegewinnung in einer Solidargemeinschaft hat folgend\n e Vorteile: \\n\\n\\n* Neuer Recruitingkanal: Empfohlene Bewerbende von and\n eren Mitgliedern* Arbeitgeberimage: Sie geben abgesagten Kandidaten wich\n tige Orientierung in der Berufssuche* Empfehlungsbund-Kooperationsnetzwe\n rke: Weiterleitung Ihres Stellenangebotes an Stellenbörsen\\, Hochschulen\n  und Fachkräfteinitiativen von Bund und Länder* KPI: Zugriff auf Gehalts\n benchmarks und Recruitingperformancebenchmarks* Anzeigenflatrate inkusiv\n e* Bewerbermanagementsystem EBMS inklusive\\nSeit 2009 bewährt sich das K\n onzept der gegenseitigen Bewerberempfehlung. Insgesamt haben unsere Mitg\n lieder über 16.000 qualifizierte\\, hochrelevante IT-\\, MINT und kaufmänn\n ische Fachkräfte ohne Provision empfohlen.\\nDarüber hinaus ist der Empfe\n hlungbund\\, dank seines umfangreichen Kooperationsnetzwerkes\\, ein leist\n ungsstarke Lösung für Ihre Personalgewinnung. In den letzten 365 Tagen e\n rhielten unsere Mitglieder zusätzlich über 26.000 Bewerbungen durch den \n Empfehlungsbund. \\n\\n* Willkommensrunde (ca. 10 min.)* Vorstellung des E\n mpfehlungsbundes (ca. 40 min.)* Fragerunde (ca. 10 min.)\\n\\n\nURL:https://www.empfehlungsbund.de/events/65\nSUMMARY:Webinar: Alternative Wege der Personalbeschaffung am 11. November\n  2021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/65\nATTACH:https://www.empfehlungsbund.de/events/65\nLOCATION:pludoni GmbH\\, Online Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDer Empfehlungsbund, das größ\n te Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlu\n ng, hat es sich zur Aufgabe gemacht, Arbeitgeber in regionale Branchenne\n tzwerke zu vereinen. Arbeitgeber empfehlen sich innerhalb der Netzwerke \n gegenseitig Zweit- und Drittkandidaten, die sie selbst nicht einstellen \n konnten. Jedes Mitgliedsunternehmen in unseren regionalen Arbeitgebergem\n einschaften profitiert von den Personalbeschaffungsmaßnahmen aller ander\n en Mitglieder und vice versa.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn unserer einstündigen Onl\n ine-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernkon\n zept der solidarischen Fachkräftegewinnung, sowie seinen Leistungsumfang\n  in den Bereichen Employer Branding, Personalmarketing und Personalauswa\n hl detailliert veranschaulichen.\u0026nbsp; Unsere Veranstaltung richtet sich\n  insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Inge\n nieure, sowie an kaufmännische Berufsgruppen.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Fachkr\n äftegewinnung in einer Solidargemeinschaft hat folgende Vorteile:\u0026nbsp;\u003c\n br\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuer Recruitingkanal: Empfohlene Bewerbende von an\n deren Mitgliedern\u003c/li\u003e\u003cli\u003eArbeitgeberimage: Sie geben abgesagten Kandida\n ten wichtige Orientierung in der Berufssuche\u003c/li\u003e\u003cli\u003eEmpfehlungsbund-Koo\n perationsnetzwerke: Weiterleitung Ihres Stellenangebotes an Stellenbörse\n n, Hochschulen und Fachkräfteinitiativen von Bund und Länder\u003c/li\u003e\u003cli\u003eKPI\n : Zugriff auf Gehaltsbenchmarks und Recruitingperformancebenchmarks\u003c/li\u003e\n \u003cli\u003eAnzeigenflatrate inkusive\u003c/li\u003e\u003cli\u003eBewerbermanagementsystem EBMS inkl\n usive\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003eSeit 2009 bewährt sich das Konzept der gegenseit\n igen Bewerberempfehlung.\u003cstrong\u003e \u003c/strong\u003eInsgesamt haben unsere Mitglie\n der\u003cstrong\u003e über 16.000 qualifizierte, hochrelevante IT-, MINT und kaufm\n ännische Fachkräfte ohne Provision\u003c/strong\u003e \u003cstrong\u003eempfohlen.\u003cbr\u003e\u003c/stro\n ng\u003eDarüber hinaus ist der Empfehlungbund, dank seines umfangreichen Koop\n erationsnetzwerkes, ein leistungsstarke Lösung für Ihre Personalgewinnun\n g.\u003cstrong\u003e In den letzten 365 Tagen erhielten unsere Mitglieder zusätzli\n ch über 26.000 Bewerbungen durch den Empfehlungsbund.\u0026nbsp;\u003c/strong\u003e\u003c/di\n v\u003e\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 min.)\u003c/li\u003e\u003cli\u003eVorstellung des Empfehl\n ungsbundes (ca. 40 min.)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 min.)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\n \u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":62,"name":"Mittlr für PD","hashtag":"ebcw","title":"Fällt aus: Mittlr für Personaldienstleister: Kontakte zu neuen Arbeitgebern aufbauen","teaser":"Mittlr.de bietet Ihnen eine diskrete Kontaktplattform zu über 300 Arbeitgebern. Mit Mittlr laden Sie per CSV-Import Ihre Kandidaten hoch, ein Matchingsystem informiert daraufhin Arbeitgeber bei Passung zu einer ausgeschriebenen Stelle. Arbeitgeber erhalten alle notwendigen Informationen zu Ihrem Angebot und suchen abschließend den Kontakt zu Ihnen. \r\n\r\nIn einem einstündigen Webinar möchten wir Ihnen das Konzept von Mittlr und die Vorteile der passiven Form der Personalvermittlung als zusätzlicher Kundengewinnungskanal für Personaldienstleister genauer vorstellen. In einer Live-Demonstration zeigen wir Ihnen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen können, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kontaktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräften erhalten. ","teaser_hrfilter":"In einem einstündigen Webinar möchten wir Ihnen das Konzept von Mittlr und die Vorteile der passiven Form der Personalvermittlung als zusätzlicher Kundengewinnungskanal für Personaldienstleister genauer vorstellen. In einer Live-Demonstration zeigen wir Ihnen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen können, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kontaktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräften erhalten. ","countdown_visible":true,"countdown_start":"2021-10-18T00:00:58.000+02:00","countdown_description":"In einem einstündigen Webinar möchten wir Personaldienstlern das Konzept von Mittlr und die Vorteile der passiven Form der Personalvermittlung als zusätzlicher Kundengewinnungskanal genauer vorstellen. In einer Live-Demonstration zeigen wir Ihnen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen können, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kontaktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräften erhalten. ","description":"\u003cdiv\u003eMittlr.de bietet Ihnen eine diskrete Kontaktplattform zu 300 Arbeitgebern deutschlandweit. Mit Mittlr laden Sie per CSV-Import Ihre Kandidaten hoch. Ein Matchingsystem informiert daraufhin Arbeitgeber bei Passung zu einer ausgeschriebenen Stelle. Arbeitgeber erhalten alle notwendigen Informationen zu Ihrem Angebot und suchen abschließend den Kontakt zu Ihnen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eIn einem einstündigen Webinar möchten wir Ihnen das Konzept von Mittlr und die Vorteile der passiven Form der Personalvermittlung als zusätzlicher Kundengewinnungskanal genauer vorstellen. In einer Live-Demonstration zeigen wir Ihnen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen können, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kontaktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräften erhalten.\u0026nbsp;\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eBegrüßung (10 min)\u003c/li\u003e\u003cli\u003eVorstellung der Kontaktplattform Mittlr (40 min)\u003c/li\u003e\u003cli\u003eFeedback und Fragerunde (10 min)\u003c/li\u003e\u003c/ul\u003e","start":"2021-10-28T10:00:00.000+02:00","finish":"2021-10-28T11:00:58.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/62/wide_28-10_Kontaktplattform_f%C3%BCr_Personalvermittler_und_Arbeitgeber.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/62/wide_28-10_Kontaktplattform_f%C3%BCr_Personalvermittler_und_Arbeitgeber.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/62/register","show_url":"https://www.empfehlungsbund.de/events/62","events":[{"id":142,"display_line":"28.10.2021 - 10 bis 11:00 Uhr  - Mittlr für Personaldienstleister: Kontakte zu neuen Arbeitgebern aufbauen - Gastgeber: fällt aus","subtitle":"Mittlr für Personaldienstleister: Kontakte zu neuen Arbeitgebern aufbauen","city":null,"start":"2021-10-28T10:00:00.000+02:00","finish":"2021-10-28T11:00:58.000+02:00","address":"fällt aus","event_host":"fällt aus","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20211028T110058\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20211028T100000\nCATEGORIES:BUSINESS\nDESCRIPTION:Mittlr.de bietet Ihnen eine diskrete Kontaktplattform zu 300 \n Arbeitgebern deutschlandweit. Mit Mittlr laden Sie per CSV-Import Ihre K\n andidaten hoch. Ein Matchingsystem informiert daraufhin Arbeitgeber bei \n Passung zu einer ausgeschriebenen Stelle. Arbeitgeber erhalten alle notw\n endigen Informationen zu Ihrem Angebot und suchen abschließend den Konta\n kt zu Ihnen. \\n\\nIn einem einstündigen Webinar möchten wir Ihnen das Kon\n zept von Mittlr und die Vorteile der passiven Form der Personalvermittlu\n ng als zusätzlicher Kundengewinnungskanal genauer vorstellen. In einer L\n ive-Demonstration zeigen wir Ihnen\\, wie Sie schnell und sicher Ihre Kan\n didaten in Mittlr einpflegen können\\, der Ablauf des Benachrichtigungspr\n ozesses und der gegenseitigen Kontaktaufnahme\\, und wie Sie einen schnel\n len Überblick über das aktuelle Suchvolumen nach qualifizierten Fachkräf\n ten erhalten. \\n\\n* Begrüßung (10 min)* Vorstellung der Kontaktplattform\n  Mittlr (40 min)* Feedback und Fragerunde (10 min)\nURL:https://www.empfehlungsbund.de/events/62\nSUMMARY:Fällt aus: Mittlr für Personaldienstleister: Kontakte zu neuen Ar\n beitgebern aufbauen\nORGANIZER;CN=fällt aus / Empfehlungsbund.de:https://www.empfehlungsbund.d\n e/events/62\nATTACH:https://www.empfehlungsbund.de/events/62\nLOCATION:fällt aus\\, fällt aus\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eMittlr.de bietet Ihnen eine d\n iskrete Kontaktplattform zu 300 Arbeitgebern deutschlandweit. Mit Mittlr\n  laden Sie per CSV-Import Ihre Kandidaten hoch. Ein Matchingsystem infor\n miert daraufhin Arbeitgeber bei Passung zu einer ausgeschriebenen Stelle\n . Arbeitgeber erhalten alle notwendigen Informationen zu Ihrem Angebot u\n nd suchen abschließend den Kontakt zu Ihnen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eIn einem einst\n ündigen Webinar möchten wir Ihnen das Konzept von Mittlr und die Vorteil\n e der passiven Form der Personalvermittlung als zusätzlicher Kundengewin\n nungskanal genauer vorstellen. In einer Live-Demonstration zeigen wir Ih\n nen, wie Sie schnell und sicher Ihre Kandidaten in Mittlr einpflegen kön\n nen, der Ablauf des Benachrichtigungsprozesses und der gegenseitigen Kon\n taktaufnahme, und wie Sie einen schnellen Überblick über das aktuelle Su\n chvolumen nach qualifizierten Fachkräften erhalten.\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\u003eB\n egrüßung (10 min)\u003c/li\u003e\u003cli\u003eVorstellung der Kontaktplattform Mittlr (40 mi\n n)\u003c/li\u003e\u003cli\u003eFeedback und Fragerunde (10 min)\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":63,"name":"akquise faire karriere ","hashtag":"ebcw","title":"Webinar: Bewertungsplattformen für Arbeitgeber im Vergleich","teaser":"Zur Pflege des Arbeitgeberimages greifen Unternehmen häufig auf die Dienste von Arbeitgeberbewertungsplattformen zurück. Diese haben teils sehr unterschiedliche Herangehensweisen bei der Außendarstellung ihres Unternehmens als auch in den dahinterliegenden Geschäftsmodellen. In einem einstündigen Webinar werden wir Ihnen die Unterschiede der verschiedenen Angebote im Feld der Arbeitgeberbewertungsplattformen genauer präsentieren und mit Ihnen über die Vor- und Nachteile der jeweiligen Anbieter diskutieren. ","teaser_hrfilter":"Zur Pflege des Arbeitgeberimages greifen Unternehmen häufig auf die Dienste von Arbeitgeberbewertungsplattformen zurück. Diese haben teils sehr unterschiedliche Herangehensweisen bei der Außendarstellung ihres Unternehmens als auch in den dahinterliegenden Geschäftsmodellen. In einem einstündigen Webinar werden wir Ihnen die Unterschiede der verschiedenen Angebote im Feld der Arbeitgeberbewertungsplattformen genauer präsentieren und mit Ihnen über die Vor- und Nachteile der jeweiligen Anbieter diskutieren. ","countdown_visible":true,"countdown_start":"2021-10-04T09:00:51.000+02:00","countdown_description":"Zur Pflege des Arbeitgeberimages greifen Unternehmen häufig auf die Dienste von Arbeitgeberbewertungsplattformen zurück. Diese haben teils sehr unterschiedliche Herangehensweisen bei der Außendarstellung ihres Unternehmens als auch in den dahinterliegenden Geschäftsmodellen. In einem einstündigen Webinar werden wir Ihnen die Unterschiede der verschiedenen Angebote im Feld der Arbeitgeberbewertungsplattformen genauer präsentieren und mit Ihnen über die Vor- und Nachteile der jeweiligen Anbieter diskutieren. ","description":"\u003cdiv\u003eZur Pflege des Arbeitgeberimages greifen Unternehmen häufig auf die Dienste von Arbeitgeberbewertungsplattformen zurück. Auf diesen können Bewerbende und Mitarbeitende Erfahrungen zu ihren Arbeitgeber kommentieren. Jobsuchende erhalten dadurch zusätzliche Informationen über ihren potentiell zukünftigen Arbeitgeber. Allerdings haben die verschiedenen Anbieter von Bewertungsplattformen teils sehr unterschiedliche Herangehensweisen bei der Außendarstellung Ihres Unternehmens als auch in den dahinterliegenden Geschäftsmodellen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eIn einem einstündigen Webinar werden wir Ihnen die Unterschiede der verschiedenen Angebote im Feld der Arbeitgeberbewertungsplattformen genauer präsentieren und mit Ihnen über die Vor- und Nachteile der jeweiligen Anbieter diskutieren.\u0026nbsp;\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eVorstellungsrunde (10 min)\u003c/li\u003e\u003cli\u003eBewertungsplattformen für Arbeitgeber im Vergleich (35 min)\u003c/li\u003e\u003cli\u003eDiskussionsrunde (15 min)\u003c/li\u003e\u003c/ul\u003e","start":"2021-10-14T10:00:51.000+02:00","finish":"2021-10-14T11:00:51.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/63/wide_Faire_Karriere.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/63/wide_Faire_Karriere.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/63/register","show_url":"https://www.empfehlungsbund.de/events/63","events":[{"id":143,"display_line":"14.10.2021 - 10 bis 11:00 Uhr Dresden - Webinar: Bewertungsplattformen für Arbeitgeber im Vergleich - Gastgeber: Empfehlungsbund","subtitle":"Webinar: Bewertungsplattformen für Arbeitgeber im Vergleich","city":"Dresden","start":"2021-10-14T10:00:51.000+02:00","finish":"2021-10-14T11:00:51.000+02:00","address":"Empfehlungsbund","event_host":"Empfehlungsbund","lat":51.0439,"lon":13.8251,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20211014T110051\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20211014T100051\nCATEGORIES:BUSINESS\nDESCRIPTION:Zur Pflege des Arbeitgeberimages greifen Unternehmen häufig a\n uf die Dienste von Arbeitgeberbewertungsplattformen zurück. Auf diesen k\n önnen Bewerbende und Mitarbeitende Erfahrungen zu ihren Arbeitgeber komm\n entieren. Jobsuchende erhalten dadurch zusätzliche Informationen über ih\n ren potentiell zukünftigen Arbeitgeber. Allerdings haben die verschieden\n en Anbieter von Bewertungsplattformen teils sehr unterschiedliche Herang\n ehensweisen bei der Außendarstellung Ihres Unternehmens als auch in den \n dahinterliegenden Geschäftsmodellen. \\n\\nIn einem einstündigen Webinar w\n erden wir Ihnen die Unterschiede der verschiedenen Angebote im Feld der \n Arbeitgeberbewertungsplattformen genauer präsentieren und mit Ihnen über\n  die Vor- und Nachteile der jeweiligen Anbieter diskutieren. \\n\\n* Vorst\n ellungsrunde (10 min)* Bewertungsplattformen für Arbeitgeber im Vergleic\n h (35 min)* Diskussionsrunde (15 min)\nURL:https://www.empfehlungsbund.de/events/63\nSUMMARY:Webinar: Bewertungsplattformen für Arbeitgeber im Vergleich\nORGANIZER;CN=Empfehlungsbund / Empfehlungsbund.de:https://www.empfehlungs\n bund.de/events/63\nATTACH:https://www.empfehlungsbund.de/events/63\nLOCATION:Empfehlungsbund\\, Empfehlungsbund\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eZur Pflege des Arbeitgeberima\n ges greifen Unternehmen häufig auf die Dienste von Arbeitgeberbewertungs\n plattformen zurück. Auf diesen können Bewerbende und Mitarbeitende Erfah\n rungen zu ihren Arbeitgeber kommentieren. Jobsuchende erhalten dadurch z\n usätzliche Informationen über ihren potentiell zukünftigen Arbeitgeber. \n Allerdings haben die verschiedenen Anbieter von Bewertungsplattformen te\n ils sehr unterschiedliche Herangehensweisen bei der Außendarstellung Ihr\n es Unternehmens als auch in den dahinterliegenden Geschäftsmodellen.\u0026nbs\n p;\u003cbr\u003e\u003cbr\u003eIn einem einstündigen Webinar werden wir Ihnen die Unterschied\n e der verschiedenen Angebote im Feld der Arbeitgeberbewertungsplattforme\n n genauer präsentieren und mit Ihnen über die Vor- und Nachteile der jew\n eiligen Anbieter diskutieren.\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\u003eVorstellungsrunde (10 m\n in)\u003c/li\u003e\u003cli\u003eBewertungsplattformen für Arbeitgeber im Vergleich (35 min)\u003c\n /li\u003e\u003cli\u003eDiskussionsrunde (15 min)\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":61,"name":"ebcw_09_2021","hashtag":"ebcw","title":"Online Empfehlungsbund Community Workshop","teaser":"Auf der Agenda des Empfehlungsbund Community Workshops 2021 steht dieses Mal ein Workshop zum Thema Vertragsmanagement. Insbesondere möchten wir über zu berücksichtigende Stolperfallen bei Verträgen diskutieren. Des Weiteren erläutern wir in einem Fachvortrag das zugrundeliegende Modell zur systematischen Erfassung von Rekruitingkanälen. Außerdem möchten wir Ihnen, Mithilfe einiger unserer Mitglieder, Bestpraxis-Beispiele für Mitarbeitende-werben-Mitarbeitende Programme vorstellen. ","teaser_hrfilter":"Auf der Agenda des Empfehlungsbund Community Workshops 2021 steht dieses Mal ein Workshop zum Thema Vertragsmanagement. Insbesondere möchten wir über zu berücksichtigende Stolperfallen bei Verträgen diskutieren. Des Weiteren erläutern wir in einem Fachvortrag das zugrundeliegende Modell zur systematischen Erfassung von Rekruitingkanälen.","countdown_visible":true,"countdown_start":"2021-08-17T14:00:14.000+02:00","countdown_description":"Auf der Agenda des Empfehlungsbund Community Workshops 2021 steht dieses Mal ein Workshop zum Thema Vertragsmanagement. Insbesondere möchten wir über zu berücksichtigende Stolperfallen bei Verträgen diskutieren. Des Weiteren erläutern wir in einem Fachvortrag das Modell zur systematischen Erfassung von Rekruitingkanälen, das in Kanaleo mit dem Update des Fragebogens zur Anwendung kommt.  ","description":"\u003cdiv\u003eIm Rahmen des Community Workshops stellt der Empfehlungsbund regelmäßig aktuelle Entwicklungen und Studien in den Bereichen Employer Branding, Personalmarketing und Personalauswahl vor. Der Workshop richtet sich speziell an Personalmanager:innen und Führungskräfte regionaler Unternehmen mit Fachkräftebedarf. Mit den Empfehlungsbund Community Workshops verfolgen wir zwei Ziele: Wir bieten Personaler und Personalerinnen eine Plattform zum persönlichen Austausch zu Fragen der Personalbeschaffung und wir informieren Sie über technische Innovationen für eine erfolgreichere Personalbedarfsdeckung.\u003cstrong\u003e\u0026nbsp;\u003cbr\u003e\u003cbr\u003eAuf der Agenda des Empfehlungsbund Community Workshops 2021 steht dieses Mal ein Workshop zum Thema Vertragsmanagement. Insbesondere möchten wir über zu berücksichtigende Stolperfallen bei Verträgen diskutieren. Des Weiteren erläutern wir in einem Fachvortrag das Modell zur systematischen Erfassung von Rekruitingkanälen, das in Kanaleo mit dem Update des Fragebogens zur Anwendung kommt. \u0026nbsp;\u003cbr\u003e\u003cbr\u003eZusätzlich möchten wir Ihnen, Mithilfe einiger unserer Mitglieder, Bestpraxis-Beispiele für Mitarbeitende-werben-Mitarbeitende Programme mit Coworkr vorstellen. Zu guter Letzt planen wir kostenlose Spezial-Gehaltsbenchmarks für ausgewählte Regionen Deutschlands um die Repräsentativität für alle 21 Jobwert-Berufsprofile weiter auszubauen.\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003eDie Teilnahme am Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein Headset. \u003cstrong\u003eDer Empfehlungsbund Community Workshop findet mit identischen Inhalten an vier verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e","agenda":"\u003cdiv\u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und den Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eCoworkr: Bestpraxis-Beispiele MwM-Programme\u003c/li\u003e\u003cli\u003eAnkündigung: Spezial-Gehaltsbenchmarks für die Regionen *bbb, *bavaria, *hanse\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003cstrong\u003eFachvortrag: Systematische Erfassung von Recruitingkanälen\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDas wissenschaftliche Modell zur Identifikation und Erhebung von Recruitingkanälen findet u. A. im Kanaleofragebogen Anwendung. In unserem Vortrag zeigen wir Ihnen wie reliabel die Messung von Recruitingkanälen sein kann.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eEinleitungsvortrag zum Workshop: Vertragsmanagement in der Praxis\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAndre Engelhorn, Geschäftsführer der Firma Vertragswerk und Empfehlungsbund-Mitglied, spricht über Innovationen in der aktuellen Produktlandschaft und die zu beachtenden rechtlichen Aspekte im Bereich Vertragsmanagement.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003cstrong\u003eAnforderungsworkshop: Vertragsmanagement in der Praxis\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eLeitfrage zum Workshop: Wie wird das Vertragsmanagement in Ihrem Unternehmen geregelt?\u0026nbsp;\u003cul\u003e\u003cli\u003eWelche Produkte/Unterschriftensysteme kommen zum Einsatz.\u003c/li\u003e\u003cli\u003eWelchen Weg sollten relevante Empfehlungsbund Services insb. EBMS in Sachen Vertragsmanagement einschlagen?\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eOffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eDer Empfehlungsbund Community Workshop findet mit identischen Inhalten an vier verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e","start":"2021-09-28T09:00:14.000+02:00","finish":"2021-09-29T17:00:30.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/61/wide_EBCW_Banner.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/61/wide_EBCW_Banner.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/61/register","show_url":"https://www.empfehlungsbund.de/events/61","events":[{"id":138,"display_line":"28.09.2021 - 09 bis 12:00 Uhr  - WebEx EBCW Session 1 - Gastgeber: pludoni GmbH","subtitle":"WebEx EBCW Session 1","city":null,"start":"2021-09-28T09:00:14.000+02:00","finish":"2021-09-28T12:00:14.000+02:00","address":"WebEx EBCW Session 1","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210928T120014\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210928T090014\nCATEGORIES:BUSINESS\nDESCRIPTION:Im Rahmen des Community Workshops stellt der Empfehlungsbund \n regelmäßig aktuelle Entwicklungen und Studien in den Bereichen Employer \n Branding\\, Personalmarketing und Personalauswahl vor. Der Workshop richt\n et sich speziell an Personalmanager:innen und Führungskräfte regionaler \n Unternehmen mit Fachkräftebedarf. Mit den Empfehlungsbund Community Work\n shops verfolgen wir zwei Ziele: Wir bieten Personaler und Personalerinne\n n eine Plattform zum persönlichen Austausch zu Fragen der Personalbescha\n ffung und wir informieren Sie über technische Innovationen für eine erfo\n lgreichere Personalbedarfsdeckung. \\n\\nAuf der Agenda des Empfehlungsbun\n d Community Workshops 2021 steht dieses Mal ein Workshop zum Thema Vertr\n agsmanagement. Insbesondere möchten wir über zu berücksichtigende Stolpe\n rfallen bei Verträgen diskutieren. Des Weiteren erläutern wir in einem F\n achvortrag das Modell zur systematischen Erfassung von Rekruitingkanälen\n \\, das in Kanaleo mit dem Update des Fragebogens zur Anwendung kommt.  \\\n n\\nZusätzlich möchten wir Ihnen\\, Mithilfe einiger unserer Mitglieder\\, \n Bestpraxis-Beispiele für Mitarbeitende-werben-Mitarbeitende Programme mi\n t Coworkr vorstellen. Zu guter Letzt planen wir kostenlose Spezial-Gehal\n tsbenchmarks für ausgewählte Regionen Deutschlands um die Repräsentativi\n tät für alle 21 Jobwert-Berufsprofile weiter auszubauen.\\n\\nDie Teilnahm\n e am Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung \n zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten \n und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Even\n t per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein He\n adset. Der Empfehlungsbund Community Workshop findet mit identischen Inh\n alten an vier verschiedenen Terminen statt.\\n\\nAktuelle Kennzahlen zum E\n mpfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwicklungen im\n  Empfehlungsbund und den Community-Portalen* Technische Updates* Coworkr\n : Bestpraxis-Beispiele MwM-Programme* Ankündigung: Spezial-Gehaltsbenchm\n arks für die Regionen *bbb\\, *bavaria\\, *hanse\\n Fachvortrag: Systematis\n che Erfassung von Recruitingkanälen\\n\\n\\n* Das wissenschaftliche Modell \n zur Identifikation und Erhebung von Recruitingkanälen findet u. A. im Ka\n naleofragebogen Anwendung. In unserem Vortrag zeigen wir Ihnen wie relia\n bel die Messung von Recruitingkanälen sein kann. \\n\\nEinleitungsvortrag \n zum Workshop: Vertragsmanagement in der Praxis\\n\\n\\n* Andre Engelhorn\\, \n Geschäftsführer der Firma Vertragswerk und Empfehlungsbund-Mitglied\\, sp\n richt über Innovationen in der aktuellen Produktlandschaft und die zu be\n achtenden rechtlichen Aspekte im Bereich Vertragsmanagement.\\n Anforderu\n ngsworkshop: Vertragsmanagement in der Praxis\\n\\n\\n* Leitfrage zum Works\n hop: Wie wird das Vertragsmanagement in Ihrem Unternehmen geregelt? * We\n lche Produkte/Unterschriftensysteme kommen zum Einsatz.* Welchen Weg sol\n lten relevante Empfehlungsbund Services insb. EBMS in Sachen Vertragsman\n agement einschlagen?* Offener Erfahrungsaustausch\\nDer Empfehlungsbund C\n ommunity Workshop findet mit identischen Inhalten an vier verschiedenen \n Terminen statt.\\n\nURL:https://www.empfehlungsbund.de/events/61\nSUMMARY:Online Empfehlungsbund Community Workshop\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/61\nATTACH:https://www.empfehlungsbund.de/events/61\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 1\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eIm Rahmen des Community Works\n hops stellt der Empfehlungsbund regelmäßig aktuelle Entwicklungen und St\n udien in den Bereichen Employer Branding, Personalmarketing und Personal\n auswahl vor. Der Workshop richtet sich speziell an Personalmanager:innen\n  und Führungskräfte regionaler Unternehmen mit Fachkräftebedarf. Mit den\n  Empfehlungsbund Community Workshops verfolgen wir zwei Ziele: Wir biete\n n Personaler und Personalerinnen eine Plattform zum persönlichen Austaus\n ch zu Fragen der Personalbeschaffung und wir informieren Sie über techni\n sche Innovationen für eine erfolgreichere Personalbedarfsdeckung.\u003cstrong\n \u003e\u0026nbsp;\u003cbr\u003e\u003cbr\u003eAuf der Agenda des Empfehlungsbund Community Workshops 20\n 21 steht dieses Mal ein Workshop zum Thema Vertragsmanagement. Insbesond\n ere möchten wir über zu berücksichtigende Stolperfallen bei Verträgen di\n skutieren. Des Weiteren erläutern wir in einem Fachvortrag das Modell zu\n r systematischen Erfassung von Rekruitingkanälen, das in Kanaleo mit dem\n  Update des Fragebogens zur Anwendung kommt. \u0026nbsp;\u003cbr\u003e\u003cbr\u003eZusätzlich mö\n chten wir Ihnen, Mithilfe einiger unserer Mitglieder, Bestpraxis-Beispie\n le für Mitarbeitende-werben-Mitarbeitende Programme mit Coworkr vorstell\n en. Zu guter Letzt planen wir kostenlose Spezial-Gehaltsbenchmarks für a\n usgewählte Regionen Deutschlands um die Repräsentativität für alle 21 Jo\n bwert-Berufsprofile weiter auszubauen.\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003eDie Teilna\n hme am Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldun\n g zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdate\n n und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Ev\n ent per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein \n Headset. \u003cstrong\u003eDer Empfehlungsbund Community Workshop findet mit ident\n ischen Inhalten an vier verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e\u003cdiv\n \u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003c\n br\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbun\n d und den Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eCoworkr:\n  Bestpraxis-Beispiele MwM-Programme\u003c/li\u003e\u003cli\u003eAnkündigung: Spezial-Gehalts\n benchmarks für die Regionen *bbb, *bavaria, *hanse\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nb\n sp;\u003cstrong\u003eFachvortrag: Systematische Erfassung von Recruitingkanälen\u003cbr\n \u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDas wissenschaftliche Modell zur Identifikat\n ion und Erhebung von Recruitingkanälen findet u. A. im Kanaleofragebogen\n  Anwendung. In unserem Vortrag zeigen wir Ihnen wie reliabel die Messung\n  von Recruitingkanälen sein kann.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cst\n rong\u003eEinleitungsvortrag zum Workshop: Vertragsmanagement in der Praxis\u003cb\n r\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAndre Engelhorn, Geschäftsführer der Firma \n Vertragswerk und Empfehlungsbund-Mitglied, spricht über Innovationen in \n der aktuellen Produktlandschaft und die zu beachtenden rechtlichen Aspek\n te im Bereich Vertragsmanagement.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003cstrong\u003eAnford\n erungsworkshop: Vertragsmanagement in der Praxis\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003c\n ul\u003e\u003cli\u003eLeitfrage zum Workshop: Wie wird das Vertragsmanagement in Ihrem \n Unternehmen geregelt?\u0026nbsp;\u003cul\u003e\u003cli\u003eWelche Produkte/Unterschriftensysteme\n  kommen zum Einsatz.\u003c/li\u003e\u003cli\u003eWelchen Weg sollten relevante Empfehlungsbu\n nd Services insb. EBMS in Sachen Vertragsmanagement einschlagen?\u003c/li\u003e\u003c/u\n l\u003e\u003c/li\u003e\u003cli\u003eOffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eDer Emp\n fehlungsbund Community Workshop findet mit identischen Inhalten an vier \n verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":139,"display_line":"28.09.2021 - 14 bis 17:00 Uhr  - WebEx EBCW Session 2 - Gastgeber: pludoni GmbH","subtitle":"WebEx EBCW Session 2","city":null,"start":"2021-09-28T14:00:02.000+02:00","finish":"2021-09-28T17:00:02.000+02:00","address":"WebEx EBCW Session 2","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210928T170002\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210928T140002\nCATEGORIES:BUSINESS\nDESCRIPTION:Im Rahmen des Community Workshops stellt der Empfehlungsbund \n regelmäßig aktuelle Entwicklungen und Studien in den Bereichen Employer \n Branding\\, Personalmarketing und Personalauswahl vor. Der Workshop richt\n et sich speziell an Personalmanager:innen und Führungskräfte regionaler \n Unternehmen mit Fachkräftebedarf. Mit den Empfehlungsbund Community Work\n shops verfolgen wir zwei Ziele: Wir bieten Personaler und Personalerinne\n n eine Plattform zum persönlichen Austausch zu Fragen der Personalbescha\n ffung und wir informieren Sie über technische Innovationen für eine erfo\n lgreichere Personalbedarfsdeckung. \\n\\nAuf der Agenda des Empfehlungsbun\n d Community Workshops 2021 steht dieses Mal ein Workshop zum Thema Vertr\n agsmanagement. Insbesondere möchten wir über zu berücksichtigende Stolpe\n rfallen bei Verträgen diskutieren. Des Weiteren erläutern wir in einem F\n achvortrag das Modell zur systematischen Erfassung von Rekruitingkanälen\n \\, das in Kanaleo mit dem Update des Fragebogens zur Anwendung kommt.  \\\n n\\nZusätzlich möchten wir Ihnen\\, Mithilfe einiger unserer Mitglieder\\, \n Bestpraxis-Beispiele für Mitarbeitende-werben-Mitarbeitende Programme mi\n t Coworkr vorstellen. Zu guter Letzt planen wir kostenlose Spezial-Gehal\n tsbenchmarks für ausgewählte Regionen Deutschlands um die Repräsentativi\n tät für alle 21 Jobwert-Berufsprofile weiter auszubauen.\\n\\nDie Teilnahm\n e am Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung \n zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten \n und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Even\n t per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein He\n adset. Der Empfehlungsbund Community Workshop findet mit identischen Inh\n alten an vier verschiedenen Terminen statt.\\n\\nAktuelle Kennzahlen zum E\n mpfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwicklungen im\n  Empfehlungsbund und den Community-Portalen* Technische Updates* Coworkr\n : Bestpraxis-Beispiele MwM-Programme* Ankündigung: Spezial-Gehaltsbenchm\n arks für die Regionen *bbb\\, *bavaria\\, *hanse\\n Fachvortrag: Systematis\n che Erfassung von Recruitingkanälen\\n\\n\\n* Das wissenschaftliche Modell \n zur Identifikation und Erhebung von Recruitingkanälen findet u. A. im Ka\n naleofragebogen Anwendung. In unserem Vortrag zeigen wir Ihnen wie relia\n bel die Messung von Recruitingkanälen sein kann. \\n\\nEinleitungsvortrag \n zum Workshop: Vertragsmanagement in der Praxis\\n\\n\\n* Andre Engelhorn\\, \n Geschäftsführer der Firma Vertragswerk und Empfehlungsbund-Mitglied\\, sp\n richt über Innovationen in der aktuellen Produktlandschaft und die zu be\n achtenden rechtlichen Aspekte im Bereich Vertragsmanagement.\\n Anforderu\n ngsworkshop: Vertragsmanagement in der Praxis\\n\\n\\n* Leitfrage zum Works\n hop: Wie wird das Vertragsmanagement in Ihrem Unternehmen geregelt? * We\n lche Produkte/Unterschriftensysteme kommen zum Einsatz.* Welchen Weg sol\n lten relevante Empfehlungsbund Services insb. EBMS in Sachen Vertragsman\n agement einschlagen?* Offener Erfahrungsaustausch\\nDer Empfehlungsbund C\n ommunity Workshop findet mit identischen Inhalten an vier verschiedenen \n Terminen statt.\\n\nURL:https://www.empfehlungsbund.de/events/61\nSUMMARY:Online Empfehlungsbund Community Workshop\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/61\nATTACH:https://www.empfehlungsbund.de/events/61\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 2\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eIm Rahmen des Community Works\n hops stellt der Empfehlungsbund regelmäßig aktuelle Entwicklungen und St\n udien in den Bereichen Employer Branding, Personalmarketing und Personal\n auswahl vor. Der Workshop richtet sich speziell an Personalmanager:innen\n  und Führungskräfte regionaler Unternehmen mit Fachkräftebedarf. Mit den\n  Empfehlungsbund Community Workshops verfolgen wir zwei Ziele: Wir biete\n n Personaler und Personalerinnen eine Plattform zum persönlichen Austaus\n ch zu Fragen der Personalbeschaffung und wir informieren Sie über techni\n sche Innovationen für eine erfolgreichere Personalbedarfsdeckung.\u003cstrong\n \u003e\u0026nbsp;\u003cbr\u003e\u003cbr\u003eAuf der Agenda des Empfehlungsbund Community Workshops 20\n 21 steht dieses Mal ein Workshop zum Thema Vertragsmanagement. Insbesond\n ere möchten wir über zu berücksichtigende Stolperfallen bei Verträgen di\n skutieren. Des Weiteren erläutern wir in einem Fachvortrag das Modell zu\n r systematischen Erfassung von Rekruitingkanälen, das in Kanaleo mit dem\n  Update des Fragebogens zur Anwendung kommt. \u0026nbsp;\u003cbr\u003e\u003cbr\u003eZusätzlich mö\n chten wir Ihnen, Mithilfe einiger unserer Mitglieder, Bestpraxis-Beispie\n le für Mitarbeitende-werben-Mitarbeitende Programme mit Coworkr vorstell\n en. Zu guter Letzt planen wir kostenlose Spezial-Gehaltsbenchmarks für a\n usgewählte Regionen Deutschlands um die Repräsentativität für alle 21 Jo\n bwert-Berufsprofile weiter auszubauen.\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003eDie Teilna\n hme am Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldun\n g zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdate\n n und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Ev\n ent per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein \n Headset. \u003cstrong\u003eDer Empfehlungsbund Community Workshop findet mit ident\n ischen Inhalten an vier verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e\u003cdiv\n \u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003c\n br\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbun\n d und den Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eCoworkr:\n  Bestpraxis-Beispiele MwM-Programme\u003c/li\u003e\u003cli\u003eAnkündigung: Spezial-Gehalts\n benchmarks für die Regionen *bbb, *bavaria, *hanse\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nb\n sp;\u003cstrong\u003eFachvortrag: Systematische Erfassung von Recruitingkanälen\u003cbr\n \u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDas wissenschaftliche Modell zur Identifikat\n ion und Erhebung von Recruitingkanälen findet u. A. im Kanaleofragebogen\n  Anwendung. In unserem Vortrag zeigen wir Ihnen wie reliabel die Messung\n  von Recruitingkanälen sein kann.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cst\n rong\u003eEinleitungsvortrag zum Workshop: Vertragsmanagement in der Praxis\u003cb\n r\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAndre Engelhorn, Geschäftsführer der Firma \n Vertragswerk und Empfehlungsbund-Mitglied, spricht über Innovationen in \n der aktuellen Produktlandschaft und die zu beachtenden rechtlichen Aspek\n te im Bereich Vertragsmanagement.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003cstrong\u003eAnford\n erungsworkshop: Vertragsmanagement in der Praxis\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003c\n ul\u003e\u003cli\u003eLeitfrage zum Workshop: Wie wird das Vertragsmanagement in Ihrem \n Unternehmen geregelt?\u0026nbsp;\u003cul\u003e\u003cli\u003eWelche Produkte/Unterschriftensysteme\n  kommen zum Einsatz.\u003c/li\u003e\u003cli\u003eWelchen Weg sollten relevante Empfehlungsbu\n nd Services insb. EBMS in Sachen Vertragsmanagement einschlagen?\u003c/li\u003e\u003c/u\n l\u003e\u003c/li\u003e\u003cli\u003eOffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eDer Emp\n fehlungsbund Community Workshop findet mit identischen Inhalten an vier \n verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":140,"display_line":"29.09.2021 - 09 bis 12:00 Uhr  - WebEx EBCW Session 3 - Gastgeber: pludoni GmbH","subtitle":"WebEx EBCW Session 3","city":null,"start":"2021-09-29T09:00:27.000+02:00","finish":"2021-09-29T12:00:27.000+02:00","address":"WebEx EBCW Session 3","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210929T120027\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210929T090027\nCATEGORIES:BUSINESS\nDESCRIPTION:Im Rahmen des Community Workshops stellt der Empfehlungsbund \n regelmäßig aktuelle Entwicklungen und Studien in den Bereichen Employer \n Branding\\, Personalmarketing und Personalauswahl vor. Der Workshop richt\n et sich speziell an Personalmanager:innen und Führungskräfte regionaler \n Unternehmen mit Fachkräftebedarf. Mit den Empfehlungsbund Community Work\n shops verfolgen wir zwei Ziele: Wir bieten Personaler und Personalerinne\n n eine Plattform zum persönlichen Austausch zu Fragen der Personalbescha\n ffung und wir informieren Sie über technische Innovationen für eine erfo\n lgreichere Personalbedarfsdeckung. \\n\\nAuf der Agenda des Empfehlungsbun\n d Community Workshops 2021 steht dieses Mal ein Workshop zum Thema Vertr\n agsmanagement. Insbesondere möchten wir über zu berücksichtigende Stolpe\n rfallen bei Verträgen diskutieren. Des Weiteren erläutern wir in einem F\n achvortrag das Modell zur systematischen Erfassung von Rekruitingkanälen\n \\, das in Kanaleo mit dem Update des Fragebogens zur Anwendung kommt.  \\\n n\\nZusätzlich möchten wir Ihnen\\, Mithilfe einiger unserer Mitglieder\\, \n Bestpraxis-Beispiele für Mitarbeitende-werben-Mitarbeitende Programme mi\n t Coworkr vorstellen. Zu guter Letzt planen wir kostenlose Spezial-Gehal\n tsbenchmarks für ausgewählte Regionen Deutschlands um die Repräsentativi\n tät für alle 21 Jobwert-Berufsprofile weiter auszubauen.\\n\\nDie Teilnahm\n e am Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung \n zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten \n und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Even\n t per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein He\n adset. Der Empfehlungsbund Community Workshop findet mit identischen Inh\n alten an vier verschiedenen Terminen statt.\\n\\nAktuelle Kennzahlen zum E\n mpfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwicklungen im\n  Empfehlungsbund und den Community-Portalen* Technische Updates* Coworkr\n : Bestpraxis-Beispiele MwM-Programme* Ankündigung: Spezial-Gehaltsbenchm\n arks für die Regionen *bbb\\, *bavaria\\, *hanse\\n Fachvortrag: Systematis\n che Erfassung von Recruitingkanälen\\n\\n\\n* Das wissenschaftliche Modell \n zur Identifikation und Erhebung von Recruitingkanälen findet u. A. im Ka\n naleofragebogen Anwendung. In unserem Vortrag zeigen wir Ihnen wie relia\n bel die Messung von Recruitingkanälen sein kann. \\n\\nEinleitungsvortrag \n zum Workshop: Vertragsmanagement in der Praxis\\n\\n\\n* Andre Engelhorn\\, \n Geschäftsführer der Firma Vertragswerk und Empfehlungsbund-Mitglied\\, sp\n richt über Innovationen in der aktuellen Produktlandschaft und die zu be\n achtenden rechtlichen Aspekte im Bereich Vertragsmanagement.\\n Anforderu\n ngsworkshop: Vertragsmanagement in der Praxis\\n\\n\\n* Leitfrage zum Works\n hop: Wie wird das Vertragsmanagement in Ihrem Unternehmen geregelt? * We\n lche Produkte/Unterschriftensysteme kommen zum Einsatz.* Welchen Weg sol\n lten relevante Empfehlungsbund Services insb. EBMS in Sachen Vertragsman\n agement einschlagen?* Offener Erfahrungsaustausch\\nDer Empfehlungsbund C\n ommunity Workshop findet mit identischen Inhalten an vier verschiedenen \n Terminen statt.\\n\nURL:https://www.empfehlungsbund.de/events/61\nSUMMARY:Online Empfehlungsbund Community Workshop\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/61\nATTACH:https://www.empfehlungsbund.de/events/61\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 3\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eIm Rahmen des Community Works\n hops stellt der Empfehlungsbund regelmäßig aktuelle Entwicklungen und St\n udien in den Bereichen Employer Branding, Personalmarketing und Personal\n auswahl vor. Der Workshop richtet sich speziell an Personalmanager:innen\n  und Führungskräfte regionaler Unternehmen mit Fachkräftebedarf. Mit den\n  Empfehlungsbund Community Workshops verfolgen wir zwei Ziele: Wir biete\n n Personaler und Personalerinnen eine Plattform zum persönlichen Austaus\n ch zu Fragen der Personalbeschaffung und wir informieren Sie über techni\n sche Innovationen für eine erfolgreichere Personalbedarfsdeckung.\u003cstrong\n \u003e\u0026nbsp;\u003cbr\u003e\u003cbr\u003eAuf der Agenda des Empfehlungsbund Community Workshops 20\n 21 steht dieses Mal ein Workshop zum Thema Vertragsmanagement. Insbesond\n ere möchten wir über zu berücksichtigende Stolperfallen bei Verträgen di\n skutieren. Des Weiteren erläutern wir in einem Fachvortrag das Modell zu\n r systematischen Erfassung von Rekruitingkanälen, das in Kanaleo mit dem\n  Update des Fragebogens zur Anwendung kommt. \u0026nbsp;\u003cbr\u003e\u003cbr\u003eZusätzlich mö\n chten wir Ihnen, Mithilfe einiger unserer Mitglieder, Bestpraxis-Beispie\n le für Mitarbeitende-werben-Mitarbeitende Programme mit Coworkr vorstell\n en. Zu guter Letzt planen wir kostenlose Spezial-Gehaltsbenchmarks für a\n usgewählte Regionen Deutschlands um die Repräsentativität für alle 21 Jo\n bwert-Berufsprofile weiter auszubauen.\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003eDie Teilna\n hme am Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldun\n g zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdate\n n und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Ev\n ent per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein \n Headset. \u003cstrong\u003eDer Empfehlungsbund Community Workshop findet mit ident\n ischen Inhalten an vier verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e\u003cdiv\n \u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003c\n br\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbun\n d und den Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eCoworkr:\n  Bestpraxis-Beispiele MwM-Programme\u003c/li\u003e\u003cli\u003eAnkündigung: Spezial-Gehalts\n benchmarks für die Regionen *bbb, *bavaria, *hanse\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nb\n sp;\u003cstrong\u003eFachvortrag: Systematische Erfassung von Recruitingkanälen\u003cbr\n \u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDas wissenschaftliche Modell zur Identifikat\n ion und Erhebung von Recruitingkanälen findet u. A. im Kanaleofragebogen\n  Anwendung. In unserem Vortrag zeigen wir Ihnen wie reliabel die Messung\n  von Recruitingkanälen sein kann.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cst\n rong\u003eEinleitungsvortrag zum Workshop: Vertragsmanagement in der Praxis\u003cb\n r\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAndre Engelhorn, Geschäftsführer der Firma \n Vertragswerk und Empfehlungsbund-Mitglied, spricht über Innovationen in \n der aktuellen Produktlandschaft und die zu beachtenden rechtlichen Aspek\n te im Bereich Vertragsmanagement.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003cstrong\u003eAnford\n erungsworkshop: Vertragsmanagement in der Praxis\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003c\n ul\u003e\u003cli\u003eLeitfrage zum Workshop: Wie wird das Vertragsmanagement in Ihrem \n Unternehmen geregelt?\u0026nbsp;\u003cul\u003e\u003cli\u003eWelche Produkte/Unterschriftensysteme\n  kommen zum Einsatz.\u003c/li\u003e\u003cli\u003eWelchen Weg sollten relevante Empfehlungsbu\n nd Services insb. EBMS in Sachen Vertragsmanagement einschlagen?\u003c/li\u003e\u003c/u\n l\u003e\u003c/li\u003e\u003cli\u003eOffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eDer Emp\n fehlungsbund Community Workshop findet mit identischen Inhalten an vier \n verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":141,"display_line":"29.09.2021 - 14 bis 17:00 Uhr  - fällt aus - Gastgeber: fällt aus","subtitle":"fällt aus","city":null,"start":"2021-09-29T14:00:30.000+02:00","finish":"2021-09-29T17:00:30.000+02:00","address":"fällt aus","event_host":"fällt aus","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210929T170030\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210929T140030\nCATEGORIES:BUSINESS\nDESCRIPTION:Im Rahmen des Community Workshops stellt der Empfehlungsbund \n regelmäßig aktuelle Entwicklungen und Studien in den Bereichen Employer \n Branding\\, Personalmarketing und Personalauswahl vor. Der Workshop richt\n et sich speziell an Personalmanager:innen und Führungskräfte regionaler \n Unternehmen mit Fachkräftebedarf. Mit den Empfehlungsbund Community Work\n shops verfolgen wir zwei Ziele: Wir bieten Personaler und Personalerinne\n n eine Plattform zum persönlichen Austausch zu Fragen der Personalbescha\n ffung und wir informieren Sie über technische Innovationen für eine erfo\n lgreichere Personalbedarfsdeckung. \\n\\nAuf der Agenda des Empfehlungsbun\n d Community Workshops 2021 steht dieses Mal ein Workshop zum Thema Vertr\n agsmanagement. Insbesondere möchten wir über zu berücksichtigende Stolpe\n rfallen bei Verträgen diskutieren. Des Weiteren erläutern wir in einem F\n achvortrag das Modell zur systematischen Erfassung von Rekruitingkanälen\n \\, das in Kanaleo mit dem Update des Fragebogens zur Anwendung kommt.  \\\n n\\nZusätzlich möchten wir Ihnen\\, Mithilfe einiger unserer Mitglieder\\, \n Bestpraxis-Beispiele für Mitarbeitende-werben-Mitarbeitende Programme mi\n t Coworkr vorstellen. Zu guter Letzt planen wir kostenlose Spezial-Gehal\n tsbenchmarks für ausgewählte Regionen Deutschlands um die Repräsentativi\n tät für alle 21 Jobwert-Berufsprofile weiter auszubauen.\\n\\nDie Teilnahm\n e am Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung \n zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten \n und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Even\n t per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein He\n adset. Der Empfehlungsbund Community Workshop findet mit identischen Inh\n alten an vier verschiedenen Terminen statt.\\n\\nAktuelle Kennzahlen zum E\n mpfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwicklungen im\n  Empfehlungsbund und den Community-Portalen* Technische Updates* Coworkr\n : Bestpraxis-Beispiele MwM-Programme* Ankündigung: Spezial-Gehaltsbenchm\n arks für die Regionen *bbb\\, *bavaria\\, *hanse\\n Fachvortrag: Systematis\n che Erfassung von Recruitingkanälen\\n\\n\\n* Das wissenschaftliche Modell \n zur Identifikation und Erhebung von Recruitingkanälen findet u. A. im Ka\n naleofragebogen Anwendung. In unserem Vortrag zeigen wir Ihnen wie relia\n bel die Messung von Recruitingkanälen sein kann. \\n\\nEinleitungsvortrag \n zum Workshop: Vertragsmanagement in der Praxis\\n\\n\\n* Andre Engelhorn\\, \n Geschäftsführer der Firma Vertragswerk und Empfehlungsbund-Mitglied\\, sp\n richt über Innovationen in der aktuellen Produktlandschaft und die zu be\n achtenden rechtlichen Aspekte im Bereich Vertragsmanagement.\\n Anforderu\n ngsworkshop: Vertragsmanagement in der Praxis\\n\\n\\n* Leitfrage zum Works\n hop: Wie wird das Vertragsmanagement in Ihrem Unternehmen geregelt? * We\n lche Produkte/Unterschriftensysteme kommen zum Einsatz.* Welchen Weg sol\n lten relevante Empfehlungsbund Services insb. EBMS in Sachen Vertragsman\n agement einschlagen?* Offener Erfahrungsaustausch\\nDer Empfehlungsbund C\n ommunity Workshop findet mit identischen Inhalten an vier verschiedenen \n Terminen statt.\\n\nURL:https://www.empfehlungsbund.de/events/61\nSUMMARY:Online Empfehlungsbund Community Workshop\nORGANIZER;CN=fällt aus / Empfehlungsbund.de:https://www.empfehlungsbund.d\n e/events/61\nATTACH:https://www.empfehlungsbund.de/events/61\nLOCATION:fällt aus\\, fällt aus\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eIm Rahmen des Community Works\n hops stellt der Empfehlungsbund regelmäßig aktuelle Entwicklungen und St\n udien in den Bereichen Employer Branding, Personalmarketing und Personal\n auswahl vor. Der Workshop richtet sich speziell an Personalmanager:innen\n  und Führungskräfte regionaler Unternehmen mit Fachkräftebedarf. Mit den\n  Empfehlungsbund Community Workshops verfolgen wir zwei Ziele: Wir biete\n n Personaler und Personalerinnen eine Plattform zum persönlichen Austaus\n ch zu Fragen der Personalbeschaffung und wir informieren Sie über techni\n sche Innovationen für eine erfolgreichere Personalbedarfsdeckung.\u003cstrong\n \u003e\u0026nbsp;\u003cbr\u003e\u003cbr\u003eAuf der Agenda des Empfehlungsbund Community Workshops 20\n 21 steht dieses Mal ein Workshop zum Thema Vertragsmanagement. Insbesond\n ere möchten wir über zu berücksichtigende Stolperfallen bei Verträgen di\n skutieren. Des Weiteren erläutern wir in einem Fachvortrag das Modell zu\n r systematischen Erfassung von Rekruitingkanälen, das in Kanaleo mit dem\n  Update des Fragebogens zur Anwendung kommt. \u0026nbsp;\u003cbr\u003e\u003cbr\u003eZusätzlich mö\n chten wir Ihnen, Mithilfe einiger unserer Mitglieder, Bestpraxis-Beispie\n le für Mitarbeitende-werben-Mitarbeitende Programme mit Coworkr vorstell\n en. Zu guter Letzt planen wir kostenlose Spezial-Gehaltsbenchmarks für a\n usgewählte Regionen Deutschlands um die Repräsentativität für alle 21 Jo\n bwert-Berufsprofile weiter auszubauen.\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003eDie Teilna\n hme am Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldun\n g zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdate\n n und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Ev\n ent per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein \n Headset. \u003cstrong\u003eDer Empfehlungsbund Community Workshop findet mit ident\n ischen Inhalten an vier verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e\u003cdiv\n \u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003c\n br\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbun\n d und den Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eCoworkr:\n  Bestpraxis-Beispiele MwM-Programme\u003c/li\u003e\u003cli\u003eAnkündigung: Spezial-Gehalts\n benchmarks für die Regionen *bbb, *bavaria, *hanse\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nb\n sp;\u003cstrong\u003eFachvortrag: Systematische Erfassung von Recruitingkanälen\u003cbr\n \u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDas wissenschaftliche Modell zur Identifikat\n ion und Erhebung von Recruitingkanälen findet u. A. im Kanaleofragebogen\n  Anwendung. In unserem Vortrag zeigen wir Ihnen wie reliabel die Messung\n  von Recruitingkanälen sein kann.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cst\n rong\u003eEinleitungsvortrag zum Workshop: Vertragsmanagement in der Praxis\u003cb\n r\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAndre Engelhorn, Geschäftsführer der Firma \n Vertragswerk und Empfehlungsbund-Mitglied, spricht über Innovationen in \n der aktuellen Produktlandschaft und die zu beachtenden rechtlichen Aspek\n te im Bereich Vertragsmanagement.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003cstrong\u003eAnford\n erungsworkshop: Vertragsmanagement in der Praxis\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003c\n ul\u003e\u003cli\u003eLeitfrage zum Workshop: Wie wird das Vertragsmanagement in Ihrem \n Unternehmen geregelt?\u0026nbsp;\u003cul\u003e\u003cli\u003eWelche Produkte/Unterschriftensysteme\n  kommen zum Einsatz.\u003c/li\u003e\u003cli\u003eWelchen Weg sollten relevante Empfehlungsbu\n nd Services insb. EBMS in Sachen Vertragsmanagement einschlagen?\u003c/li\u003e\u003c/u\n l\u003e\u003c/li\u003e\u003cli\u003eOffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eDer Emp\n fehlungsbund Community Workshop findet mit identischen Inhalten an vier \n verschiedenen Terminen statt.\u003c/strong\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":60,"name":"akquise_webex_empfehlungsbund","hashtag":"ebcw","title":"Webinar: Alternative Wege der Personalbeschaffung am 12. August 2021","teaser":"Der Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe gemacht, Arbeitgeber in regionale Branchennetzwerke zu vereinen. Arbeitgeber empfehlen sich innerhalb der Netzwerke gegenseitig Zweit- und Drittkandidaten, die sie selbst nicht einstellen konnten. Jedes Mitgliedsunternehmen in unseren regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa.\r\n\r\nIn unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der solidarischen Fachkräftegewinnung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert demonstrieren.  Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ingenieure, sowie an kaufmännische Berufsgruppen.","teaser_hrfilter":"In unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der solidarischen Fachkräftegewinnung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert demonstrieren. Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ingenieure, sowie an kaufmännische Berufsgruppen.","countdown_visible":true,"countdown_start":"2021-08-02T13:00:09.000+02:00","countdown_description":"In unserer einstündigen Online-Veranstaltung stellen wir Ihnen den Empfehlungsbund und sein Kernkonzept der solidarischen Fachkräftegewinnung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vor. Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ingenieure, sowie an kaufmännische Berufsgruppen.","description":"\u003cdiv\u003eDer Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe gemacht, Arbeitgeber in regionale Branchennetzwerke zu vereinen. Arbeitgeber empfehlen sich innerhalb der Netzwerke gegenseitig Zweit- und Drittkandidaten, die sie selbst nicht einstellen konnten. Jedes Mitgliedsunternehmen in unseren regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der solidarischen Fachkräftegewinnung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert veranschaulichen.\u0026nbsp; Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ingenieure, sowie an kaufmännische Berufsgruppen.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Fachkräftegewinnung in einer Solidargemeinschaft hat folgende Vorteile:\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuer Recruitingkanal: Empfohlene Bewerbende von anderen Mitgliedern\u003c/li\u003e\u003cli\u003eArbeitgeberimage: Sie geben abgesagten Kandidaten wichtige Orientierung in der Berufssuche\u003c/li\u003e\u003cli\u003eEmpfehlungsbund-Kooperationsnetzwerkes: Weiterleitung Ihres Stellenangebotes an Stellenbörsen, Hochschulen und Fachkräfteinitiativen von Bund und Länder\u003c/li\u003e\u003cli\u003eKPI: Zugriff auf Gehaltsbenchmarks und Recruitingperformancebenchmarks\u003c/li\u003e\u003cli\u003eAnzeigenflatrate inkusive\u003c/li\u003e\u003cli\u003eBewerbermanagementsystem EBMS inklusive\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003eSeit 2009 bewährt sich das Konzept der gegenseitigen Bewerberempfehlung.\u003cstrong\u003e \u003c/strong\u003eInsgesamt haben unsere Mitglieder\u003cstrong\u003e über 16.000 qualifizierte, hochrelevante IT-, MINT und kaufmännische Fachkräfte ohne Provision\u003c/strong\u003e \u003cstrong\u003eempfohlen. \u003cbr\u003e\u003c/strong\u003eDarüber hinaus ist der Empfehlungbund, dank seines umfangreichen Kooperationsnetzwerkes, ein leistungsstarke Lösung für Ihre Personalgewinnung.\u003cstrong\u003e In den letzten 365 Tagen erhielten unsere Mitglieder zusätzlich über 26.000 Bewerbungen durch den Empfehlungsbund.\u0026nbsp;\u003c/strong\u003e\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 min.)\u003c/li\u003e\u003cli\u003eVorstellung des Empfehlungsbundes (ca. 40 min.)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 min.)\u003c/li\u003e\u003c/ul\u003e","start":"2021-08-12T10:00:09.000+02:00","finish":"2021-08-12T11:00:09.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/60/wide_Alternative_Wege_der_Personalbeschaffung.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/60/wide_Alternative_Wege_der_Personalbeschaffung.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/60/register","show_url":"https://www.empfehlungsbund.de/events/60","events":[{"id":137,"display_line":"12.08.2021 - 10 bis 11:00 Uhr  - Alternative Wege der Personalbeschaffung am 12. August 2021 - Gastgeber: pludoni GmbH","subtitle":"Alternative Wege der Personalbeschaffung am 12. August 2021","city":null,"start":"2021-08-12T10:00:09.000+02:00","finish":"2021-08-12T11:00:09.000+02:00","address":"WebEx Online-Veranstaltung","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210812T110009\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210812T100009\nCATEGORIES:BUSINESS\nDESCRIPTION:Der Empfehlungsbund\\, das größte Arbeitgebernetzwerk Deutschl\n ands zur gegenseitigen Fachkräfteempfehlung\\, hat es sich zur Aufgabe ge\n macht\\, Arbeitgeber in regionale Branchennetzwerke zu vereinen. Arbeitge\n ber empfehlen sich innerhalb der Netzwerke gegenseitig Zweit- und Drittk\n andidaten\\, die sie selbst nicht einstellen konnten. Jedes Mitgliedsunte\n rnehmen in unseren regionalen Arbeitgebergemeinschaften profitiert von d\n en Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa\n . \\n\\nIn unserer einstündigen Online-Veranstaltung möchten wir Ihnen den\n  Empfehlungsbund und sein Kernkonzept der solidarischen Fachkräftegewinn\n ung\\, sowie seinen Leistungsumfang in den Bereichen Employer Branding\\, \n Personalmarketing und Personalauswahl detailliert veranschaulichen.  Uns\n ere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräft\n ebedarf wie Informatiker\\, Ingenieure\\, sowie an kaufmännische Berufsgru\n ppen.\\n\\nDie Fachkräftegewinnung in einer Solidargemeinschaft hat folgen\n de Vorteile: \\n\\n\\n* Neuer Recruitingkanal: Empfohlene Bewerbende von an\n deren Mitgliedern* Arbeitgeberimage: Sie geben abgesagten Kandidaten wic\n htige Orientierung in der Berufssuche* Empfehlungsbund-Kooperationsnetzw\n erkes: Weiterleitung Ihres Stellenangebotes an Stellenbörsen\\, Hochschul\n en und Fachkräfteinitiativen von Bund und Länder* KPI: Zugriff auf Gehal\n tsbenchmarks und Recruitingperformancebenchmarks* Anzeigenflatrate inkus\n ive* Bewerbermanagementsystem EBMS inklusive\\nSeit 2009 bewährt sich das\n  Konzept der gegenseitigen Bewerberempfehlung. Insgesamt haben unsere Mi\n tglieder über 16.000 qualifizierte\\, hochrelevante IT-\\, MINT und kaufmä\n nnische Fachkräfte ohne Provision empfohlen. \\nDarüber hinaus ist der Em\n pfehlungbund\\, dank seines umfangreichen Kooperationsnetzwerkes\\, ein le\n istungsstarke Lösung für Ihre Personalgewinnung. In den letzten 365 Tage\n n erhielten unsere Mitglieder zusätzlich über 26.000 Bewerbungen durch d\n en Empfehlungsbund. \\n\\n* Willkommensrunde (ca. 10 min.)* Vorstellung de\n s Empfehlungsbundes (ca. 40 min.)* Fragerunde (ca. 10 min.)\nURL:https://www.empfehlungsbund.de/events/60\nSUMMARY:Webinar: Alternative Wege der Personalbeschaffung am 12. August 2\n 021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/60\nATTACH:https://www.empfehlungsbund.de/events/60\nLOCATION:pludoni GmbH\\, WebEx Online-Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDer Empfehlungsbund, das größ\n te Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlu\n ng, hat es sich zur Aufgabe gemacht, Arbeitgeber in regionale Branchenne\n tzwerke zu vereinen. Arbeitgeber empfehlen sich innerhalb der Netzwerke \n gegenseitig Zweit- und Drittkandidaten, die sie selbst nicht einstellen \n konnten. Jedes Mitgliedsunternehmen in unseren regionalen Arbeitgebergem\n einschaften profitiert von den Personalbeschaffungsmaßnahmen aller ander\n en Mitglieder und vice versa. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn unserer einstündigen On\n line-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernko\n nzept der solidarischen Fachkräftegewinnung, sowie seinen Leistungsumfan\n g in den Bereichen Employer Branding, Personalmarketing und Personalausw\n ahl detailliert veranschaulichen.\u0026nbsp; Unsere Veranstaltung richtet sic\n h insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ing\n enieure, sowie an kaufmännische Berufsgruppen.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Fachk\n räftegewinnung in einer Solidargemeinschaft hat folgende Vorteile:\u0026nbsp;\n \u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuer Recruitingkanal: Empfohlene Bewerbende von a\n nderen Mitgliedern\u003c/li\u003e\u003cli\u003eArbeitgeberimage: Sie geben abgesagten Kandid\n aten wichtige Orientierung in der Berufssuche\u003c/li\u003e\u003cli\u003eEmpfehlungsbund-Ko\n operationsnetzwerkes: Weiterleitung Ihres Stellenangebotes an Stellenbör\n sen, Hochschulen und Fachkräfteinitiativen von Bund und Länder\u003c/li\u003e\u003cli\u003eK\n PI: Zugriff auf Gehaltsbenchmarks und Recruitingperformancebenchmarks\u003c/l\n i\u003e\u003cli\u003eAnzeigenflatrate inkusive\u003c/li\u003e\u003cli\u003eBewerbermanagementsystem EBMS in\n klusive\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003eSeit 2009 bewährt sich das Konzept der gegense\n itigen Bewerberempfehlung.\u003cstrong\u003e \u003c/strong\u003eInsgesamt haben unsere Mitgl\n ieder\u003cstrong\u003e über 16.000 qualifizierte, hochrelevante IT-, MINT und kau\n fmännische Fachkräfte ohne Provision\u003c/strong\u003e \u003cstrong\u003eempfohlen. \u003cbr\u003e\u003c/s\n trong\u003eDarüber hinaus ist der Empfehlungbund, dank seines umfangreichen K\n ooperationsnetzwerkes, ein leistungsstarke Lösung für Ihre Personalgewin\n nung.\u003cstrong\u003e In den letzten 365 Tagen erhielten unsere Mitglieder zusät\n zlich über 26.000 Bewerbungen durch den Empfehlungsbund.\u0026nbsp;\u003c/strong\u003e\u003c\n /div\u003e\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 min.)\u003c/li\u003e\u003cli\u003eVorstellung des Empf\n ehlungsbundes (ca. 40 min.)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 min.)\u003c/li\u003e\u003c/ul\u003e\u003c/\n BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":59,"name":"partnerworkshop_mittlr","hashtag":"ebcw","title":"Workshop: Personalentleih und -verleih mit Mittlr ","teaser":"Empfehlungsbund bietet jetzt die Möglichkeit für zeitlich befristete Projekte IT-Mitarbeitende zwischen Empfehlungsbundmitglieder temporär anzuheuern bzw. auszuleihen. Das Ganze wird über unseren Service Mittlr.de realisiert. Mithilfe der neuen Demoversion von Mittlr.de stellen wir Ihnen in einem einstündigen Workshop die Personalver- und entleihfunktion detailliert vor.","teaser_hrfilter":"Empfehlungsbund bietet jetzt die Möglichkeit für zeitlich befristete Projekte IT-Mitarbeitende zwischen Empfehlungsbundmitglieder temporär anzuheuern bzw. auszuleihen. Das Ganze wird über unseren Service Mittlr.de realisiert. Mithilfe der neuen Demoversion von Mittlr.de stellen wir Ihnen in einem einstündigen Workshop die Personalver- und entleihfunktion detailliert vor.","countdown_visible":true,"countdown_start":"2021-07-20T16:00:27.000+02:00","countdown_description":"Empfehlungsbund bietet jetzt die Möglichkeit für zeitlich befristete Projekte IT-Mitarbeitende zwischen Empfehlungsbundmitglieder temporär anzuheuern bzw. auszuleihen. Das Ganze wird über unseren Service Mittlr.de realisiert. Mithilfe der neuen Demoversion von Mittlr.de stellen wir Ihnen in einem einstündigen Workshop die Personalver- und entleihfunktion detailliert vor.","description":"\u003cdiv\u003eEmpfehlungsbund bietet für seine Mitglieder die Möglichkeit für zeitlich befristete Projekte zusätzliche IT-Mitarbeitende temporär anzuheuern bzw. auszuleihen. Das Ganze wird mittels Projektbeschreibungen und Mitarbeiterprofile über unseren Service Mittlr.de realisiert. Mittlr.de ist für alle EB-Mitglieder kostenfrei nutzbar.\u003cbr\u003e\u0026nbsp;\u003cbr\u003e\u0026nbsp;Mithilfe der neuen \u003ca href=\"https://www.mittlr.de/demo\"\u003e\u003cstrong\u003eDemoversion\u003c/strong\u003e\u003c/a\u003e von Mittlr.de stellen wir Ihnen in einem einstündigen Workshop die Personalver- und entleihfunktion detailliert vor. Wir demonstrieren Ihnen das Anlegen der Projektbeschreibungen und Mitarbeiterprofile. Außerdem erfahren Sie, wie sich erste Kontakte herstellen lassen. Mittlr gibt keine Konditionen für Ihre Vermittlung vor. Sie einigen sich mit den Mitgliedern individuell. Der Service dient lediglich als Ihre Kontaktplattform.\u0026nbsp;\u003cbr\u003e\u0026nbsp;\u003cbr\u003e In Vorbereitung für den Workshop ist es hilfreich, dass jeder Teilnehmer über sein/ihr EB-Profil den Service Mittlr.de aktiviert.\u0026nbsp;\u003cbr\u003e\u0026nbsp;\u003cbr\u003e Wir freuen uns auf rege Teilnahme. Wenn Sie vorab Fragen zu Mittlr haben sollten, helfen Ihnen Ihre Community Manager gerne weiter.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eVorstellungsrunde\u003c/li\u003e\u003cli\u003eKandidatenvermittlung durch externe Dienstleister (5 min)\u003c/li\u003e\u003cli\u003eVermittlung für EB-Mitglieder untereinander (40 min)\u003cul\u003e\u003cli\u003eEinrichtung eines Vermittlungsgesuchs/-angebots\u0026nbsp;\u003c/li\u003e\u003cli\u003eMitarbeiterprofil erstellen und für Projekt vorschlagen\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eFrage- und Diskussionsrunde (15min)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eHinweis: Der Verantwortungsbereich für den Personaleinkauf bzw. Personalvertrieb liegt in einigen Unternehmen nicht allein beim Personalmanagment. In diesem Fall holen Sie die entsprechenden Verantwortlichen mit in den Workshop. Leiten Sie gerne diese Eventeinladung an Ihre entsprechenden Kollegen weiter. Vielen Dank!\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2021-08-05T10:00:40.000+02:00","finish":"2021-08-05T11:00:40.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/59/wide_Mittlr_Banner_2000x800.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/59/wide_Mittlr_Banner_2000x800.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/59/register","show_url":"https://www.empfehlungsbund.de/events/59","events":[{"id":136,"display_line":"05.08.2021 - 10 bis 11:00 Uhr  - Online-Workshop: Personalver- und -entleih mit Mittlr - Gastgeber: pludoni GmbH","subtitle":"Online-Workshop: Personalver- und -entleih mit Mittlr","city":null,"start":"2021-08-05T10:00:40.000+02:00","finish":"2021-08-05T11:00:40.000+02:00","address":"WebEx Online-Veranstaltung","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210805T110040\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210805T100040\nCATEGORIES:BUSINESS\nDESCRIPTION:Empfehlungsbund bietet für seine Mitglieder die Möglichkeit f\n ür zeitlich befristete Projekte zusätzliche IT-Mitarbeitende temporär an\n zuheuern bzw. auszuleihen. Das Ganze wird mittels Projektbeschreibungen \n und Mitarbeiterprofile über unseren Service Mittlr.de realisiert. Mittlr\n .de ist für alle EB-Mitglieder kostenfrei nutzbar.\\n \\n Mithilfe der neu\n en Demoversion von Mittlr.de stellen wir Ihnen in einem einstündigen Wor\n kshop die Personalver- und entleihfunktion detailliert vor. Wir demonstr\n ieren Ihnen das Anlegen der Projektbeschreibungen und Mitarbeiterprofile\n . Außerdem erfahren Sie\\, wie sich erste Kontakte herstellen lassen. Mit\n tlr gibt keine Konditionen für Ihre Vermittlung vor. Sie einigen sich mi\n t den Mitgliedern individuell. Der Service dient lediglich als Ihre Kont\n aktplattform. \\n \\n In Vorbereitung für den Workshop ist es hilfreich\\, \n dass jeder Teilnehmer über sein/ihr EB-Profil den Service Mittlr.de akti\n viert. \\n \\n Wir freuen uns auf rege Teilnahme. Wenn Sie vorab Fragen zu\n  Mittlr haben sollten\\, helfen Ihnen Ihre Community Manager gerne weiter\n .\\n\\n\\n\\n* Vorstellungsrunde* Kandidatenvermittlung durch externe Dienst\n leister (5 min)* Vermittlung für EB-Mitglieder untereinander (40 min)* E\n inrichtung eines Vermittlungsgesuchs/-angebots * Mitarbeiterprofil erste\n llen und für Projekt vorschlagen* Frage- und Diskussionsrunde (15min)\\nH\n inweis: Der Verantwortungsbereich für den Personaleinkauf bzw. Personalv\n ertrieb liegt in einigen Unternehmen nicht allein beim Personalmanagment\n . In diesem Fall holen Sie die entsprechenden Verantwortlichen mit in de\n n Workshop. Leiten Sie gerne diese Eventeinladung an Ihre entsprechenden\n  Kollegen weiter. Vielen Dank!\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/59\nSUMMARY:Workshop: Personalentleih und -verleih mit Mittlr \nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/59\nATTACH:https://www.empfehlungsbund.de/events/59\nLOCATION:pludoni GmbH\\, WebEx Online-Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eEmpfehlungsbund bietet für se\n ine Mitglieder die Möglichkeit für zeitlich befristete Projekte zusätzli\n che IT-Mitarbeitende temporär anzuheuern bzw. auszuleihen. Das Ganze wir\n d mittels Projektbeschreibungen und Mitarbeiterprofile über unseren Serv\n ice Mittlr.de realisiert. Mittlr.de ist für alle EB-Mitglieder kostenfre\n i nutzbar.\u003cbr\u003e\u0026nbsp;\u003cbr\u003e\u0026nbsp;Mithilfe der neuen \u003ca href=\"https://www.mi\n ttlr.de/demo\"\u003e\u003cstrong\u003eDemoversion\u003c/strong\u003e\u003c/a\u003e von Mittlr.de stellen wir\n  Ihnen in einem einstündigen Workshop die Personalver- und entleihfunkti\n on detailliert vor. Wir demonstrieren Ihnen das Anlegen der Projektbesch\n reibungen und Mitarbeiterprofile. Außerdem erfahren Sie, wie sich erste \n Kontakte herstellen lassen. Mittlr gibt keine Konditionen für Ihre Vermi\n ttlung vor. Sie einigen sich mit den Mitgliedern individuell. Der Servic\n e dient lediglich als Ihre Kontaktplattform.\u0026nbsp;\u003cbr\u003e\u0026nbsp;\u003cbr\u003e In Vorb\n ereitung für den Workshop ist es hilfreich, dass jeder Teilnehmer über s\n ein/ihr EB-Profil den Service Mittlr.de aktiviert.\u0026nbsp;\u003cbr\u003e\u0026nbsp;\u003cbr\u003e W\n ir freuen uns auf rege Teilnahme. Wenn Sie vorab Fragen zu Mittlr haben \n sollten, helfen Ihnen Ihre Community Manager gerne weiter.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\n \u003cul\u003e\u003cli\u003eVorstellungsrunde\u003c/li\u003e\u003cli\u003eKandidatenvermittlung durch externe Di\n enstleister (5 min)\u003c/li\u003e\u003cli\u003eVermittlung für EB-Mitglieder untereinander \n (40 min)\u003cul\u003e\u003cli\u003eEinrichtung eines Vermittlungsgesuchs/-angebots\u0026nbsp;\u003c/l\n i\u003e\u003cli\u003eMitarbeiterprofil erstellen und für Projekt vorschlagen\u003c/li\u003e\u003c/ul\u003e\u003c\n /li\u003e\u003cli\u003eFrage- und Diskussionsrunde (15min)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eHi\n nweis: Der Verantwortungsbereich für den Personaleinkauf bzw. Personalve\n rtrieb liegt in einigen Unternehmen nicht allein beim Personalmanagment.\n  In diesem Fall holen Sie die entsprechenden Verantwortlichen mit in den\n  Workshop. Leiten Sie gerne diese Eventeinladung an Ihre entsprechenden \n Kollegen weiter. Vielen Dank!\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\n \u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":58,"name":"coworkr Workshop","hashtag":"ebcw","title":"Einrichtungsworkshop: MA-werben-MA Programme mit Coworkr ","teaser":"Wir veranstalten mit unseren EB-Mitgliedern einen Coworkr Einrichtungsworkshop. In diesem 45 minütigen Workshop demonstrieren wir Ihnen live die E-Mail Kampagnenfunktion von Coworkr. Gemeinsam legen wir beispielhaft eine erste Coworkr-Kampagne für ein Mitarbeiter-werben-Mitarbeiter Programm an. Anschließend beantworten wir in einer Fragerunde alle offen gebliebenen Fragen zu Coworkr.","teaser_hrfilter":"Wir veranstalten mit unseren EB-Mitgliedern einen Coworkr Einrichtungsworkshop. In diesem 45 minütigen Workshop demonstrieren wir Ihnen live die E-Mail Kampagnenfunktion von Coworkr. Gemeinsam legen wir beispielhaft eine erste Coworkr-Kampagne für ein Mitarbeiter-werben-Mitarbeiter Programm an. Anschließend beantworten wir in einer Fragerunde alle offen gebliebenen Fragen zu Coworkr.","countdown_visible":true,"countdown_start":"2021-07-06T11:00:05.000+02:00","countdown_description":"Wir veranstalten mit unseren EB-Mitgliedern einen Coworkr Einrichtungsworkshop. In diesem 45 minütigen Workshop demonstrieren wir Ihnen live die E-Mail Kampagnenfunktion von Coworkr. Gemeinsam legen wir beispielhaft eine erste Coworkr-Kampagne für ein Mitarbeiter-werben-Mitarbeiter Programm an. Anschließend beantworten wir in einer Fragerunde alle offen gebliebenen Fragen zu Coworkr.","description":"\u003cdiv\u003eDas neue Update von Coworkr, das wir Ihnen auf dem offenen Expertenforum Personal vorstellen konnten, stieß bei unseren Teilnehmern auf reichlich Interesse. Mit Coworkr können Sie Mitarbeiter-werben-Mitarbeiter Programme via E-Mail Kampagnen erstellen. Mittels eines konfigurierbaren automatischen Newsletters inkl. Stellenliste informieren Sie Ihre Kollegen regelmäßig über das aktuelle Stellenangebot und bieten vielfältige Share-Optionen (WhatsApp, Twitter, Xing uvm.) an, die die Kollegen in ihren Netzwerken weiterteilen können.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eDarauf aufbauend möchten wir mit unseren Partnern einen Coworkr Einrichtungsworkshop durchführen, um Ihnen die E-Mail Kampagnenfunktion von Coworkr live zu demonstrieren und bereits während des Workshops mit Ihnen gemeinsam eine erste Coworkr-Kampagne für ein Mitarbeiter-werben-Mitarbeiter Programm beispielhaft anlegen. Anschließend beantworten wir in einer Fragerunde alle offen gebliebenen Fragen zu Coworkr. Der Workshop wird ca. 45 Minuten dauern.\u0026nbsp;\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eVorstellungsrunde\u003c/li\u003e\u003cli\u003eEinrichtung einer Coworkr-Kampagne (30min)\u003cul\u003e\u003cli\u003eAnlegen des Newsletters\u003c/li\u003e\u003cli\u003eAnlegen der Coworkr-Landingpage\u003c/li\u003e\u003cli\u003eFilteroptionen der Stellenliste\u003c/li\u003e\u003cli\u003eAnlegen von Kollegen\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eFrage- und Diskussionsrunde (15min)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003eHinweis: Die Einrichtung einer Coworkr-Kampagne ist recht fix erledigt. Im Grunde können Sie Ihre eigene Kampagne live mit uns gemeinsam anlegen! Wenn Sie im Zuge des Workshops Ihre eigene Coworkr-Kampagne gleich mit erstellen wollen, wäre es ratsam ein Coworkr-Konto bereits aktiviert zu haben. Coworkr können Sie von Ihrem \u003ca href=\"https://login.empfehlungsbund.de/\"\u003e\u003cstrong\u003eEB-Dashboard aus aktivieren\u003c/strong\u003e\u003c/a\u003e. Für EB-Mitglieder ist Coworkr selbstverständlich kostenfrei nutzbar.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2021-07-15T10:00:05.000+02:00","finish":"2021-07-15T10:45:05.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/58/wide_Coworkr_Mitarbeiter_werben_Mitarbeiter_938x400.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/58/wide_Coworkr_Mitarbeiter_werben_Mitarbeiter_938x400.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/58/register","show_url":"https://www.empfehlungsbund.de/events/58","events":[{"id":135,"display_line":"15.07.2021 - 10 bis 10:45 Uhr  - Einrichtungsworkshop: MA-werben-MA Programme mit Coworkr  - Gastgeber: pludoni GmbH","subtitle":"Einrichtungsworkshop: MA-werben-MA Programme mit Coworkr ","city":null,"start":"2021-07-15T10:00:05.000+02:00","finish":"2021-07-15T10:45:05.000+02:00","address":"WebEx Online-Veranstaltung","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210715T104505\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210715T100005\nCATEGORIES:BUSINESS\nDESCRIPTION:Das neue Update von Coworkr\\, das wir Ihnen auf dem offenen E\n xpertenforum Personal vorstellen konnten\\, stieß bei unseren Teilnehmern\n  auf reichlich Interesse. Mit Coworkr können Sie Mitarbeiter-werben-Mita\n rbeiter Programme via E-Mail Kampagnen erstellen. Mittels eines konfigur\n ierbaren automatischen Newsletters inkl. Stellenliste informieren Sie Ih\n re Kollegen regelmäßig über das aktuelle Stellenangebot und bieten vielf\n ältige Share-Optionen (WhatsApp\\, Twitter\\, Xing uvm.) an\\, die die Koll\n egen in ihren Netzwerken weiterteilen können. \\n\\nDarauf aufbauend möcht\n en wir mit unseren Partnern einen Coworkr Einrichtungsworkshop durchführ\n en\\, um Ihnen die E-Mail Kampagnenfunktion von Coworkr live zu demonstri\n eren und bereits während des Workshops mit Ihnen gemeinsam eine erste Co\n workr-Kampagne für ein Mitarbeiter-werben-Mitarbeiter Programm beispielh\n aft anlegen. Anschließend beantworten wir in einer Fragerunde alle offen\n  gebliebenen Fragen zu Coworkr. Der Workshop wird ca. 45 Minuten dauern.\n  \\n\\n* Vorstellungsrunde* Einrichtung einer Coworkr-Kampagne (30min)* An\n legen des Newsletters* Anlegen der Coworkr-Landingpage* Filteroptionen d\n er Stellenliste* Anlegen von Kollegen* Frage- und Diskussionsrunde (15mi\n n)\\nHinweis: Die Einrichtung einer Coworkr-Kampagne ist recht fix erledi\n gt. Im Grunde können Sie Ihre eigene Kampagne live mit uns gemeinsam anl\n egen! Wenn Sie im Zuge des Workshops Ihre eigene Coworkr-Kampagne gleich\n  mit erstellen wollen\\, wäre es ratsam ein Coworkr-Konto bereits aktivie\n rt zu haben. Coworkr können Sie von Ihrem EB-Dashboard aus aktivieren. F\n ür EB-Mitglieder ist Coworkr selbstverständlich kostenfrei nutzbar.\\n\\n\\\n n\nURL:https://www.empfehlungsbund.de/events/58\nSUMMARY:Einrichtungsworkshop: MA-werben-MA Programme mit Coworkr \nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/58\nATTACH:https://www.empfehlungsbund.de/events/58\nLOCATION:pludoni GmbH\\, WebEx Online-Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDas neue Update von Coworkr, \n das wir Ihnen auf dem offenen Expertenforum Personal vorstellen konnten,\n  stieß bei unseren Teilnehmern auf reichlich Interesse. Mit Coworkr könn\n en Sie Mitarbeiter-werben-Mitarbeiter Programme via E-Mail Kampagnen ers\n tellen. Mittels eines konfigurierbaren automatischen Newsletters inkl. S\n tellenliste informieren Sie Ihre Kollegen regelmäßig über das aktuelle S\n tellenangebot und bieten vielfältige Share-Optionen (WhatsApp, Twitter, \n Xing uvm.) an, die die Kollegen in ihren Netzwerken weiterteilen können.\n \u0026nbsp;\u003cbr\u003e\u003cbr\u003eDarauf aufbauend möchten wir mit unseren Partnern einen Co\n workr Einrichtungsworkshop durchführen, um Ihnen die E-Mail Kampagnenfun\n ktion von Coworkr live zu demonstrieren und bereits während des Workshop\n s mit Ihnen gemeinsam eine erste Coworkr-Kampagne für ein Mitarbeiter-we\n rben-Mitarbeiter Programm beispielhaft anlegen. Anschließend beantworten\n  wir in einer Fragerunde alle offen gebliebenen Fragen zu Coworkr. Der W\n orkshop wird ca. 45 Minuten dauern.\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\u003eVorstellungsrunde\n \u003c/li\u003e\u003cli\u003eEinrichtung einer Coworkr-Kampagne (30min)\u003cul\u003e\u003cli\u003eAnlegen des N\n ewsletters\u003c/li\u003e\u003cli\u003eAnlegen der Coworkr-Landingpage\u003c/li\u003e\u003cli\u003eFilteroptione\n n der Stellenliste\u003c/li\u003e\u003cli\u003eAnlegen von Kollegen\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eFrage-\n  und Diskussionsrunde (15min)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003eHinweis: Die Einrichtung\n  einer Coworkr-Kampagne ist recht fix erledigt. Im Grunde können Sie Ihr\n e eigene Kampagne live mit uns gemeinsam anlegen! Wenn Sie im Zuge des W\n orkshops Ihre eigene Coworkr-Kampagne gleich mit erstellen wollen, wäre \n es ratsam ein Coworkr-Konto bereits aktiviert zu haben. Coworkr können S\n ie von Ihrem \u003ca href=\"https://login.empfehlungsbund.de/\"\u003e\u003cstrong\u003eEB-Dash\n board aus aktivieren\u003c/strong\u003e\u003c/a\u003e. Für EB-Mitglieder ist Coworkr selbstv\n erständlich kostenfrei nutzbar.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":57,"name":"Akquise_webex_jobwert_3_datenerfassung","hashtag":"ebcw","title":"Webinar: Gehaltsbenchmarking für KMU mit Jobwert.info","teaser":"Mit Jobwert.info bietet der Empfehlungsbund einen zuverlässigen Gehaltsvergleich zwischen Unternehmen derselben Branche und Region an. Jobwert.info umfasst mit über 27000 Gehaltsdatensätzen die real gezahlten Gehälter von teilnehmenden kleinen und mittelständischen Unternehmen aus 100 Standorten bundesweit. Jedem teilnehmenden Unternehmen am Gehaltsbenchmark wird eine detaillierte Auswertung nach eigens gewählten Filterkriterien angeboten. \r\n\r\nWährend unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Datenerfassungsprozess mit Jobwert.info detailiert vorstellen. Anhand einer Live-Demonstration zeigen wir Ihnen, wie sich mit Jobwert.info Gehaltsdaten für gefragte Berufsprofile wie Softwareentwickler, Berater, Projektmanager erfassen und vergleichen lassen. Insgesamt sind 19 verschiedene Mitarbeitertypen erfassbar. Am Beispiel aktueller Benchmarkingergebnisse 2021 erläutern wir, wie die eingesendeten Daten verarbeitet und verglichen werden. In einer anschließenden Fragerunde beantworten wir liebend gern Ihre offenen Fragen zur Teilnahme und Auswertung am Gehaltsbenchmark mit Jobwert.info.","teaser_hrfilter":"Erfahren Sie in unserer einstündigen Online-Veranstaltung alles Wissenswerte über Jobwert.infos Gehaltsdatenerfassung. Anhand einer Live-Demonstration zeigen wir Ihnen, wie sich mit Jobwert.info Gehaltsdaten für gefragte Berufsprofile wie Softwareentwickler, Berater, Projektmanager detailiert erfassen und vergleichen lassen.","countdown_visible":true,"countdown_start":"2021-06-02T12:00:12.000+02:00","countdown_description":"Erfahren Sie in unserer einstündigen Online-Veranstaltung alles Wissenswerte über Jobwert.infos Gehaltsdatenerfassung. Anhand einer Live-Demonstration zeigen wir Ihnen, wie sich mit Jobwert.info Gehaltsdaten für gefragte Berufsprofile wie Softwareentwickler, Berater, Projektmanager detailiert erfassen und vergleichen lassen.","description":"\u003cdiv\u003eMit Jobwert.info bietet der Empfehlungsbund einen zuverlässigen Gehaltsvergleich zwischen Unternehmen derselben Branche und Region an. Jobwert.info umfasst mit über 27000 Gehaltsdatensätzen die real gezahlten Gehälter von teilnehmenden kleinen und mittelständischen Unternehmen aus 100 Standorten bundesweit. Jedem teilnehmenden Unternehmen am Gehaltsbenchmark wird eine detaillierte Auswertung nach eigens gewählten Filterkriterien angeboten.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eWährend unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Datenerfassungsprozess mit Jobwert.info detailiert vorstellen. Anhand einer Live-Demonstration zeigen wir Ihnen, wie sich mit Jobwert.info Gehaltsdaten für gefragte Berufsprofile wie Softwareentwickler, Berater, Projektmanager erfassen und vergleichen lassen. Insgesamt sind 19 verschiedene Mitarbeitertypen erfassbar. Am Beispiel aktueller Benchmarkingergebnisse 2021 erläutern wir, wie die eingesendeten Daten verarbeitet und verglichen werden. In einer anschließenden Fragerunde beantworten wir liebend gern Ihre offenen Fragen zur Teilnahme und Auswertung am Gehaltsbenchmark mit Jobwert.info.\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eWillkommensrunde und Einführung (ca. 15 Minuten)\u003c/li\u003e\u003cli\u003eVorstellung der Datenerfassung (ca. 30 Minuten)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 15 Minuten)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2021-06-17T10:00:12.000+02:00","finish":"2021-06-17T11:00:12.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/57/wide_Banner_Gehaltsbenchmark_f%C3%BCr_KMU_3.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/57/wide_Banner_Gehaltsbenchmark_f%C3%BCr_KMU_3.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/57/Logo_Gehaltsbenchmarking_500x500.png","register_url":"https://www.empfehlungsbund.de/events/57/register","show_url":"https://www.empfehlungsbund.de/events/57","events":[{"id":134,"display_line":"17.06.2021 - 10 bis 11:00 Uhr  - Online-Vorstellung: Gehaltsbenchmarks für KMU mit Jobwert.info - Gastgeber: Empfehlungsbund","subtitle":"Online-Vorstellung: Gehaltsbenchmarks für KMU mit Jobwert.info","city":null,"start":"2021-06-17T10:00:12.000+02:00","finish":"2021-06-17T11:00:12.000+02:00","address":"WebEx Online-Veranstaltung","event_host":"Empfehlungsbund","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210617T110012\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210617T100012\nCATEGORIES:BUSINESS\nDESCRIPTION:Mit Jobwert.info bietet der Empfehlungsbund einen zuverlässig\n en Gehaltsvergleich zwischen Unternehmen derselben Branche und Region an\n . Jobwert.info umfasst mit über 27000 Gehaltsdatensätzen die real gezahl\n ten Gehälter von teilnehmenden kleinen und mittelständischen Unternehmen\n  aus 100 Standorten bundesweit. Jedem teilnehmenden Unternehmen am Gehal\n tsbenchmark wird eine detaillierte Auswertung nach eigens gewählten Filt\n erkriterien angeboten. \\n\\nWährend unserer einstündigen Online-Veranstal\n tung möchten wir Ihnen den Datenerfassungsprozess mit Jobwert.info detai\n liert vorstellen. Anhand einer Live-Demonstration zeigen wir Ihnen\\, wie\n  sich mit Jobwert.info Gehaltsdaten für gefragte Berufsprofile wie Softw\n areentwickler\\, Berater\\, Projektmanager erfassen und vergleichen lassen\n . Insgesamt sind 19 verschiedene Mitarbeitertypen erfassbar. Am Beispiel\n  aktueller Benchmarkingergebnisse 2021 erläutern wir\\, wie die eingesend\n eten Daten verarbeitet und verglichen werden. In einer anschließenden Fr\n agerunde beantworten wir liebend gern Ihre offenen Fragen zur Teilnahme \n und Auswertung am Gehaltsbenchmark mit Jobwert.info.\\n\\n* Willkommensrun\n de und Einführung (ca. 15 Minuten)* Vorstellung der Datenerfassung (ca. \n 30 Minuten)* Fragerunde (ca. 15 Minuten)\\n\\n\nURL:https://www.empfehlungsbund.de/events/57\nSUMMARY:Webinar: Gehaltsbenchmarking für KMU mit Jobwert.info\nORGANIZER;CN=Empfehlungsbund / Empfehlungsbund.de:https://www.empfehlungs\n bund.de/events/57\nATTACH:https://www.empfehlungsbund.de/events/57\nLOCATION:Empfehlungsbund\\, WebEx Online-Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eMit Jobwert.info bietet der E\n mpfehlungsbund einen zuverlässigen Gehaltsvergleich zwischen Unternehmen\n  derselben Branche und Region an. Jobwert.info umfasst mit über 27000 Ge\n haltsdatensätzen die real gezahlten Gehälter von teilnehmenden kleinen u\n nd mittelständischen Unternehmen aus 100 Standorten bundesweit. Jedem te\n ilnehmenden Unternehmen am Gehaltsbenchmark wird eine detaillierte Auswe\n rtung nach eigens gewählten Filterkriterien angeboten.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eWähr\n end unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Date\n nerfassungsprozess mit Jobwert.info detailiert vorstellen. Anhand einer \n Live-Demonstration zeigen wir Ihnen, wie sich mit Jobwert.info Gehaltsda\n ten für gefragte Berufsprofile wie Softwareentwickler, Berater, Projektm\n anager erfassen und vergleichen lassen. Insgesamt sind 19 verschiedene M\n itarbeitertypen erfassbar. Am Beispiel aktueller Benchmarkingergebnisse \n 2021 erläutern wir, wie die eingesendeten Daten verarbeitet und verglich\n en werden. In einer anschließenden Fragerunde beantworten wir liebend ge\n rn Ihre offenen Fragen zur Teilnahme und Auswertung am Gehaltsbenchmark \n mit Jobwert.info.\u003c/div\u003e\u003cul\u003e\u003cli\u003eWillkommensrunde und Einführung (ca. 15 M\n inuten)\u003c/li\u003e\u003cli\u003eVorstellung der Datenerfassung (ca. 30 Minuten)\u003c/li\u003e\u003cli\u003e\n Fragerunde (ca. 15 Minuten)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":56,"name":"OXFP_05_2021","hashtag":"ofxp","title":"Offenes Expertenforum Personalmanagement 2021","teaser":"Die Agenda des Expertenforums dieses Jahres beinhaltet, neben der Auswertung des Gehaltsbenchmarks 2021 und den technischen Updates, einen besonderen Fokus auf die Anforderungen moderner Jobportale. Aus Sicht der Bewerbenden müssen die Inhalte eines Jobportals, insb. Stellenanzeigen und Arbeitgeberprofile, einen wachsenden Informationsbedürfnis gerecht werden, sodass diese auch in Zukunft eine attraktive Anlaufstelle für die Jobsuche bilden.","teaser_hrfilter":"Die Agenda des Expertenforums dieses Jahres beinhaltet, neben der Auswertung des Gehaltsbenchmarks 2021 und den technischen Updates, einen besonderen Fokus auf die Anforderungen moderner Jobportale aus Sicht eines Jobsuchenden, insb. das Informationsangebot auf Stellenanzeigen und Arbeitgeberprofilen.  ","countdown_visible":true,"countdown_start":"2021-04-20T11:00:34.000+02:00","countdown_description":"Die Agenda des Expertenforums dieses Jahres beinhaltet, neben der Auswertung des Gehaltsbenchmarks 2021 und den technischen Updates, einen besonderen Fokus auf die Anforderungen moderner Jobportale aus Sicht eines Jobsuchenden, insb. das Informationsangebot auf Stellenanzeigen und Arbeitgeberprofilen.  ","description":"\u003cdiv\u003e\u003cstrong\u003eDie Agenda des Expertenforums dieses Jahres beinhaltet, neben der Auswertung des Gehaltsbenchmarks 2021 und den technischen Updates, einen besonderen Fokus auf die Anforderungen moderner Jobportale.\u003c/strong\u003e Aus Sicht der Bewerbenden müssen die Inhalte eines Jobportals, insb. Stellenanzeigen und Arbeitgeberprofile, ein wachsendes Informationsbedürfnis gerecht werden, sodass diese auch in Zukunft eine attraktive Anlaufstelle für die Jobsuche bilden. Im Rahmen des geplanten Redesigns unserer Communityportale möchten wir mit Ihnen zu diesem Thema ein Anforderungsworkshop durchführen und hier die Sicht des Bewerbenden, wie auch die arbeitgeberseitigen Anforderungen aufnehmen und diskutieren.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003e\u0026nbsp;\u003c/strong\u003eIm Rahmen des jährlichen Expertenforum stellt der Empfehlungsbund regelmäßig aktuelle Entwicklungen und Studien in den Bereichen Employer Branding, Personalmarketing und Personalauswahl vor. Das offene Expertenforum Personalmanagement richtet sich speziell an Personalmanager und Führungskräfte regionaler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfolgen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlichen Austausch zu Fragen der Personalgewinnung und wir informieren Sie über technische Innovationen für eine erfolgreichere Personalbedarfsdeckung. Weitere Details zum Empfehlungsbund finden Sie auf den \u003ca href=\"https://www.empfehlungsbund.de/mediadaten/?utm_medium=email\u0026amp;utm_source=crm\u0026amp;utm_campaign=ebcw\"\u003e\u003cstrong\u003eMediadaten des Empfehlungsbundes\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e. \u003cbr\u003e\u003cbr\u003eDas offene Expertenforum Personalmanagement 2021 findet online in vier identischen Sessions zu unterschiedlichen Zeiten statt. \u003c/strong\u003eDie Teilnahme am Expertenforum Personalmanagement ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme erhalten Sie\u0026nbsp; ca. 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein Headset.\u003c/div\u003e","agenda":"\u003cdiv\u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und den Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eAnkündigung: Mittlr.de für IT-Personaldienstleistungen Vorstellung des Prinzips\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eEr­geb­nis­se des Ge­halts­bench­marks 2021 mit Job­wert.info\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWäh­rend der jähr­li­chen Da­ten­er­he­bungs­pha­se vom 1. Ja­nu­ar bis 31. März konn­ten teil­neh­men­de Un­ter­neh­men ihre Ge­häl­ter und Be­ne­fit-Leis­tun­gen ein­rei­chen und sich re­gio­nal bench­mar­ken las­sen. In un­se­rer Bench­mar­k­aus­wer­tung prä­sen­tie­ren wir Ih­nen ak­tu­el­le Zah­len zu Ge­häl­tern und Be­ne­fits auf re­gio­na­lem Ni­veau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eEinleitungsvortrag zum Workshop: Anforderung an moderne Stellenportale\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStudien zu Stellenanzeigen: Erwartung der Bewerbenden an eine Stelle\u003c/li\u003e\u003cli\u003eEntwicklung der Portale von Web 1.0 bis Web 3.0\u003c/li\u003e\u003cli\u003eRedesign der Portale - Vorstellung des ersten Prototypes\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Anforderungsanalyse zum Redesign unserer Portale\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStellenanzeigen und Stellensuche (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003eArbeitgeberprofil (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003ezusätzliche Informationen (Einbindung der EBND Services)\u003c/li\u003e\u003cli\u003eOffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e","start":"2021-05-25T09:00:52.000+02:00","finish":"2021-05-26T17:00:20.000+02:00","visible":true,"is_open_network":true,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/56/wide_OXFP_Banner.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/56/wide_OXFP_Banner.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/56/Logo_OXFP.png","register_url":"https://www.empfehlungsbund.de/events/56/register","show_url":"https://www.empfehlungsbund.de/events/56","events":[{"id":130,"display_line":"25.05.2021 - 09 bis 12:00 Uhr  - WebEx OXFP Session 1 - Gastgeber: pludoni GmbH","subtitle":"WebEx OXFP Session 1","city":null,"start":"2021-05-25T09:00:52.000+02:00","finish":"2021-05-25T12:00:52.000+02:00","address":"WebEx OXFP Session 1","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210525T120052\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210525T090052\nCATEGORIES:BUSINESS\nDESCRIPTION:Die Agenda des Expertenforums dieses Jahres beinhaltet\\, nebe\n n der Auswertung des Gehaltsbenchmarks 2021 und den technischen Updates\\\n , einen besonderen Fokus auf die Anforderungen moderner Jobportale. Aus \n Sicht der Bewerbenden müssen die Inhalte eines Jobportals\\, insb. Stelle\n nanzeigen und Arbeitgeberprofile\\, ein wachsendes Informationsbedürfnis \n gerecht werden\\, sodass diese auch in Zukunft eine attraktive Anlaufstel\n le für die Jobsuche bilden. Im Rahmen des geplanten Redesigns unserer Co\n mmunityportale möchten wir mit Ihnen zu diesem Thema ein Anforderungswor\n kshop durchführen und hier die Sicht des Bewerbenden\\, wie auch die arbe\n itgeberseitigen Anforderungen aufnehmen und diskutieren.\\n\\n Im Rahmen d\n es jährlichen Expertenforum stellt der Empfehlungsbund regelmäßig aktuel\n le Entwicklungen und Studien in den Bereichen Employer Branding\\, Person\n almarketing und Personalauswahl vor. Das offene Expertenforum Personalma\n nagement richtet sich speziell an Personalmanager und Führungskräfte reg\n ionaler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verf\n olgen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlic\n hen Austausch zu Fragen der Personalgewinnung und wir informieren Sie üb\n er technische Innovationen für eine erfolgreichere Personalbedarfsdeckun\n g. Weitere Details zum Empfehlungsbund finden Sie auf den Mediadaten des\n  Empfehlungsbundes. \\n\\nDas offene Expertenforum Personalmanagement 2021\n  findet online in vier identischen Sessions zu unterschiedlichen Zeiten \n statt. Die Teilnahme am Expertenforum Personalmanagement ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie  ca. 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen \n Internetzugang und wenn möglich ein Headset.\\n\\nAktuelle Kennzahlen zum \n Empfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwicklungen i\n m Empfehlungsbund und den Community-Portalen* Technische Updates* Ankünd\n igung: Mittlr.de für IT-Personaldienstleistungen Vorstellung des Prinzip\n s\\nEr­geb­nis­se des Ge­halts­bench­marks 2021 mit Job­wert.info\\n\\n\\n* \n Wäh­rend der jähr­li­chen Da­ten­er­he­bungs­pha­se vom 1. Ja­nu­ar bis \n 31. März konn­ten teil­neh­men­de Un­ter­neh­men ihre Ge­häl­ter und Be­\n ne­fit-Leis­tun­gen ein­rei­chen und sich re­gio­nal bench­mar­ken las­s\n en. In un­se­rer Bench­mar­k­aus­wer­tung prä­sen­tie­ren wir Ih­nen ak­\n tu­el­le Zah­len zu Ge­häl­tern und Be­ne­fits auf re­gio­na­lem Ni­veau\n . \\nEinleitungsvortrag zum Workshop: Anforderung an moderne Stellenporta\n le\\n\\n\\n* Studien zu Stellenanzeigen: Erwartung der Bewerbenden an eine \n Stelle* Entwicklung der Portale von Web 1.0 bis Web 3.0* Redesign der Po\n rtale - Vorstellung des ersten Prototypes\\nWorkshop: Anforderungsanalyse\n  zum Redesign unserer Portale\\n\\n\\n* Stellenanzeigen und Stellensuche (a\n us Bewerbersicht\\, aus Arbeitgebersicht)* Arbeitgeberprofil (aus Bewerbe\n rsicht\\, aus Arbeitgebersicht)* zusätzliche Informationen (Einbindung de\n r EBND Services)* Offener Erfahrungsaustausch\nURL:https://www.empfehlungsbund.de/events/56\nSUMMARY:Offenes Expertenforum Personalmanagement 2021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/56\nATTACH:https://www.empfehlungsbund.de/events/56\nLOCATION:pludoni GmbH\\, WebEx OXFP Session 1\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eDie Agenda des Expert\n enforums dieses Jahres beinhaltet, neben der Auswertung des Gehaltsbench\n marks 2021 und den technischen Updates, einen besonderen Fokus auf die A\n nforderungen moderner Jobportale.\u003c/strong\u003e Aus Sicht der Bewerbenden müs\n sen die Inhalte eines Jobportals, insb. Stellenanzeigen und Arbeitgeberp\n rofile, ein wachsendes Informationsbedürfnis gerecht werden, sodass dies\n e auch in Zukunft eine attraktive Anlaufstelle für die Jobsuche bilden. \n Im Rahmen des geplanten Redesigns unserer Communityportale möchten wir m\n it Ihnen zu diesem Thema ein Anforderungsworkshop durchführen und hier d\n ie Sicht des Bewerbenden, wie auch die arbeitgeberseitigen Anforderungen\n  aufnehmen und diskutieren.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003e\u0026nbsp;\u003c/strong\u003eIm Rahmen des \n jährlichen Expertenforum stellt der Empfehlungsbund regelmäßig aktuelle \n Entwicklungen und Studien in den Bereichen Employer Branding, Personalma\n rketing und Personalauswahl vor. Das offene Expertenforum Personalmanage\n ment richtet sich speziell an Personalmanager und Führungskräfte regiona\n ler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfolge\n n wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlichen \n Austausch zu Fragen der Personalgewinnung und wir informieren Sie über t\n echnische Innovationen für eine erfolgreichere Personalbedarfsdeckung. W\n eitere Details zum Empfehlungsbund finden Sie auf den \u003ca href=\"https://w\n ww.empfehlungsbund.de/mediadaten/?utm_medium=email\u0026amp;utm_source=crm\u0026am\n p;utm_campaign=ebcw\"\u003e\u003cstrong\u003eMediadaten des Empfehlungsbundes\u003c/strong\u003e\u003c/\n a\u003e\u003cstrong\u003e. \u003cbr\u003e\u003cbr\u003eDas offene Expertenforum Personalmanagement 2021 fin\n det online in vier identischen Sessions zu unterschiedlichen Zeiten stat\n t. \u003c/strong\u003eDie Teilnahme am Expertenforum Personalmanagement ist kosten\n frei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatori\n schen Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilna\n hme erhalten Sie\u0026nbsp; ca. 1-2 Tage vor dem Event per E-Mail. Sie benöti\n gen einen Internetzugang und wenn möglich ein Headset.\u003c/div\u003e\u003cdiv\u003e\u003cstrong\n \u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/str\n ong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und de\n n Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eAnkündigung: Mit\n tlr.de für IT-Personaldienstleistungen Vorstellung des Prinzips\u003c/li\u003e\u003c/ul\n \u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eEr­geb­nis­se des Ge­halts­bench­marks 2021 mit Job­we\n rt.info\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWäh­rend der jähr­li­chen D\n a­ten­er­he­bungs­pha­se vom 1. Ja­nu­ar bis 31. März konn­ten teil­neh­\n men­de Un­ter­neh­men ihre Ge­häl­ter und Be­ne­fit-Leis­tun­gen ein­rei\n ­chen und sich re­gio­nal bench­mar­ken las­sen. In un­se­rer Bench­mar­\n k­aus­wer­tung prä­sen­tie­ren wir Ih­nen ak­tu­el­le Zah­len zu Ge­häl­\n tern und Be­ne­fits auf re­gio­na­lem Ni­veau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c\n strong\u003eEinleitungsvortrag zum Workshop: Anforderung an moderne Stellenpo\n rtale\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStudien zu Stellenanzeigen: Erwartun\n g der Bewerbenden an eine Stelle\u003c/li\u003e\u003cli\u003eEntwicklung der Portale von Web\n  1.0 bis Web 3.0\u003c/li\u003e\u003cli\u003eRedesign der Portale - Vorstellung des ersten P\n rototypes\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Anforderungsanalyse zum Re\n design unserer Portale\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStellenanzeigen und\n  Stellensuche (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003eArbeitge\n berprofil (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003ezusätzliche \n Informationen (Einbindung der EBND Services)\u003c/li\u003e\u003cli\u003eOffener Erfahrungsa\n ustausch\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":131,"display_line":"25.05.2021 - 14 bis 17:00 Uhr  - WebEx OXFP Session 2 - Gastgeber: pludoni GmbH","subtitle":"WebEx OXFP Session 2","city":null,"start":"2021-05-25T14:00:58.000+02:00","finish":"2021-05-25T17:00:58.000+02:00","address":"WebEx OXFP Session 2","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210525T170058\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210525T140058\nCATEGORIES:BUSINESS\nDESCRIPTION:Die Agenda des Expertenforums dieses Jahres beinhaltet\\, nebe\n n der Auswertung des Gehaltsbenchmarks 2021 und den technischen Updates\\\n , einen besonderen Fokus auf die Anforderungen moderner Jobportale. Aus \n Sicht der Bewerbenden müssen die Inhalte eines Jobportals\\, insb. Stelle\n nanzeigen und Arbeitgeberprofile\\, ein wachsendes Informationsbedürfnis \n gerecht werden\\, sodass diese auch in Zukunft eine attraktive Anlaufstel\n le für die Jobsuche bilden. Im Rahmen des geplanten Redesigns unserer Co\n mmunityportale möchten wir mit Ihnen zu diesem Thema ein Anforderungswor\n kshop durchführen und hier die Sicht des Bewerbenden\\, wie auch die arbe\n itgeberseitigen Anforderungen aufnehmen und diskutieren.\\n\\n Im Rahmen d\n es jährlichen Expertenforum stellt der Empfehlungsbund regelmäßig aktuel\n le Entwicklungen und Studien in den Bereichen Employer Branding\\, Person\n almarketing und Personalauswahl vor. Das offene Expertenforum Personalma\n nagement richtet sich speziell an Personalmanager und Führungskräfte reg\n ionaler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verf\n olgen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlic\n hen Austausch zu Fragen der Personalgewinnung und wir informieren Sie üb\n er technische Innovationen für eine erfolgreichere Personalbedarfsdeckun\n g. Weitere Details zum Empfehlungsbund finden Sie auf den Mediadaten des\n  Empfehlungsbundes. \\n\\nDas offene Expertenforum Personalmanagement 2021\n  findet online in vier identischen Sessions zu unterschiedlichen Zeiten \n statt. Die Teilnahme am Expertenforum Personalmanagement ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie  ca. 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen \n Internetzugang und wenn möglich ein Headset.\\n\\nAktuelle Kennzahlen zum \n Empfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwicklungen i\n m Empfehlungsbund und den Community-Portalen* Technische Updates* Ankünd\n igung: Mittlr.de für IT-Personaldienstleistungen Vorstellung des Prinzip\n s\\nEr­geb­nis­se des Ge­halts­bench­marks 2021 mit Job­wert.info\\n\\n\\n* \n Wäh­rend der jähr­li­chen Da­ten­er­he­bungs­pha­se vom 1. Ja­nu­ar bis \n 31. März konn­ten teil­neh­men­de Un­ter­neh­men ihre Ge­häl­ter und Be­\n ne­fit-Leis­tun­gen ein­rei­chen und sich re­gio­nal bench­mar­ken las­s\n en. In un­se­rer Bench­mar­k­aus­wer­tung prä­sen­tie­ren wir Ih­nen ak­\n tu­el­le Zah­len zu Ge­häl­tern und Be­ne­fits auf re­gio­na­lem Ni­veau\n . \\nEinleitungsvortrag zum Workshop: Anforderung an moderne Stellenporta\n le\\n\\n\\n* Studien zu Stellenanzeigen: Erwartung der Bewerbenden an eine \n Stelle* Entwicklung der Portale von Web 1.0 bis Web 3.0* Redesign der Po\n rtale - Vorstellung des ersten Prototypes\\nWorkshop: Anforderungsanalyse\n  zum Redesign unserer Portale\\n\\n\\n* Stellenanzeigen und Stellensuche (a\n us Bewerbersicht\\, aus Arbeitgebersicht)* Arbeitgeberprofil (aus Bewerbe\n rsicht\\, aus Arbeitgebersicht)* zusätzliche Informationen (Einbindung de\n r EBND Services)* Offener Erfahrungsaustausch\nURL:https://www.empfehlungsbund.de/events/56\nSUMMARY:Offenes Expertenforum Personalmanagement 2021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/56\nATTACH:https://www.empfehlungsbund.de/events/56\nLOCATION:pludoni GmbH\\, WebEx OXFP Session 2\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eDie Agenda des Expert\n enforums dieses Jahres beinhaltet, neben der Auswertung des Gehaltsbench\n marks 2021 und den technischen Updates, einen besonderen Fokus auf die A\n nforderungen moderner Jobportale.\u003c/strong\u003e Aus Sicht der Bewerbenden müs\n sen die Inhalte eines Jobportals, insb. Stellenanzeigen und Arbeitgeberp\n rofile, ein wachsendes Informationsbedürfnis gerecht werden, sodass dies\n e auch in Zukunft eine attraktive Anlaufstelle für die Jobsuche bilden. \n Im Rahmen des geplanten Redesigns unserer Communityportale möchten wir m\n it Ihnen zu diesem Thema ein Anforderungsworkshop durchführen und hier d\n ie Sicht des Bewerbenden, wie auch die arbeitgeberseitigen Anforderungen\n  aufnehmen und diskutieren.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003e\u0026nbsp;\u003c/strong\u003eIm Rahmen des \n jährlichen Expertenforum stellt der Empfehlungsbund regelmäßig aktuelle \n Entwicklungen und Studien in den Bereichen Employer Branding, Personalma\n rketing und Personalauswahl vor. Das offene Expertenforum Personalmanage\n ment richtet sich speziell an Personalmanager und Führungskräfte regiona\n ler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfolge\n n wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlichen \n Austausch zu Fragen der Personalgewinnung und wir informieren Sie über t\n echnische Innovationen für eine erfolgreichere Personalbedarfsdeckung. W\n eitere Details zum Empfehlungsbund finden Sie auf den \u003ca href=\"https://w\n ww.empfehlungsbund.de/mediadaten/?utm_medium=email\u0026amp;utm_source=crm\u0026am\n p;utm_campaign=ebcw\"\u003e\u003cstrong\u003eMediadaten des Empfehlungsbundes\u003c/strong\u003e\u003c/\n a\u003e\u003cstrong\u003e. \u003cbr\u003e\u003cbr\u003eDas offene Expertenforum Personalmanagement 2021 fin\n det online in vier identischen Sessions zu unterschiedlichen Zeiten stat\n t. \u003c/strong\u003eDie Teilnahme am Expertenforum Personalmanagement ist kosten\n frei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatori\n schen Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilna\n hme erhalten Sie\u0026nbsp; ca. 1-2 Tage vor dem Event per E-Mail. Sie benöti\n gen einen Internetzugang und wenn möglich ein Headset.\u003c/div\u003e\u003cdiv\u003e\u003cstrong\n \u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/str\n ong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und de\n n Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eAnkündigung: Mit\n tlr.de für IT-Personaldienstleistungen Vorstellung des Prinzips\u003c/li\u003e\u003c/ul\n \u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eEr­geb­nis­se des Ge­halts­bench­marks 2021 mit Job­we\n rt.info\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWäh­rend der jähr­li­chen D\n a­ten­er­he­bungs­pha­se vom 1. Ja­nu­ar bis 31. März konn­ten teil­neh­\n men­de Un­ter­neh­men ihre Ge­häl­ter und Be­ne­fit-Leis­tun­gen ein­rei\n ­chen und sich re­gio­nal bench­mar­ken las­sen. In un­se­rer Bench­mar­\n k­aus­wer­tung prä­sen­tie­ren wir Ih­nen ak­tu­el­le Zah­len zu Ge­häl­\n tern und Be­ne­fits auf re­gio­na­lem Ni­veau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c\n strong\u003eEinleitungsvortrag zum Workshop: Anforderung an moderne Stellenpo\n rtale\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStudien zu Stellenanzeigen: Erwartun\n g der Bewerbenden an eine Stelle\u003c/li\u003e\u003cli\u003eEntwicklung der Portale von Web\n  1.0 bis Web 3.0\u003c/li\u003e\u003cli\u003eRedesign der Portale - Vorstellung des ersten P\n rototypes\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Anforderungsanalyse zum Re\n design unserer Portale\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStellenanzeigen und\n  Stellensuche (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003eArbeitge\n berprofil (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003ezusätzliche \n Informationen (Einbindung der EBND Services)\u003c/li\u003e\u003cli\u003eOffener Erfahrungsa\n ustausch\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":132,"display_line":"26.05.2021 - 09 bis 12:00 Uhr  - WebEx OXFP Session 3 - Gastgeber: pludoni GmbH","subtitle":"WebEx OXFP Session 3","city":null,"start":"2021-05-26T09:00:38.000+02:00","finish":"2021-05-26T12:00:38.000+02:00","address":"WebEx OXFP Session 3","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210526T120038\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210526T090038\nCATEGORIES:BUSINESS\nDESCRIPTION:Die Agenda des Expertenforums dieses Jahres beinhaltet\\, nebe\n n der Auswertung des Gehaltsbenchmarks 2021 und den technischen Updates\\\n , einen besonderen Fokus auf die Anforderungen moderner Jobportale. Aus \n Sicht der Bewerbenden müssen die Inhalte eines Jobportals\\, insb. Stelle\n nanzeigen und Arbeitgeberprofile\\, ein wachsendes Informationsbedürfnis \n gerecht werden\\, sodass diese auch in Zukunft eine attraktive Anlaufstel\n le für die Jobsuche bilden. Im Rahmen des geplanten Redesigns unserer Co\n mmunityportale möchten wir mit Ihnen zu diesem Thema ein Anforderungswor\n kshop durchführen und hier die Sicht des Bewerbenden\\, wie auch die arbe\n itgeberseitigen Anforderungen aufnehmen und diskutieren.\\n\\n Im Rahmen d\n es jährlichen Expertenforum stellt der Empfehlungsbund regelmäßig aktuel\n le Entwicklungen und Studien in den Bereichen Employer Branding\\, Person\n almarketing und Personalauswahl vor. Das offene Expertenforum Personalma\n nagement richtet sich speziell an Personalmanager und Führungskräfte reg\n ionaler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verf\n olgen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlic\n hen Austausch zu Fragen der Personalgewinnung und wir informieren Sie üb\n er technische Innovationen für eine erfolgreichere Personalbedarfsdeckun\n g. Weitere Details zum Empfehlungsbund finden Sie auf den Mediadaten des\n  Empfehlungsbundes. \\n\\nDas offene Expertenforum Personalmanagement 2021\n  findet online in vier identischen Sessions zu unterschiedlichen Zeiten \n statt. Die Teilnahme am Expertenforum Personalmanagement ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie  ca. 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen \n Internetzugang und wenn möglich ein Headset.\\n\\nAktuelle Kennzahlen zum \n Empfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwicklungen i\n m Empfehlungsbund und den Community-Portalen* Technische Updates* Ankünd\n igung: Mittlr.de für IT-Personaldienstleistungen Vorstellung des Prinzip\n s\\nEr­geb­nis­se des Ge­halts­bench­marks 2021 mit Job­wert.info\\n\\n\\n* \n Wäh­rend der jähr­li­chen Da­ten­er­he­bungs­pha­se vom 1. Ja­nu­ar bis \n 31. März konn­ten teil­neh­men­de Un­ter­neh­men ihre Ge­häl­ter und Be­\n ne­fit-Leis­tun­gen ein­rei­chen und sich re­gio­nal bench­mar­ken las­s\n en. In un­se­rer Bench­mar­k­aus­wer­tung prä­sen­tie­ren wir Ih­nen ak­\n tu­el­le Zah­len zu Ge­häl­tern und Be­ne­fits auf re­gio­na­lem Ni­veau\n . \\nEinleitungsvortrag zum Workshop: Anforderung an moderne Stellenporta\n le\\n\\n\\n* Studien zu Stellenanzeigen: Erwartung der Bewerbenden an eine \n Stelle* Entwicklung der Portale von Web 1.0 bis Web 3.0* Redesign der Po\n rtale - Vorstellung des ersten Prototypes\\nWorkshop: Anforderungsanalyse\n  zum Redesign unserer Portale\\n\\n\\n* Stellenanzeigen und Stellensuche (a\n us Bewerbersicht\\, aus Arbeitgebersicht)* Arbeitgeberprofil (aus Bewerbe\n rsicht\\, aus Arbeitgebersicht)* zusätzliche Informationen (Einbindung de\n r EBND Services)* Offener Erfahrungsaustausch\nURL:https://www.empfehlungsbund.de/events/56\nSUMMARY:Offenes Expertenforum Personalmanagement 2021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/56\nATTACH:https://www.empfehlungsbund.de/events/56\nLOCATION:pludoni GmbH\\, WebEx OXFP Session 3\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eDie Agenda des Expert\n enforums dieses Jahres beinhaltet, neben der Auswertung des Gehaltsbench\n marks 2021 und den technischen Updates, einen besonderen Fokus auf die A\n nforderungen moderner Jobportale.\u003c/strong\u003e Aus Sicht der Bewerbenden müs\n sen die Inhalte eines Jobportals, insb. Stellenanzeigen und Arbeitgeberp\n rofile, ein wachsendes Informationsbedürfnis gerecht werden, sodass dies\n e auch in Zukunft eine attraktive Anlaufstelle für die Jobsuche bilden. \n Im Rahmen des geplanten Redesigns unserer Communityportale möchten wir m\n it Ihnen zu diesem Thema ein Anforderungsworkshop durchführen und hier d\n ie Sicht des Bewerbenden, wie auch die arbeitgeberseitigen Anforderungen\n  aufnehmen und diskutieren.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003e\u0026nbsp;\u003c/strong\u003eIm Rahmen des \n jährlichen Expertenforum stellt der Empfehlungsbund regelmäßig aktuelle \n Entwicklungen und Studien in den Bereichen Employer Branding, Personalma\n rketing und Personalauswahl vor. Das offene Expertenforum Personalmanage\n ment richtet sich speziell an Personalmanager und Führungskräfte regiona\n ler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfolge\n n wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlichen \n Austausch zu Fragen der Personalgewinnung und wir informieren Sie über t\n echnische Innovationen für eine erfolgreichere Personalbedarfsdeckung. W\n eitere Details zum Empfehlungsbund finden Sie auf den \u003ca href=\"https://w\n ww.empfehlungsbund.de/mediadaten/?utm_medium=email\u0026amp;utm_source=crm\u0026am\n p;utm_campaign=ebcw\"\u003e\u003cstrong\u003eMediadaten des Empfehlungsbundes\u003c/strong\u003e\u003c/\n a\u003e\u003cstrong\u003e. \u003cbr\u003e\u003cbr\u003eDas offene Expertenforum Personalmanagement 2021 fin\n det online in vier identischen Sessions zu unterschiedlichen Zeiten stat\n t. \u003c/strong\u003eDie Teilnahme am Expertenforum Personalmanagement ist kosten\n frei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatori\n schen Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilna\n hme erhalten Sie\u0026nbsp; ca. 1-2 Tage vor dem Event per E-Mail. Sie benöti\n gen einen Internetzugang und wenn möglich ein Headset.\u003c/div\u003e\u003cdiv\u003e\u003cstrong\n \u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/str\n ong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und de\n n Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eAnkündigung: Mit\n tlr.de für IT-Personaldienstleistungen Vorstellung des Prinzips\u003c/li\u003e\u003c/ul\n \u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eEr­geb­nis­se des Ge­halts­bench­marks 2021 mit Job­we\n rt.info\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWäh­rend der jähr­li­chen D\n a­ten­er­he­bungs­pha­se vom 1. Ja­nu­ar bis 31. März konn­ten teil­neh­\n men­de Un­ter­neh­men ihre Ge­häl­ter und Be­ne­fit-Leis­tun­gen ein­rei\n ­chen und sich re­gio­nal bench­mar­ken las­sen. In un­se­rer Bench­mar­\n k­aus­wer­tung prä­sen­tie­ren wir Ih­nen ak­tu­el­le Zah­len zu Ge­häl­\n tern und Be­ne­fits auf re­gio­na­lem Ni­veau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c\n strong\u003eEinleitungsvortrag zum Workshop: Anforderung an moderne Stellenpo\n rtale\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStudien zu Stellenanzeigen: Erwartun\n g der Bewerbenden an eine Stelle\u003c/li\u003e\u003cli\u003eEntwicklung der Portale von Web\n  1.0 bis Web 3.0\u003c/li\u003e\u003cli\u003eRedesign der Portale - Vorstellung des ersten P\n rototypes\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Anforderungsanalyse zum Re\n design unserer Portale\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStellenanzeigen und\n  Stellensuche (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003eArbeitge\n berprofil (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003ezusätzliche \n Informationen (Einbindung der EBND Services)\u003c/li\u003e\u003cli\u003eOffener Erfahrungsa\n ustausch\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":133,"display_line":"26.05.2021 - 14 bis 17:00 Uhr  - WebEx OXFP Session 4 - Gastgeber: pludoni GmbH","subtitle":"WebEx OXFP Session 4","city":null,"start":"2021-05-26T14:00:20.000+02:00","finish":"2021-05-26T17:00:20.000+02:00","address":"WebEx OXFP Session 4","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20210328T020000\nRDATE:20210328T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210526T170020\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210526T140020\nCATEGORIES:BUSINESS\nDESCRIPTION:Die Agenda des Expertenforums dieses Jahres beinhaltet\\, nebe\n n der Auswertung des Gehaltsbenchmarks 2021 und den technischen Updates\\\n , einen besonderen Fokus auf die Anforderungen moderner Jobportale. Aus \n Sicht der Bewerbenden müssen die Inhalte eines Jobportals\\, insb. Stelle\n nanzeigen und Arbeitgeberprofile\\, ein wachsendes Informationsbedürfnis \n gerecht werden\\, sodass diese auch in Zukunft eine attraktive Anlaufstel\n le für die Jobsuche bilden. Im Rahmen des geplanten Redesigns unserer Co\n mmunityportale möchten wir mit Ihnen zu diesem Thema ein Anforderungswor\n kshop durchführen und hier die Sicht des Bewerbenden\\, wie auch die arbe\n itgeberseitigen Anforderungen aufnehmen und diskutieren.\\n\\n Im Rahmen d\n es jährlichen Expertenforum stellt der Empfehlungsbund regelmäßig aktuel\n le Entwicklungen und Studien in den Bereichen Employer Branding\\, Person\n almarketing und Personalauswahl vor. Das offene Expertenforum Personalma\n nagement richtet sich speziell an Personalmanager und Führungskräfte reg\n ionaler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verf\n olgen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlic\n hen Austausch zu Fragen der Personalgewinnung und wir informieren Sie üb\n er technische Innovationen für eine erfolgreichere Personalbedarfsdeckun\n g. Weitere Details zum Empfehlungsbund finden Sie auf den Mediadaten des\n  Empfehlungsbundes. \\n\\nDas offene Expertenforum Personalmanagement 2021\n  findet online in vier identischen Sessions zu unterschiedlichen Zeiten \n statt. Die Teilnahme am Expertenforum Personalmanagement ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie  ca. 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen \n Internetzugang und wenn möglich ein Headset.\\n\\nAktuelle Kennzahlen zum \n Empfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwicklungen i\n m Empfehlungsbund und den Community-Portalen* Technische Updates* Ankünd\n igung: Mittlr.de für IT-Personaldienstleistungen Vorstellung des Prinzip\n s\\nEr­geb­nis­se des Ge­halts­bench­marks 2021 mit Job­wert.info\\n\\n\\n* \n Wäh­rend der jähr­li­chen Da­ten­er­he­bungs­pha­se vom 1. Ja­nu­ar bis \n 31. März konn­ten teil­neh­men­de Un­ter­neh­men ihre Ge­häl­ter und Be­\n ne­fit-Leis­tun­gen ein­rei­chen und sich re­gio­nal bench­mar­ken las­s\n en. In un­se­rer Bench­mar­k­aus­wer­tung prä­sen­tie­ren wir Ih­nen ak­\n tu­el­le Zah­len zu Ge­häl­tern und Be­ne­fits auf re­gio­na­lem Ni­veau\n . \\nEinleitungsvortrag zum Workshop: Anforderung an moderne Stellenporta\n le\\n\\n\\n* Studien zu Stellenanzeigen: Erwartung der Bewerbenden an eine \n Stelle* Entwicklung der Portale von Web 1.0 bis Web 3.0* Redesign der Po\n rtale - Vorstellung des ersten Prototypes\\nWorkshop: Anforderungsanalyse\n  zum Redesign unserer Portale\\n\\n\\n* Stellenanzeigen und Stellensuche (a\n us Bewerbersicht\\, aus Arbeitgebersicht)* Arbeitgeberprofil (aus Bewerbe\n rsicht\\, aus Arbeitgebersicht)* zusätzliche Informationen (Einbindung de\n r EBND Services)* Offener Erfahrungsaustausch\nURL:https://www.empfehlungsbund.de/events/56\nSUMMARY:Offenes Expertenforum Personalmanagement 2021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/56\nATTACH:https://www.empfehlungsbund.de/events/56\nLOCATION:pludoni GmbH\\, WebEx OXFP Session 4\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eDie Agenda des Expert\n enforums dieses Jahres beinhaltet, neben der Auswertung des Gehaltsbench\n marks 2021 und den technischen Updates, einen besonderen Fokus auf die A\n nforderungen moderner Jobportale.\u003c/strong\u003e Aus Sicht der Bewerbenden müs\n sen die Inhalte eines Jobportals, insb. Stellenanzeigen und Arbeitgeberp\n rofile, ein wachsendes Informationsbedürfnis gerecht werden, sodass dies\n e auch in Zukunft eine attraktive Anlaufstelle für die Jobsuche bilden. \n Im Rahmen des geplanten Redesigns unserer Communityportale möchten wir m\n it Ihnen zu diesem Thema ein Anforderungsworkshop durchführen und hier d\n ie Sicht des Bewerbenden, wie auch die arbeitgeberseitigen Anforderungen\n  aufnehmen und diskutieren.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003e\u0026nbsp;\u003c/strong\u003eIm Rahmen des \n jährlichen Expertenforum stellt der Empfehlungsbund regelmäßig aktuelle \n Entwicklungen und Studien in den Bereichen Employer Branding, Personalma\n rketing und Personalauswahl vor. Das offene Expertenforum Personalmanage\n ment richtet sich speziell an Personalmanager und Führungskräfte regiona\n ler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfolge\n n wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlichen \n Austausch zu Fragen der Personalgewinnung und wir informieren Sie über t\n echnische Innovationen für eine erfolgreichere Personalbedarfsdeckung. W\n eitere Details zum Empfehlungsbund finden Sie auf den \u003ca href=\"https://w\n ww.empfehlungsbund.de/mediadaten/?utm_medium=email\u0026amp;utm_source=crm\u0026am\n p;utm_campaign=ebcw\"\u003e\u003cstrong\u003eMediadaten des Empfehlungsbundes\u003c/strong\u003e\u003c/\n a\u003e\u003cstrong\u003e. \u003cbr\u003e\u003cbr\u003eDas offene Expertenforum Personalmanagement 2021 fin\n det online in vier identischen Sessions zu unterschiedlichen Zeiten stat\n t. \u003c/strong\u003eDie Teilnahme am Expertenforum Personalmanagement ist kosten\n frei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatori\n schen Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilna\n hme erhalten Sie\u0026nbsp; ca. 1-2 Tage vor dem Event per E-Mail. Sie benöti\n gen einen Internetzugang und wenn möglich ein Headset.\u003c/div\u003e\u003cdiv\u003e\u003cstrong\n \u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/str\n ong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und de\n n Community-Portalen\u003c/li\u003e\u003cli\u003eTechnische Updates\u003c/li\u003e\u003cli\u003eAnkündigung: Mit\n tlr.de für IT-Personaldienstleistungen Vorstellung des Prinzips\u003c/li\u003e\u003c/ul\n \u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eEr­geb­nis­se des Ge­halts­bench­marks 2021 mit Job­we\n rt.info\u003c/strong\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWäh­rend der jähr­li­chen D\n a­ten­er­he­bungs­pha­se vom 1. Ja­nu­ar bis 31. März konn­ten teil­neh­\n men­de Un­ter­neh­men ihre Ge­häl­ter und Be­ne­fit-Leis­tun­gen ein­rei\n ­chen und sich re­gio­nal bench­mar­ken las­sen. In un­se­rer Bench­mar­\n k­aus­wer­tung prä­sen­tie­ren wir Ih­nen ak­tu­el­le Zah­len zu Ge­häl­\n tern und Be­ne­fits auf re­gio­na­lem Ni­veau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c\n strong\u003eEinleitungsvortrag zum Workshop: Anforderung an moderne Stellenpo\n rtale\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStudien zu Stellenanzeigen: Erwartun\n g der Bewerbenden an eine Stelle\u003c/li\u003e\u003cli\u003eEntwicklung der Portale von Web\n  1.0 bis Web 3.0\u003c/li\u003e\u003cli\u003eRedesign der Portale - Vorstellung des ersten P\n rototypes\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Anforderungsanalyse zum Re\n design unserer Portale\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eStellenanzeigen und\n  Stellensuche (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003eArbeitge\n berprofil (aus Bewerbersicht, aus Arbeitgebersicht)\u003c/li\u003e\u003cli\u003ezusätzliche \n Informationen (Einbindung der EBND Services)\u003c/li\u003e\u003cli\u003eOffener Erfahrungsa\n ustausch\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":54,"name":"Workshop 4D","hashtag":"ebcw","title":"Webinar: Optimierung der Stellenbezeichnung mit der 4D-Methode","teaser":"Ein wichtiger Aspekt bei der Suche nach qualifizierten Fachkräften ist die Formulierung der Stellenanzeigen. Der Empfehlungsbund hat Methoden entwickelt, um die gezielte Ansprachen der gesuchten Zielgruppe zu optimieren. Um von der gewünschten Zielgruppe aufgefunden zu werden, ist zunächst der richtige Stellentitel von großer Bedeutung.","teaser_hrfilter":"In einem einstündigen Online-Workshop möchten wir Ihnen mit der 4D-Methode zur Optimierung des Stellentitels einen strukturierten Fahrplan zur Erstellung aussagenkräftiger Stellenbetitelungen vorstellen, die das Suchverhalten Ihrer Zielgruppe und den Eigenheiten der Suchmaschine Rechnung trägt.","countdown_visible":true,"countdown_start":"2021-03-03T10:00:07.000+01:00","countdown_description":"In einem einstündigen Online-Workshop möchten wir Ihnen mit der 4D-Methode zur Optimierung des Stellentitels einen strukturierten Fahrplan zur Erstellung aussagenkräftiger Stellenbetitelungen vorstellen, die das Suchverhalten Ihrer Zielgruppe und den Eigenheiten der Suchmaschine Rechnung trägt.","description":"\u003cdiv\u003eEine durchdachte Stellenbetitelung stellt einen der wichtigsten Aspekte bei der Suche nach qualifizierten Fachkräften dar. Der Stellentitel ist die erste Information die Jobsuchende in den Suchergebnislisten von Jobbörsen und Jobsuchmaschinen erhalten und bestimmt damit die Öffnungsrate der kompletten Stellenanzeige. Darüber hinaus definiert die Logik der Suchmaschinenalgortihmen die in einem Stellentitel enthaltenen Schlüsselworte als ein besonders starkes Sortier- und Rankingkriterium.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eIn einem einstündigen Online-Workshop möchten wir Ihnen den ersten Schritt der Stellenanzeigenoptimierung vorstellen: Mit der 4D-Methode zur Optimierung des Stellentitels vermitteln wir Ihnen einen strukturierten Fahrplan zur Erstellung aussagenkräftiger Stellenbetitelungen, die das Suchverhalten Ihrer Zielgruppe und den Eigenheiten der Suchmaschine Rechnung trägt. Diese Methode eignet sich für alle Unternehmen auf der Suche nach Fachkräften, unabhängig von Größe, Branche und Region.\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 Minuten)\u003c/li\u003e\u003cli\u003eVorstellung der 4D-Methode zur Stellentitel-Optimierung (ca. 40 Minuten)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 Minuten)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2021-03-25T10:00:29.000+01:00","finish":"2021-03-25T11:00:29.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/54/wide_Stellentitel-4D-Methode.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/54/wide_Stellentitel-4D-Methode.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/54/register","show_url":"https://www.empfehlungsbund.de/events/54","events":[{"id":128,"display_line":"25.03.2021 - 10 bis 11:00 Uhr College Park - Webinar: Optimierung der Stellenbezeichnung mit der 4D-Methode - Gastgeber: Empfehlungsbund","subtitle":"Webinar: Optimierung der Stellenbezeichnung mit der 4D-Methode","city":"College Park","start":"2021-03-25T10:00:29.000+01:00","finish":"2021-03-25T11:00:29.000+01:00","address":"Webex Online Veranstaltung","event_host":"Empfehlungsbund","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20201025T030000\nRDATE:20201025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210325T110029\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210325T100029\nCATEGORIES:BUSINESS\nDESCRIPTION:Eine durchdachte Stellenbetitelung stellt einen der wichtigst\n en Aspekte bei der Suche nach qualifizierten Fachkräften dar. Der Stelle\n ntitel ist die erste Information die Jobsuchende in den Suchergebnislist\n en von Jobbörsen und Jobsuchmaschinen erhalten und bestimmt damit die Öf\n fnungsrate der kompletten Stellenanzeige. Darüber hinaus definiert die L\n ogik der Suchmaschinenalgortihmen die in einem Stellentitel enthaltenen \n Schlüsselworte als ein besonders starkes Sortier- und Rankingkriterium. \n \\n\\nIn einem einstündigen Online-Workshop möchten wir Ihnen den ersten S\n chritt der Stellenanzeigenoptimierung vorstellen: Mit der 4D-Methode zur\n  Optimierung des Stellentitels vermitteln wir Ihnen einen strukturierten\n  Fahrplan zur Erstellung aussagenkräftiger Stellenbetitelungen\\, die das\n  Suchverhalten Ihrer Zielgruppe und den Eigenheiten der Suchmaschine Rec\n hnung trägt. Diese Methode eignet sich für alle Unternehmen auf der Such\n e nach Fachkräften\\, unabhängig von Größe\\, Branche und Region.\\n\\n* Wil\n lkommensrunde (ca. 10 Minuten)* Vorstellung der 4D-Methode zur Stellenti\n tel-Optimierung (ca. 40 Minuten)* Fragerunde (ca. 10 Minuten)\\n\\n\nURL:https://www.empfehlungsbund.de/events/54\nSUMMARY:Webinar: Optimierung der Stellenbezeichnung mit der 4D-Methode\nORGANIZER;CN=Empfehlungsbund / Empfehlungsbund.de:https://www.empfehlungs\n bund.de/events/54\nATTACH:https://www.empfehlungsbund.de/events/54\nLOCATION:Empfehlungsbund\\, Webex Online Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eEine durchdachte Stellenbetit\n elung stellt einen der wichtigsten Aspekte bei der Suche nach qualifizie\n rten Fachkräften dar. Der Stellentitel ist die erste Information die Job\n suchende in den Suchergebnislisten von Jobbörsen und Jobsuchmaschinen er\n halten und bestimmt damit die Öffnungsrate der kompletten Stellenanzeige\n . Darüber hinaus definiert die Logik der Suchmaschinenalgortihmen die in\n  einem Stellentitel enthaltenen Schlüsselworte als ein besonders starkes\n  Sortier- und Rankingkriterium.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eIn einem einstündigen Onlin\n e-Workshop möchten wir Ihnen den ersten Schritt der Stellenanzeigenoptim\n ierung vorstellen: Mit der 4D-Methode zur Optimierung des Stellentitels \n vermitteln wir Ihnen einen strukturierten Fahrplan zur Erstellung aussag\n enkräftiger Stellenbetitelungen, die das Suchverhalten Ihrer Zielgruppe \n und den Eigenheiten der Suchmaschine Rechnung trägt. Diese Methode eigne\n t sich für alle Unternehmen auf der Suche nach Fachkräften, unabhängig v\n on Größe, Branche und Region.\u003c/div\u003e\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 Minu\n ten)\u003c/li\u003e\u003cli\u003eVorstellung der 4D-Methode zur Stellentitel-Optimierung (ca\n . 40 Minuten)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 Minuten)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/di\n v\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":53,"name":"Auftaktworkshop Jobwert","hashtag":"ebcw","title":"Online-Vorstellung: Gehaltsbenchmarks für KMU mit Jobwert.info","teaser":"Mit Jobwert.info bietet der Empfehlungsbund einen zuverlässigen Gehaltsvergleich zwischen Unternehmen derselben Branche und Region an. Jobwert.info umfasst mit über 27000 Gehaltsdatensätzen die real gezahlten Gehälter von teilnehmenden kleinen und mittelständischen Unternehmen aus 100 Standorten bundesweit. Jedem teilnehmenden Unternehmen am Gehaltsbenchmark wird eine detaillierte Auswertung nach eigens gewählten Filterkriterien angeboten. \r\n\r\nWährend unserer einstündigen Online-Veranstaltung möchten wir, anhand der Gehaltsdatengrundlage vorangegangener Gehaltsbenchmarks der letzten Jahre, Jobwert.infos Filtermöglichkeiten live demonstrieren. Am Beispiel aktuell gefragter Berufsprofile, wie Softwareentwickler, Vertrieb oder Projektleitung geben wir Ihnen einen transparenten Einblick in Jobwert.infos ausführliche Gehaltsberichte, die jedem teilnehmenden Unternehmen zur Verfügung gestellt werden. In einer anschließenden Fragerunde beantworten wir liebend gern Ihre offenen Fragen zur Teilnahme und Auswertung am Gehaltsbenchmark mit Jobwert.info.\r\n","teaser_hrfilter":"Erfahren Sie in unserer einstündigen Online-Veranstaltung alles Wissenswerte über Jobwert.infos ausführliche Gehaltsberichte. Auf Basis vorangegangener Gehaltsbenchmarks stellen wir Ihnen in einer Live-Demonstration Jobwerts detailierte Auswertungsmöglichkeiten zu gefragten Berufsprofilen, wie Softwareentwickler, Ingenieure, Vertrieb oder Projektleiter genauer vor. ","countdown_visible":true,"countdown_start":"2021-02-15T10:00:51.000+01:00","countdown_description":"Erfahren Sie in unserer einstündigen Online-Veranstaltung alles Wissenswerte über Jobwert.infos ausführliche Gehaltsberichte. Auf Basis vorangegangener Gehaltsbenchmarks stellen wir Ihnen in einer Live-Demonstration Jobwerts detailierte Auswertungsmöglichkeiten zu gefragten Berufsprofilen, wie Softwareentwickler, Ingenieure, Vertrieb oder Projektleiter genauer vor. ","description":"\u003cdiv\u003eMit Jobwert.info bietet der Empfehlungsbund einen zuverlässigen Gehaltsvergleich zwischen Unternehmen derselben Branche und Region an. Jobwert.info umfasst mit über 27000 Gehaltsdatensätzen die real gezahlten Gehälter von teilnehmenden kleinen und mittelständischen Unternehmen aus 100 Standorten bundesweit. Jedem teilnehmenden Unternehmen am Gehaltsbenchmark wird eine detaillierte Auswertung nach eigens gewählten Filterkriterien angeboten.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eWährend unserer einstündigen Online-Veranstaltung möchten wir Ihnen, anhand der Gehaltsdatengrundlage vorangegangener Gehaltsbenchmarks der letzten Jahre, Jobwert.infos Filtermöglichkeiten live demonstrieren. Am Beispiel aktuell gefragter Berufsprofile, wie Softwareentwickler, Vertrieb oder Projektleitung geben wir einen transparenten Einblick in Jobwert.infos ausführliche Gehaltsberichte, die jedem teilnehmenden Unternehmen zur Verfügung gestellt werden. In einer anschließenden Fragerunde beantworten wir liebend gern Ihre offenen Fragen zur Teilnahme und Auswertung am Gehaltsbenchmark mit Jobwert.info.\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 Minuten)\u003c/li\u003e\u003cli\u003eVorstellung der Auswertungsberichte (ca. 40 Minuten)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 Minuten)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2021-03-02T10:00:36.000+01:00","finish":"2021-03-02T11:00:36.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/53/wide_Banner_Gehaltsbenchmark_f%C3%BCr_KMU.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/53/wide_Banner_Gehaltsbenchmark_f%C3%BCr_KMU.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/53/Logo_Gehaltsbenchmarking_500x500.png","register_url":"https://www.empfehlungsbund.de/events/53/register","show_url":"https://www.empfehlungsbund.de/events/53","events":[{"id":127,"display_line":"02.03.2021 - 10 bis 11:00 Uhr Dresden - Online-Vorstellung: Gehaltsbenchmarks für KMU mit Jobwert.info - Gastgeber: Empfehlungsbund","subtitle":"Online-Vorstellung: Gehaltsbenchmarks für KMU mit Jobwert.info","city":"Dresden","start":"2021-03-02T10:00:36.000+01:00","finish":"2021-03-02T11:00:36.000+01:00","address":"WebEx Online-Veranstaltung","event_host":"Empfehlungsbund","lat":51.0183,"lon":13.7886,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20201025T030000\nRDATE:20201025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210302T110036\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210302T100036\nCATEGORIES:BUSINESS\nDESCRIPTION:Mit Jobwert.info bietet der Empfehlungsbund einen zuverlässig\n en Gehaltsvergleich zwischen Unternehmen derselben Branche und Region an\n . Jobwert.info umfasst mit über 27000 Gehaltsdatensätzen die real gezahl\n ten Gehälter von teilnehmenden kleinen und mittelständischen Unternehmen\n  aus 100 Standorten bundesweit. Jedem teilnehmenden Unternehmen am Gehal\n tsbenchmark wird eine detaillierte Auswertung nach eigens gewählten Filt\n erkriterien angeboten. \\n\\nWährend unserer einstündigen Online-Veranstal\n tung möchten wir Ihnen\\, anhand der Gehaltsdatengrundlage vorangegangene\n r Gehaltsbenchmarks der letzten Jahre\\, Jobwert.infos Filtermöglichkeite\n n live demonstrieren. Am Beispiel aktuell gefragter Berufsprofile\\, wie \n Softwareentwickler\\, Vertrieb oder Projektleitung geben wir einen transp\n arenten Einblick in Jobwert.infos ausführliche Gehaltsberichte\\, die jed\n em teilnehmenden Unternehmen zur Verfügung gestellt werden. In einer ans\n chließenden Fragerunde beantworten wir liebend gern Ihre offenen Fragen \n zur Teilnahme und Auswertung am Gehaltsbenchmark mit Jobwert.info.\\n\\n* \n Willkommensrunde (ca. 10 Minuten)* Vorstellung der Auswertungsberichte (\n ca. 40 Minuten)* Fragerunde (ca. 10 Minuten)\\n\\n\nURL:https://www.empfehlungsbund.de/events/53\nSUMMARY:Online-Vorstellung: Gehaltsbenchmarks für KMU mit Jobwert.info\nORGANIZER;CN=Empfehlungsbund / Empfehlungsbund.de:https://www.empfehlungs\n bund.de/events/53\nATTACH:https://www.empfehlungsbund.de/events/53\nLOCATION:Empfehlungsbund\\, WebEx Online-Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eMit Jobwert.info bietet der E\n mpfehlungsbund einen zuverlässigen Gehaltsvergleich zwischen Unternehmen\n  derselben Branche und Region an. Jobwert.info umfasst mit über 27000 Ge\n haltsdatensätzen die real gezahlten Gehälter von teilnehmenden kleinen u\n nd mittelständischen Unternehmen aus 100 Standorten bundesweit. Jedem te\n ilnehmenden Unternehmen am Gehaltsbenchmark wird eine detaillierte Auswe\n rtung nach eigens gewählten Filterkriterien angeboten.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eWähr\n end unserer einstündigen Online-Veranstaltung möchten wir Ihnen, anhand \n der Gehaltsdatengrundlage vorangegangener Gehaltsbenchmarks der letzten \n Jahre, Jobwert.infos Filtermöglichkeiten live demonstrieren. Am Beispiel\n  aktuell gefragter Berufsprofile, wie Softwareentwickler, Vertrieb oder \n Projektleitung geben wir einen transparenten Einblick in Jobwert.infos a\n usführliche Gehaltsberichte, die jedem teilnehmenden Unternehmen zur Ver\n fügung gestellt werden. In einer anschließenden Fragerunde beantworten w\n ir liebend gern Ihre offenen Fragen zur Teilnahme und Auswertung am Geha\n ltsbenchmark mit Jobwert.info.\u003c/div\u003e\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 Min\n uten)\u003c/li\u003e\u003cli\u003eVorstellung der Auswertungsberichte (ca. 40 Minuten)\u003c/li\u003e\u003c\n li\u003eFragerunde (ca. 10 Minuten)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":52,"name":"ebcw_01_2021","hashtag":"ebcw","title":"Online Empfehlungsbund Community Workshop 2021","teaser":"In unserem Januar Community Workshop 2021 beschäftigen wir uns mit dem Thema Personal-Controlling. Einleitend thematisieren wir in unserem Fachvortrag Kennzahlensysteme für die Personalgewinnung. In der darauffolgenden Workshoprunde werden wir Kennzahlen aus den Bereichen Personalauswahl und Personalmarketing ermitteln, die von Unternehmen bzw. unseren Teilnehmer*innen erhoben werden. Ziel ist es, die ermittelten Kennzahlen in ein logisch kohärentes Kennzahlensystem zu überführen. ","teaser_hrfilter":"In unserem Januar Community Workshop 2021 beschäftigen wir uns mit dem Thema Personal-Controlling. Neben einen Fachvortrag zum Thema Kennzahlensysteme für die Personalgewinnung, werden wir bekannte Kennzahlen aus den Bereichen Personalauswahl und Personalmarketing diskutieren, um sie in ein logisch kohärentes Kennzahlensystem einzugliedern.","countdown_visible":true,"countdown_start":"2020-12-16T10:00:04.000+01:00","countdown_description":"In unserem Januar Community Workshop 2021 beschäftigen wir uns mit dem Thema Personal-Controlling. Neben einen Fachvortrag zum Thema Kennzahlensysteme für die Personalgewinnung, werden wir bekannte Kennzahlen aus den Bereichen Personalauswahl und Personalmarketing diskutieren, um sie in ein logisch kohärentes Kennzahlensystem einzugliedern.","description":"\u003cdiv\u003e\u003cstrong\u003eDer Empfehlungsbund Community Workshop 2021 findet online in vier identischen Sessions zu unterschiedlichen Zeiten statt. \u003c/strong\u003e\u003cbr\u003eUnsere Community Workshops verfolgen das Ziel, den persönlichen Austausch von Personalexpert*innen und Führungskräften anzuregen. Dafür stellen wir die neuesten Entwicklungen des Empfehlungsbundes und seiner Services vor. In diesem Workshop stehen Kennzahlen und Kennzahlensysteme zur Personalgewinnung im Fokus. \u003cbr\u003e\u003cbr\u003eEinleitend legen wir in unserem Fachvortrag einen theoretischen Rahmen und besprechen hier Kennzahlensysteme für die Personalgewinnung. In der darauffolgenden Workshoprunde werden wir Kennzahlen aus den Bereichen Personalauswahl und Personalmarketing diskutieren, die von Unternehmen bzw. unseren Teilnehmer*innen real erhoben werden. Ziel ist es, die ermittelten Kennzahlen in ein logisch kohärentes Kennzahlensystem zu überführen. Hierfür bitten wir Sie, vorab anonym an einer kurzen Umfrage teilzunehmen, welche Kennzahlen Sie in den Bereichen Personalmarketing und Personalauswahl erheben. Die Umfrageergebnisse bilden die Arbeitsgrundlage für den Workshop. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eLink zur Umfrage: \u003c/strong\u003e\u003ca href=\"https://www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Personalcontrolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e\u003cbr\u003eVielen Dank!\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e","agenda":"\u003cdiv\u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und den Community-Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an Stellenanzeigen und Bewerbungen in der Corona-Krise\u003c/li\u003e\u003cli\u003eNeue Features der Services\u003c/li\u003e\u003cli\u003eAnkündigung: Jobwert.info Gehaltsbenchmark 2021\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cstrong\u003eFachvortrag: Kennzahlensysteme im Personalcontrolling\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eElemente moderner Personalcontrolling-Systeme\u003c/li\u003e\u003cli\u003eZielbestimmung des Personalcontrollings\u003c/li\u003e\u003cli\u003eOrganisatorische Verankerung\u003c/li\u003e\u003cli\u003eInstrumentorierte vs. Akteurorientierte Kennzahlensysteme\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Kennzahlen zur Personalgewinnung\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWelche Kennzahlen erheben Sie in Ihrem Unternehmen? Aufruf zur Umfrageteilnahme: \u003ca href=\"https://www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Personalcontrolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\u003cli\u003eAuswertung der Umfrageergebnisse\u003c/li\u003e\u003cli\u003eKennzahlen für Personalmarketing und Personalauswahl\u003c/li\u003e\u003cli\u003eOffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e","start":"2021-01-26T09:00:22.000+01:00","finish":"2021-01-27T17:00:21.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/52/wide_Empfehlungsbund-CT-2021.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/52/wide_Empfehlungsbund-CT-2021.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/52/Logo_EBCW.png","register_url":"https://www.empfehlungsbund.de/events/52/register","show_url":"https://www.empfehlungsbund.de/events/52","events":[{"id":123,"display_line":"26.01.2021 - 09 bis 12:00 Uhr  - WebEx EBCW Session 1 - Gastgeber: pludoni GmbH","subtitle":"WebEx EBCW Session 1","city":null,"start":"2021-01-26T09:00:22.000+01:00","finish":"2021-01-26T12:00:22.000+01:00","address":"WebEx EBCW Session 1","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20201025T030000\nRDATE:20201025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210126T120022\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210126T090022\nCATEGORIES:BUSINESS\nDESCRIPTION:Der Empfehlungsbund Community Workshop 2021 findet online in \n vier identischen Sessions zu unterschiedlichen Zeiten statt. \\nUnsere Co\n mmunity Workshops verfolgen das Ziel\\, den persönlichen Austausch von Pe\n rsonalexpert*innen und Führungskräften anzuregen. Dafür stellen wir die \n neuesten Entwicklungen des Empfehlungsbundes und seiner Services vor. In\n  diesem Workshop stehen Kennzahlen und Kennzahlensysteme zur Personalgew\n innung im Fokus. \\n\\nEinleitend legen wir in unserem Fachvortrag einen t\n heoretischen Rahmen und besprechen hier Kennzahlensysteme für die Person\n algewinnung. In der darauffolgenden Workshoprunde werden wir Kennzahlen \n aus den Bereichen Personalauswahl und Personalmarketing diskutieren\\, di\n e von Unternehmen bzw. unseren Teilnehmer*innen real erhoben werden. Zie\n l ist es\\, die ermittelten Kennzahlen in ein logisch kohärentes Kennzahl\n ensystem zu überführen. Hierfür bitten wir Sie\\, vorab anonym an einer k\n urzen Umfrage teilzunehmen\\, welche Kennzahlen Sie in den Bereichen Pers\n onalmarketing und Personalauswahl erheben. Die Umfrageergebnisse bilden \n die Arbeitsgrundlage für den Workshop. \\n\\nLink zur Umfrage: Umfrage Per\n sonalcontrolling-Kennzahlen\\nVielen Dank!\\n\\nDie Teilnahme am Empfehlung\n sbund Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung\n  zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten\n  und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Eve\n nt per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein H\n eadset.\\nDer Empfehlungsbund ist das führende Netzwerk zur effizienten P\n ersonalgewinnung durch Empfehlungen in Deutschland.\\n\\nAktuelle Kennzahl\n en zum Empfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwickl\n ungen im Empfehlungsbund und den Community-Portalen* Entwicklung der Anz\n ahl an Stellenanzeigen und Bewerbungen in der Corona-Krise* Neue Feature\n s der Services* Ankündigung: Jobwert.info Gehaltsbenchmark 2021\\n\\nFachv\n ortrag: Kennzahlensysteme im Personalcontrolling\\n\\n\\n* Elemente moderne\n r Personalcontrolling-Systeme* Zielbestimmung des Personalcontrollings* \n Organisatorische Verankerung* Instrumentorierte vs. Akteurorientierte Ke\n nnzahlensysteme\\nWorkshop: Kennzahlen zur Personalgewinnung\\n\\n\\n* Welch\n e Kennzahlen erheben Sie in Ihrem Unternehmen? Aufruf zur Umfrageteilnah\n me: Umfrage Personalcontrolling-Kennzahlen* Auswertung der Umfrageergebn\n isse* Kennzahlen für Personalmarketing und Personalauswahl* Offener Erfa\n hrungsaustausch\nURL:https://www.empfehlungsbund.de/events/52\nSUMMARY:Online Empfehlungsbund Community Workshop 2021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/52\nATTACH:https://www.empfehlungsbund.de/events/52\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 1\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eDer Empfehlungsbund C\n ommunity Workshop 2021 findet online in vier identischen Sessions zu unt\n erschiedlichen Zeiten statt. \u003c/strong\u003e\u003cbr\u003eUnsere Community Workshops ver\n folgen das Ziel, den persönlichen Austausch von Personalexpert*innen und\n  Führungskräften anzuregen. Dafür stellen wir die neuesten Entwicklungen\n  des Empfehlungsbundes und seiner Services vor. In diesem Workshop stehe\n n Kennzahlen und Kennzahlensysteme zur Personalgewinnung im Fokus. \u003cbr\u003e\u003c\n br\u003eEinleitend legen wir in unserem Fachvortrag einen theoretischen Rahme\n n und besprechen hier Kennzahlensysteme für die Personalgewinnung. In de\n r darauffolgenden Workshoprunde werden wir Kennzahlen aus den Bereichen \n Personalauswahl und Personalmarketing diskutieren, die von Unternehmen b\n zw. unseren Teilnehmer*innen real erhoben werden. Ziel ist es, die ermit\n telten Kennzahlen in ein logisch kohärentes Kennzahlensystem zu überführ\n en. Hierfür bitten wir Sie, vorab anonym an einer kurzen Umfrage teilzun\n ehmen, welche Kennzahlen Sie in den Bereichen Personalmarketing und Pers\n onalauswahl erheben. Die Umfrageergebnisse bilden die Arbeitsgrundlage f\n ür den Workshop. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eLink zur Umfrage: \u003c/strong\u003e\u003ca href=\"htt\n ps://www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Persona\n lcontrolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e\u003cbr\u003eVielen Dank!\u003c/strong\u003e\u003cbr\n \u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen Inter\n netzugang und wenn möglich ein Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlu\n ngsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur\n  effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/d\n iv\u003e\u003cdiv\u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische U\n pdates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehl\n ungsbund und den Community-Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an St\n ellenanzeigen und Bewerbungen in der Corona-Krise\u003c/li\u003e\u003cli\u003eNeue Features \n der Services\u003c/li\u003e\u003cli\u003eAnkündigung: Jobwert.info Gehaltsbenchmark 2021\u003cbr\u003e\n \u003cbr\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cstrong\u003eFachvortrag: Kennzahlensysteme im Personalcon\n trolling\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eElemente moderner Personalcontrol\n ling-Systeme\u003c/li\u003e\u003cli\u003eZielbestimmung des Personalcontrollings\u003c/li\u003e\u003cli\u003eOrg\n anisatorische Verankerung\u003c/li\u003e\u003cli\u003eInstrumentorierte vs. Akteurorientiert\n e Kennzahlensysteme\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Kennzahlen zur P\n ersonalgewinnung\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWelche Kennzahlen erheben\n  Sie in Ihrem Unternehmen? Aufruf zur Umfrageteilnahme: \u003ca href=\"https:/\n /www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Personalcon\n trolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\u003cli\u003eAuswertung der Umfrageergebniss\n e\u003c/li\u003e\u003cli\u003eKennzahlen für Personalmarketing und Personalauswahl\u003c/li\u003e\u003cli\u003eO\n ffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":124,"display_line":"26.01.2021 - 14 bis 17:00 Uhr  - WebEx EBCW Session 2 - Gastgeber: pludoni GmbH","subtitle":"WebEx EBCW Session 2","city":null,"start":"2021-01-26T14:00:38.000+01:00","finish":"2021-01-26T17:00:38.000+01:00","address":"WebEx EBCW Session 2","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20201025T030000\nRDATE:20201025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210126T170038\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210126T140038\nCATEGORIES:BUSINESS\nDESCRIPTION:Der Empfehlungsbund Community Workshop 2021 findet online in \n vier identischen Sessions zu unterschiedlichen Zeiten statt. \\nUnsere Co\n mmunity Workshops verfolgen das Ziel\\, den persönlichen Austausch von Pe\n rsonalexpert*innen und Führungskräften anzuregen. Dafür stellen wir die \n neuesten Entwicklungen des Empfehlungsbundes und seiner Services vor. In\n  diesem Workshop stehen Kennzahlen und Kennzahlensysteme zur Personalgew\n innung im Fokus. \\n\\nEinleitend legen wir in unserem Fachvortrag einen t\n heoretischen Rahmen und besprechen hier Kennzahlensysteme für die Person\n algewinnung. In der darauffolgenden Workshoprunde werden wir Kennzahlen \n aus den Bereichen Personalauswahl und Personalmarketing diskutieren\\, di\n e von Unternehmen bzw. unseren Teilnehmer*innen real erhoben werden. Zie\n l ist es\\, die ermittelten Kennzahlen in ein logisch kohärentes Kennzahl\n ensystem zu überführen. Hierfür bitten wir Sie\\, vorab anonym an einer k\n urzen Umfrage teilzunehmen\\, welche Kennzahlen Sie in den Bereichen Pers\n onalmarketing und Personalauswahl erheben. Die Umfrageergebnisse bilden \n die Arbeitsgrundlage für den Workshop. \\n\\nLink zur Umfrage: Umfrage Per\n sonalcontrolling-Kennzahlen\\nVielen Dank!\\n\\nDie Teilnahme am Empfehlung\n sbund Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung\n  zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten\n  und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Eve\n nt per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein H\n eadset.\\nDer Empfehlungsbund ist das führende Netzwerk zur effizienten P\n ersonalgewinnung durch Empfehlungen in Deutschland.\\n\\nAktuelle Kennzahl\n en zum Empfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwickl\n ungen im Empfehlungsbund und den Community-Portalen* Entwicklung der Anz\n ahl an Stellenanzeigen und Bewerbungen in der Corona-Krise* Neue Feature\n s der Services* Ankündigung: Jobwert.info Gehaltsbenchmark 2021\\n\\nFachv\n ortrag: Kennzahlensysteme im Personalcontrolling\\n\\n\\n* Elemente moderne\n r Personalcontrolling-Systeme* Zielbestimmung des Personalcontrollings* \n Organisatorische Verankerung* Instrumentorierte vs. Akteurorientierte Ke\n nnzahlensysteme\\nWorkshop: Kennzahlen zur Personalgewinnung\\n\\n\\n* Welch\n e Kennzahlen erheben Sie in Ihrem Unternehmen? Aufruf zur Umfrageteilnah\n me: Umfrage Personalcontrolling-Kennzahlen* Auswertung der Umfrageergebn\n isse* Kennzahlen für Personalmarketing und Personalauswahl* Offener Erfa\n hrungsaustausch\nURL:https://www.empfehlungsbund.de/events/52\nSUMMARY:Online Empfehlungsbund Community Workshop 2021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/52\nATTACH:https://www.empfehlungsbund.de/events/52\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 2\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eDer Empfehlungsbund C\n ommunity Workshop 2021 findet online in vier identischen Sessions zu unt\n erschiedlichen Zeiten statt. \u003c/strong\u003e\u003cbr\u003eUnsere Community Workshops ver\n folgen das Ziel, den persönlichen Austausch von Personalexpert*innen und\n  Führungskräften anzuregen. Dafür stellen wir die neuesten Entwicklungen\n  des Empfehlungsbundes und seiner Services vor. In diesem Workshop stehe\n n Kennzahlen und Kennzahlensysteme zur Personalgewinnung im Fokus. \u003cbr\u003e\u003c\n br\u003eEinleitend legen wir in unserem Fachvortrag einen theoretischen Rahme\n n und besprechen hier Kennzahlensysteme für die Personalgewinnung. In de\n r darauffolgenden Workshoprunde werden wir Kennzahlen aus den Bereichen \n Personalauswahl und Personalmarketing diskutieren, die von Unternehmen b\n zw. unseren Teilnehmer*innen real erhoben werden. Ziel ist es, die ermit\n telten Kennzahlen in ein logisch kohärentes Kennzahlensystem zu überführ\n en. Hierfür bitten wir Sie, vorab anonym an einer kurzen Umfrage teilzun\n ehmen, welche Kennzahlen Sie in den Bereichen Personalmarketing und Pers\n onalauswahl erheben. Die Umfrageergebnisse bilden die Arbeitsgrundlage f\n ür den Workshop. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eLink zur Umfrage: \u003c/strong\u003e\u003ca href=\"htt\n ps://www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Persona\n lcontrolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e\u003cbr\u003eVielen Dank!\u003c/strong\u003e\u003cbr\n \u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen Inter\n netzugang und wenn möglich ein Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlu\n ngsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur\n  effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/d\n iv\u003e\u003cdiv\u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische U\n pdates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehl\n ungsbund und den Community-Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an St\n ellenanzeigen und Bewerbungen in der Corona-Krise\u003c/li\u003e\u003cli\u003eNeue Features \n der Services\u003c/li\u003e\u003cli\u003eAnkündigung: Jobwert.info Gehaltsbenchmark 2021\u003cbr\u003e\n \u003cbr\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cstrong\u003eFachvortrag: Kennzahlensysteme im Personalcon\n trolling\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eElemente moderner Personalcontrol\n ling-Systeme\u003c/li\u003e\u003cli\u003eZielbestimmung des Personalcontrollings\u003c/li\u003e\u003cli\u003eOrg\n anisatorische Verankerung\u003c/li\u003e\u003cli\u003eInstrumentorierte vs. Akteurorientiert\n e Kennzahlensysteme\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Kennzahlen zur P\n ersonalgewinnung\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWelche Kennzahlen erheben\n  Sie in Ihrem Unternehmen? Aufruf zur Umfrageteilnahme: \u003ca href=\"https:/\n /www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Personalcon\n trolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\u003cli\u003eAuswertung der Umfrageergebniss\n e\u003c/li\u003e\u003cli\u003eKennzahlen für Personalmarketing und Personalauswahl\u003c/li\u003e\u003cli\u003eO\n ffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":125,"display_line":"27.01.2021 - 09 bis 12:00 Uhr  - WebEx EBCW Session 3 - Gastgeber: pludoni GmbH","subtitle":"WebEx EBCW Session 3","city":null,"start":"2021-01-27T09:00:51.000+01:00","finish":"2021-01-27T12:00:51.000+01:00","address":"WebEx EBCW Session 3","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20201025T030000\nRDATE:20201025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210127T120051\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210127T090051\nCATEGORIES:BUSINESS\nDESCRIPTION:Der Empfehlungsbund Community Workshop 2021 findet online in \n vier identischen Sessions zu unterschiedlichen Zeiten statt. \\nUnsere Co\n mmunity Workshops verfolgen das Ziel\\, den persönlichen Austausch von Pe\n rsonalexpert*innen und Führungskräften anzuregen. Dafür stellen wir die \n neuesten Entwicklungen des Empfehlungsbundes und seiner Services vor. In\n  diesem Workshop stehen Kennzahlen und Kennzahlensysteme zur Personalgew\n innung im Fokus. \\n\\nEinleitend legen wir in unserem Fachvortrag einen t\n heoretischen Rahmen und besprechen hier Kennzahlensysteme für die Person\n algewinnung. In der darauffolgenden Workshoprunde werden wir Kennzahlen \n aus den Bereichen Personalauswahl und Personalmarketing diskutieren\\, di\n e von Unternehmen bzw. unseren Teilnehmer*innen real erhoben werden. Zie\n l ist es\\, die ermittelten Kennzahlen in ein logisch kohärentes Kennzahl\n ensystem zu überführen. Hierfür bitten wir Sie\\, vorab anonym an einer k\n urzen Umfrage teilzunehmen\\, welche Kennzahlen Sie in den Bereichen Pers\n onalmarketing und Personalauswahl erheben. Die Umfrageergebnisse bilden \n die Arbeitsgrundlage für den Workshop. \\n\\nLink zur Umfrage: Umfrage Per\n sonalcontrolling-Kennzahlen\\nVielen Dank!\\n\\nDie Teilnahme am Empfehlung\n sbund Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung\n  zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten\n  und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Eve\n nt per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein H\n eadset.\\nDer Empfehlungsbund ist das führende Netzwerk zur effizienten P\n ersonalgewinnung durch Empfehlungen in Deutschland.\\n\\nAktuelle Kennzahl\n en zum Empfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwickl\n ungen im Empfehlungsbund und den Community-Portalen* Entwicklung der Anz\n ahl an Stellenanzeigen und Bewerbungen in der Corona-Krise* Neue Feature\n s der Services* Ankündigung: Jobwert.info Gehaltsbenchmark 2021\\n\\nFachv\n ortrag: Kennzahlensysteme im Personalcontrolling\\n\\n\\n* Elemente moderne\n r Personalcontrolling-Systeme* Zielbestimmung des Personalcontrollings* \n Organisatorische Verankerung* Instrumentorierte vs. Akteurorientierte Ke\n nnzahlensysteme\\nWorkshop: Kennzahlen zur Personalgewinnung\\n\\n\\n* Welch\n e Kennzahlen erheben Sie in Ihrem Unternehmen? Aufruf zur Umfrageteilnah\n me: Umfrage Personalcontrolling-Kennzahlen* Auswertung der Umfrageergebn\n isse* Kennzahlen für Personalmarketing und Personalauswahl* Offener Erfa\n hrungsaustausch\nURL:https://www.empfehlungsbund.de/events/52\nSUMMARY:Online Empfehlungsbund Community Workshop 2021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/52\nATTACH:https://www.empfehlungsbund.de/events/52\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 3\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eDer Empfehlungsbund C\n ommunity Workshop 2021 findet online in vier identischen Sessions zu unt\n erschiedlichen Zeiten statt. \u003c/strong\u003e\u003cbr\u003eUnsere Community Workshops ver\n folgen das Ziel, den persönlichen Austausch von Personalexpert*innen und\n  Führungskräften anzuregen. Dafür stellen wir die neuesten Entwicklungen\n  des Empfehlungsbundes und seiner Services vor. In diesem Workshop stehe\n n Kennzahlen und Kennzahlensysteme zur Personalgewinnung im Fokus. \u003cbr\u003e\u003c\n br\u003eEinleitend legen wir in unserem Fachvortrag einen theoretischen Rahme\n n und besprechen hier Kennzahlensysteme für die Personalgewinnung. In de\n r darauffolgenden Workshoprunde werden wir Kennzahlen aus den Bereichen \n Personalauswahl und Personalmarketing diskutieren, die von Unternehmen b\n zw. unseren Teilnehmer*innen real erhoben werden. Ziel ist es, die ermit\n telten Kennzahlen in ein logisch kohärentes Kennzahlensystem zu überführ\n en. Hierfür bitten wir Sie, vorab anonym an einer kurzen Umfrage teilzun\n ehmen, welche Kennzahlen Sie in den Bereichen Personalmarketing und Pers\n onalauswahl erheben. Die Umfrageergebnisse bilden die Arbeitsgrundlage f\n ür den Workshop. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eLink zur Umfrage: \u003c/strong\u003e\u003ca href=\"htt\n ps://www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Persona\n lcontrolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e\u003cbr\u003eVielen Dank!\u003c/strong\u003e\u003cbr\n \u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen Inter\n netzugang und wenn möglich ein Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlu\n ngsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur\n  effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/d\n iv\u003e\u003cdiv\u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische U\n pdates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehl\n ungsbund und den Community-Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an St\n ellenanzeigen und Bewerbungen in der Corona-Krise\u003c/li\u003e\u003cli\u003eNeue Features \n der Services\u003c/li\u003e\u003cli\u003eAnkündigung: Jobwert.info Gehaltsbenchmark 2021\u003cbr\u003e\n \u003cbr\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cstrong\u003eFachvortrag: Kennzahlensysteme im Personalcon\n trolling\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eElemente moderner Personalcontrol\n ling-Systeme\u003c/li\u003e\u003cli\u003eZielbestimmung des Personalcontrollings\u003c/li\u003e\u003cli\u003eOrg\n anisatorische Verankerung\u003c/li\u003e\u003cli\u003eInstrumentorierte vs. Akteurorientiert\n e Kennzahlensysteme\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Kennzahlen zur P\n ersonalgewinnung\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWelche Kennzahlen erheben\n  Sie in Ihrem Unternehmen? Aufruf zur Umfrageteilnahme: \u003ca href=\"https:/\n /www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Personalcon\n trolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\u003cli\u003eAuswertung der Umfrageergebniss\n e\u003c/li\u003e\u003cli\u003eKennzahlen für Personalmarketing und Personalauswahl\u003c/li\u003e\u003cli\u003eO\n ffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":126,"display_line":"27.01.2021 - 14 bis 17:00 Uhr  - WebEx EBCW Session 4 - Gastgeber: pludoni GmbH","subtitle":"WebEx EBCW Session 4","city":null,"start":"2021-01-27T14:00:21.000+01:00","finish":"2021-01-27T17:00:21.000+01:00","address":"WebEx EBCW Session 4","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20201025T030000\nRDATE:20201025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20210127T170021\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20210127T140021\nCATEGORIES:BUSINESS\nDESCRIPTION:Der Empfehlungsbund Community Workshop 2021 findet online in \n vier identischen Sessions zu unterschiedlichen Zeiten statt. \\nUnsere Co\n mmunity Workshops verfolgen das Ziel\\, den persönlichen Austausch von Pe\n rsonalexpert*innen und Führungskräften anzuregen. Dafür stellen wir die \n neuesten Entwicklungen des Empfehlungsbundes und seiner Services vor. In\n  diesem Workshop stehen Kennzahlen und Kennzahlensysteme zur Personalgew\n innung im Fokus. \\n\\nEinleitend legen wir in unserem Fachvortrag einen t\n heoretischen Rahmen und besprechen hier Kennzahlensysteme für die Person\n algewinnung. In der darauffolgenden Workshoprunde werden wir Kennzahlen \n aus den Bereichen Personalauswahl und Personalmarketing diskutieren\\, di\n e von Unternehmen bzw. unseren Teilnehmer*innen real erhoben werden. Zie\n l ist es\\, die ermittelten Kennzahlen in ein logisch kohärentes Kennzahl\n ensystem zu überführen. Hierfür bitten wir Sie\\, vorab anonym an einer k\n urzen Umfrage teilzunehmen\\, welche Kennzahlen Sie in den Bereichen Pers\n onalmarketing und Personalauswahl erheben. Die Umfrageergebnisse bilden \n die Arbeitsgrundlage für den Workshop. \\n\\nLink zur Umfrage: Umfrage Per\n sonalcontrolling-Kennzahlen\\nVielen Dank!\\n\\nDie Teilnahme am Empfehlung\n sbund Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung\n  zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten\n  und technische Hinweise zur Teilnahme erhalten Sie 1-2 Tage vor dem Eve\n nt per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein H\n eadset.\\nDer Empfehlungsbund ist das führende Netzwerk zur effizienten P\n ersonalgewinnung durch Empfehlungen in Deutschland.\\n\\nAktuelle Kennzahl\n en zum Empfehlungsbund und technische Updates\\n\\n\\n* Allgemeine Entwickl\n ungen im Empfehlungsbund und den Community-Portalen* Entwicklung der Anz\n ahl an Stellenanzeigen und Bewerbungen in der Corona-Krise* Neue Feature\n s der Services* Ankündigung: Jobwert.info Gehaltsbenchmark 2021\\n\\nFachv\n ortrag: Kennzahlensysteme im Personalcontrolling\\n\\n\\n* Elemente moderne\n r Personalcontrolling-Systeme* Zielbestimmung des Personalcontrollings* \n Organisatorische Verankerung* Instrumentorierte vs. Akteurorientierte Ke\n nnzahlensysteme\\nWorkshop: Kennzahlen zur Personalgewinnung\\n\\n\\n* Welch\n e Kennzahlen erheben Sie in Ihrem Unternehmen? Aufruf zur Umfrageteilnah\n me: Umfrage Personalcontrolling-Kennzahlen* Auswertung der Umfrageergebn\n isse* Kennzahlen für Personalmarketing und Personalauswahl* Offener Erfa\n hrungsaustausch\nURL:https://www.empfehlungsbund.de/events/52\nSUMMARY:Online Empfehlungsbund Community Workshop 2021\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/52\nATTACH:https://www.empfehlungsbund.de/events/52\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 4\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eDer Empfehlungsbund C\n ommunity Workshop 2021 findet online in vier identischen Sessions zu unt\n erschiedlichen Zeiten statt. \u003c/strong\u003e\u003cbr\u003eUnsere Community Workshops ver\n folgen das Ziel, den persönlichen Austausch von Personalexpert*innen und\n  Führungskräften anzuregen. Dafür stellen wir die neuesten Entwicklungen\n  des Empfehlungsbundes und seiner Services vor. In diesem Workshop stehe\n n Kennzahlen und Kennzahlensysteme zur Personalgewinnung im Fokus. \u003cbr\u003e\u003c\n br\u003eEinleitend legen wir in unserem Fachvortrag einen theoretischen Rahme\n n und besprechen hier Kennzahlensysteme für die Personalgewinnung. In de\n r darauffolgenden Workshoprunde werden wir Kennzahlen aus den Bereichen \n Personalauswahl und Personalmarketing diskutieren, die von Unternehmen b\n zw. unseren Teilnehmer*innen real erhoben werden. Ziel ist es, die ermit\n telten Kennzahlen in ein logisch kohärentes Kennzahlensystem zu überführ\n en. Hierfür bitten wir Sie, vorab anonym an einer kurzen Umfrage teilzun\n ehmen, welche Kennzahlen Sie in den Bereichen Personalmarketing und Pers\n onalauswahl erheben. Die Umfrageergebnisse bilden die Arbeitsgrundlage f\n ür den Workshop. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eLink zur Umfrage: \u003c/strong\u003e\u003ca href=\"htt\n ps://www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Persona\n lcontrolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003cstrong\u003e\u003cbr\u003eVielen Dank!\u003c/strong\u003e\u003cbr\n \u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie 1-2 Tage vor dem Event per E-Mail. Sie benötigen einen Inter\n netzugang und wenn möglich ein Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlu\n ngsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur\n  effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/d\n iv\u003e\u003cdiv\u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische U\n pdates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehl\n ungsbund und den Community-Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an St\n ellenanzeigen und Bewerbungen in der Corona-Krise\u003c/li\u003e\u003cli\u003eNeue Features \n der Services\u003c/li\u003e\u003cli\u003eAnkündigung: Jobwert.info Gehaltsbenchmark 2021\u003cbr\u003e\n \u003cbr\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cstrong\u003eFachvortrag: Kennzahlensysteme im Personalcon\n trolling\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eElemente moderner Personalcontrol\n ling-Systeme\u003c/li\u003e\u003cli\u003eZielbestimmung des Personalcontrollings\u003c/li\u003e\u003cli\u003eOrg\n anisatorische Verankerung\u003c/li\u003e\u003cli\u003eInstrumentorierte vs. Akteurorientiert\n e Kennzahlensysteme\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eWorkshop: Kennzahlen zur P\n ersonalgewinnung\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWelche Kennzahlen erheben\n  Sie in Ihrem Unternehmen? Aufruf zur Umfrageteilnahme: \u003ca href=\"https:/\n /www.trendea.de/umfrage/personalmarketing#/\"\u003e\u003cstrong\u003eUmfrage Personalcon\n trolling-Kennzahlen\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\u003cli\u003eAuswertung der Umfrageergebniss\n e\u003c/li\u003e\u003cli\u003eKennzahlen für Personalmarketing und Personalauswahl\u003c/li\u003e\u003cli\u003eO\n ffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":51,"name":"Jobwert Vorstellung","hashtag":"ebcw","title":"Online-Vorstellung: Gehaltsbenchmarking mit Jobwert.info ","teaser":"Mit Jobwert.info bietet der Empfehlungsbund einen zuverlässigen Gehaltsvergleich mit anderen Unternehmen derselben Branche und Region. Bundesweit werden die Gehälter von teilnehmenden kleinen und mittelständischen Unternehmen genau erfasst und jedem teilnehmenden Unternehmen wird eine detaillierte Auswertung nach eigens gewählten Kriterien angeboten. Das Benchmarking von Gehalt und Benefits kann dazu eingesetzt werden, eine Strategie zur Mitarbeitergewinnung und -bindung zu entwickeln. \r\n\r\nJe mehr Unternehmen Gehaltsdaten liefern, desto aussagekräftiger wird dieser Vergleich. Jobwert.info ist auf die Branchen IT, Maschinenbau/Elektrotechnik und die kaufmännischen Berufe spezialisiert. Mit aktuell 24845 Datensätze für 20 Mitarbeiterprofile bietet Jobwert.info für KMUs hier die genauesten Ergebnisse.  Die Arbeitsweise und den Leistungsumfang des Gehaltsbenchmarking mit dem Empfehlungsbund möchten wir Ihnen in einer einstündigen Online-Veranstaltung vorstellen.\r\n","teaser_hrfilter":"In einer einstündigen Online-Veranstaltung möchten wir Ihnen das Gehaltsbenchmarking als eine Methode zur Mitarbeiterbindung und -gewinnung und den Leistungsumfang von Jobwert.info vorstellen. Mit aktuell 24845 Datensätzen für 20 Mitarbeiterprofile aus den Bereichen IT, Maschinenbau/Elektrotechnik und kaufmännischen Berufen bietet Jobwert.info einen exakten Gehaltsbenchmark, insbesondere für KMU.","countdown_visible":true,"countdown_start":"2020-12-02T08:15:26.000+01:00","countdown_description":"In einer einstündigen Online-Veranstaltung möchten wir Ihnen das Gehaltsbenchmarking als eine Methode zur Mitarbeiterbindung und -gewinnung und den Leistungsumfang von Jobwert.info vorstellen. ","description":"\u003cdiv\u003eMit Jobwert.info bietet der Empfehlungsbund einen zuverlässigen Gehaltsvergleich mit anderen Unternehmen derselben Branche und Region. Bundesweit werden die Gehälter von teilnehmenden kleinen und mittelständischen Unternehmen genau erfasst und detailliert ausgewertet. Dabei ist Jobwert.info spezialisiert auf die Branchen IT, Maschinenbau/Elektrotechnik und auf kaufmännische Berufe. Mit aktuell 24845 Datensätzen für 20 Mitarbeiterprofile bietet Jobwert.info einen exakten Gehaltsbenchmark, insbesondere für KMU.\u003cbr\u003e\u003cbr\u003eDer Gehaltsbenchmark mit Jobwert.info bietet:\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\u003eErhebung real gezahlter Gehälter nach Berufsprofilen,\u003c/li\u003e\u003cli\u003eVergleich mit regionalen Konkurrenzunternehmen derselben Branche,\u003c/li\u003e\u003cli\u003eAuswertung nach selbstgewählten Kriterien wie Alter, Geschlecht, Unternehmensgröße u.v.m.,\u003c/li\u003e\u003cli\u003eErhebung und Auswertung von Benefitleistungen\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003eIn einer einstündigen Online-Veranstaltung möchten wir Ihnen das Gehaltsbenchmarking als eine Methode zur Mitarbeiterbindung und -gewinnung und den Leistungsumfang von jobwet.info vorstellen. Unsere Veranstaltung richtet sich an alle kleinen und mittelständischen Unternehmen, insbesondere in den Branchen IT, Maschinenbau/Elektrotechnik und in den kaufmännischen Berufen.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 Minuten)\u003c/li\u003e\u003cli\u003eArbeiten mit Jobwert.info (ca. 40 Minuten)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 Minuten)\u003c/li\u003e\u003c/ul\u003e","start":"2020-12-09T10:00:06.000+01:00","finish":"2020-12-09T11:00:06.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/51/wide_Banner_Gehaltsbenchmark_2020_1000x400.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/51/wide_Banner_Gehaltsbenchmark_2020_1000x400.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/51/Logo_Gehaltsbenchmarking_500x500.png","register_url":"https://www.empfehlungsbund.de/events/51/register","show_url":"https://www.empfehlungsbund.de/events/51","events":[{"id":122,"display_line":"09.12.2020 - 10 bis 11:00 Uhr  - Jobwert.info Informationsveranstaltung - Gastgeber: pludoni GmbH","subtitle":"Jobwert.info Informationsveranstaltung","city":null,"start":"2020-12-09T10:00:06.000+01:00","finish":"2020-12-09T11:00:06.000+01:00","address":"","event_host":"pludoni GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20201025T030000\nRDATE:20201025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20201209T110006\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20201209T100006\nCATEGORIES:BUSINESS\nDESCRIPTION:Mit Jobwert.info bietet der Empfehlungsbund einen zuverlässig\n en Gehaltsvergleich mit anderen Unternehmen derselben Branche und Region\n . Bundesweit werden die Gehälter von teilnehmenden kleinen und mittelstä\n ndischen Unternehmen genau erfasst und detailliert ausgewertet. Dabei is\n t Jobwert.info spezialisiert auf die Branchen IT\\, Maschinenbau/Elektrot\n echnik und auf kaufmännische Berufe. Mit aktuell 24845 Datensätzen für 2\n 0 Mitarbeiterprofile bietet Jobwert.info einen exakten Gehaltsbenchmark\\\n , insbesondere für KMU.\\n\\nDer Gehaltsbenchmark mit Jobwert.info bietet:\n  \\n* Erhebung real gezahlter Gehälter nach Berufsprofilen\\,* Vergleich m\n it regionalen Konkurrenzunternehmen derselben Branche\\,* Auswertung nach\n  selbstgewählten Kriterien wie Alter\\, Geschlecht\\, Unternehmensgröße u.\n v.m.\\,* Erhebung und Auswertung von Benefitleistungen\\nIn einer einstünd\n igen Online-Veranstaltung möchten wir Ihnen das Gehaltsbenchmarking als \n eine Methode zur Mitarbeiterbindung und -gewinnung und den Leistungsumfa\n ng von jobwet.info vorstellen. Unsere Veranstaltung richtet sich an alle\n  kleinen und mittelständischen Unternehmen\\, insbesondere in den Branche\n n IT\\, Maschinenbau/Elektrotechnik und in den kaufmännischen Berufen.\\n\\\n n\\n\\n* Willkommensrunde (ca. 10 Minuten)* Arbeiten mit Jobwert.info (ca.\n  40 Minuten)* Fragerunde (ca. 10 Minuten)\nURL:https://www.empfehlungsbund.de/events/51\nSUMMARY:Online-Vorstellung: Gehaltsbenchmarking mit Jobwert.info \nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/51\nATTACH:https://www.empfehlungsbund.de/events/51\nLOCATION:pludoni GmbH\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eMit Jobwert.info bietet der E\n mpfehlungsbund einen zuverlässigen Gehaltsvergleich mit anderen Unterneh\n men derselben Branche und Region. Bundesweit werden die Gehälter von tei\n lnehmenden kleinen und mittelständischen Unternehmen genau erfasst und d\n etailliert ausgewertet. Dabei ist Jobwert.info spezialisiert auf die Bra\n nchen IT, Maschinenbau/Elektrotechnik und auf kaufmännische Berufe. Mit \n aktuell 24845 Datensätzen für 20 Mitarbeiterprofile bietet Jobwert.info \n einen exakten Gehaltsbenchmark, insbesondere für KMU.\u003cbr\u003e\u003cbr\u003eDer Gehalts\n benchmark mit Jobwert.info bietet:\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\u003eErhebung real geza\n hlter Gehälter nach Berufsprofilen,\u003c/li\u003e\u003cli\u003eVergleich mit regionalen Kon\n kurrenzunternehmen derselben Branche,\u003c/li\u003e\u003cli\u003eAuswertung nach selbstgewä\n hlten Kriterien wie Alter, Geschlecht, Unternehmensgröße u.v.m.,\u003c/li\u003e\u003cli\n \u003eErhebung und Auswertung von Benefitleistungen\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003eIn eine\n r einstündigen Online-Veranstaltung möchten wir Ihnen das Gehaltsbenchma\n rking als eine Methode zur Mitarbeiterbindung und -gewinnung und den Lei\n stungsumfang von jobwet.info vorstellen. Unsere Veranstaltung richtet si\n ch an alle kleinen und mittelständischen Unternehmen, insbesondere in de\n n Branchen IT, Maschinenbau/Elektrotechnik und in den kaufmännischen Ber\n ufen.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 Minuten)\u003c/li\u003e\u003cli\u003eArb\n eiten mit Jobwert.info (ca. 40 Minuten)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 Minut\n en)\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":50,"name":"SANO_Akquiseveranstaltung","hashtag":"ebcw","title":"SANOsax - Fachkräfteempfehlung und Arbeitgeberimageverbesserung für Kliniken und Pflegeeinrichtungen - Online Kennlernveranstaltung","teaser":"Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung für das Gesundheits- und Sozialwesen, hat es sich mit dem Netzwerk SANOsax.de zur Aufgabe gemacht regionale Organisationen des Gesundheits und Sozialwesens in Solidargemeinschaften zu vereinen. Anhand ausgewählter Fallbeispiele unserer SANOsax.de-Mitgliedsunternehmen demonstrieren wir Ihnen wie unsere Mitglieder von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder profititieren und gemeinsam einen konstanten Bewerberstrom zu niedrigen Preisen erzeugen. \r\n\r\nIn einer einstündigen Online-Veranstaltung möchten wir Ihnen SANOsax und das Kernkonzept der gegenseitigen Bewerberempfehlung, sowie den Leistungsumfang in den Bereichen Arbeitgeberimage, Personalbeschaffung und Personalauswahl anhand verschiedener Case-Studies detailliert vorstellen. Unsere Veranstaltung richtet sich insbesondere an Kliniken und Pflegeeinrichtungen mit Fachkräftebedarf an Pflegern, Theraupeuten, Ärzten, sowie medizinisch technischer Assistenz. ","teaser_hrfilter":"In einer einstündigen Online-Veranstaltung möchten wir Ihnen SANOsax und das Kernkonzept der gegenseitigen Bewerberempfehlung, sowie den Leistungsumfang in den Bereichen Arbeitgeberimage, Personalbeschaffung und Personalauswahl detailliert vorstellen. Unsere Veranstaltung richtet sich insbesondere an Kliniken und Pflegeeinrichtungen mit Fachkräftebedarf an Pflegern, Theraupeuten, Ärzten, sowie medizinisch technischer Assistenz.","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eEmpfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung für das Gesundheits- und Sozialwesen, hat es sich mit dem Netzwerk SANOsax.de zur Aufgabe gemacht regionale Organisationen des Gesundheits und Sozialwesens in Solidargemeinschaften zu vereinen. Anhand ausgewählter Fallbeispiele unserer SANOsax.de-Mitgliedsunternehmen demonstrieren wir ihnen wie unsere Mitglieder von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder profititieren und gemeinsam einen konstanten Bewerberstrom zu niedrigen Preisen erzeugen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eWeitere Vorteile:\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\u003eGemeinsame Entwicklung eines ausgewählten Personalmarketing-Mixes zur Ansprache ausgewählter Zielgruppen.\u003c/li\u003e\u003cli\u003eKostensenkung in der Personalgewinnung durch Budgetbündelung dank genossenschaftlichen Ansatz\u003c/li\u003e\u003cli\u003eRegelmäßiger Austausch und Benchmarks zu Trends und Methoden in der Personalgewinnung\u003c/li\u003e\u003cli\u003eEntwicklung von IT-Lösungen in den Bereichen Arbeitgeberimage, Personalgewinnung und Personalauswahl\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\u003eIn einer einstündigen WebEx Online-Veranstaltung möchten wir Ihnen SANOsax und das Kernkonzept der gegenseitigen Bewerberempfehlung, sowie den Leistungsumfang in den Bereichen Arbeitgeberimage, Personalbeschaffung und Personalauswahl detailliert vorstellen. Unsere Veranstaltung richtet sich insbesondere an Kliniken und Pflegeeinrichtungen mit Fachkräftebedarf an Pflegern, Theraupeuten, Ärzten, sowie medizinisch technischer Assistenz.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. 10 min.)\u003c/li\u003e\u003cli\u003eVorstellung SANOsax.de (ca. 40 min.)\u003c/li\u003e\u003cli\u003eFragerunde (ca. 10 min.)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2020-11-25T10:00:42.000+01:00","finish":"2020-11-25T11:00:28.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/50/wide_SANOsax_Banner.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/50/wide_SANOsax_Banner.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/50/register","show_url":"https://www.empfehlungsbund.de/events/50","events":[{"id":121,"display_line":"25.11.2020 - 10 bis 11:00 Uhr College Park - SANOsax: Online-Kennlernveranstaltung am 25.11.2020 - Gastgeber: Empfehlungsbund","subtitle":"SANOsax: Online-Kennlernveranstaltung am 25.11.2020","city":"College Park","start":"2020-11-25T10:00:42.000+01:00","finish":"2020-11-25T11:00:28.000+01:00","address":"WebEx","event_host":"Empfehlungsbund","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20201025T030000\nRDATE:20201025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20201125T110028\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20201125T100042\nCATEGORIES:BUSINESS\nDESCRIPTION:Empfehlungsbund\\, das größte Arbeitgebernetzwerk Deutschlands\n  zur gegenseitigen Fachkräfteempfehlung für das Gesundheits- und Sozialw\n esen\\, hat es sich mit dem Netzwerk SANOsax.de zur Aufgabe gemacht regio\n nale Organisationen des Gesundheits und Sozialwesens in Solidargemeinsch\n aften zu vereinen. Anhand ausgewählter Fallbeispiele unserer SANOsax.de-\n Mitgliedsunternehmen demonstrieren wir ihnen wie unsere Mitglieder von d\n en Personalbeschaffungsmaßnahmen aller anderen Mitglieder profititieren \n und gemeinsam einen konstanten Bewerberstrom zu niedrigen Preisen erzeug\n en. \\n\\nWeitere Vorteile: \\n* Gemeinsame Entwicklung eines ausgewählten \n Personalmarketing-Mixes zur Ansprache ausgewählter Zielgruppen.* Kostens\n enkung in der Personalgewinnung durch Budgetbündelung dank genossenschaf\n tlichen Ansatz* Regelmäßiger Austausch und Benchmarks zu Trends und Meth\n oden in der Personalgewinnung* Entwicklung von IT-Lösungen in den Bereic\n hen Arbeitgeberimage\\, Personalgewinnung und Personalauswahl\\n\\nIn einer\n  einstündigen WebEx Online-Veranstaltung möchten wir Ihnen SANOsax und d\n as Kernkonzept der gegenseitigen Bewerberempfehlung\\, sowie den Leistung\n sumfang in den Bereichen Arbeitgeberimage\\, Personalbeschaffung und Pers\n onalauswahl detailliert vorstellen. Unsere Veranstaltung richtet sich in\n sbesondere an Kliniken und Pflegeeinrichtungen mit Fachkräftebedarf an P\n flegern\\, Theraupeuten\\, Ärzten\\, sowie medizinisch technischer Assisten\n z. \\n\\n\\n\\n\\n* Willkommensrunde (ca. 10 min.)* Vorstellung SANOsax.de (c\n a. 40 min.)* Fragerunde (ca. 10 min.)\\n\\n\nURL:https://www.empfehlungsbund.de/events/50\nSUMMARY:SANOsax - Fachkräfteempfehlung und Arbeitgeberimageverbesserung f\n ür Kliniken und Pflegeeinrichtungen - Online Kennlernveranstaltung\nORGANIZER;CN=Empfehlungsbund / Empfehlungsbund.de:https://www.empfehlungs\n bund.de/events/50\nATTACH:https://www.empfehlungsbund.de/events/50\nLOCATION:Empfehlungsbund\\, WebEx\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eEmpfehlungsbund, das größte A\n rbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung f\n ür das Gesundheits- und Sozialwesen, hat es sich mit dem Netzwerk SANOsa\n x.de zur Aufgabe gemacht regionale Organisationen des Gesundheits und So\n zialwesens in Solidargemeinschaften zu vereinen. Anhand ausgewählter Fal\n lbeispiele unserer SANOsax.de-Mitgliedsunternehmen demonstrieren wir ihn\n en wie unsere Mitglieder von den Personalbeschaffungsmaßnahmen aller and\n eren Mitglieder profititieren und gemeinsam einen konstanten Bewerberstr\n om zu niedrigen Preisen erzeugen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003eWeitere Vorteile:\u0026nbsp;\u003c/\n div\u003e\u003cul\u003e\u003cli\u003eGemeinsame Entwicklung eines ausgewählten Personalmarketing-\n Mixes zur Ansprache ausgewählter Zielgruppen.\u003c/li\u003e\u003cli\u003eKostensenkung in d\n er Personalgewinnung durch Budgetbündelung dank genossenschaftlichen Ans\n atz\u003c/li\u003e\u003cli\u003eRegelmäßiger Austausch und Benchmarks zu Trends und Methoden\n  in der Personalgewinnung\u003c/li\u003e\u003cli\u003eEntwicklung von IT-Lösungen in den Ber\n eichen Arbeitgeberimage, Personalgewinnung und Personalauswahl\u003c/li\u003e\u003c/ul\u003e\n \u003cdiv\u003e\u003cbr\u003e\u003cbr\u003eIn einer einstündigen WebEx Online-Veranstaltung möchten wi\n r Ihnen SANOsax und das Kernkonzept der gegenseitigen Bewerberempfehlung\n , sowie den Leistungsumfang in den Bereichen Arbeitgeberimage, Personalb\n eschaffung und Personalauswahl detailliert vorstellen. Unsere Veranstalt\n ung richtet sich insbesondere an Kliniken und Pflegeeinrichtungen mit Fa\n chkräftebedarf an Pflegern, Theraupeuten, Ärzten, sowie medizinisch tech\n nischer Assistenz.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWillkommensrunde (ca. \n 10 min.)\u003c/li\u003e\u003cli\u003eVorstellung SANOsax.de (ca. 40 min.)\u003c/li\u003e\u003cli\u003eFragerunde\n  (ca. 10 min.)\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":49,"name":"ebcw_09_2020","hashtag":"ebcw","title":"Online Empfehlungsbund Community Workshop","teaser":"Auf dem diesjährigen Community Workshop im September dreht sich alles rund um den Themenbereich Active Sourcing. Wir stellen Ihnen nach den aktuellen Entwicklungen im Empfehlungsbund die technischen Updates unserer Services vor, mit denen Sie Active Search betreiben können. Anschließend präsentieren wir Ihnen im Fachvortrag einen Rundumblick auf Active Sourcing aus Perspektive von Personaler*innen. Aufgrund der aktuellen Situation findet der Community Workshop wieder online statt.","teaser_hrfilter":"Start des Empfehlungsbund Community Workshops am 29. und 30. September 2020. Unser Themenschwerpunkt: Active Sourcing - Do's und Don'ts bei der direkten Ansprache von Bewerber*innen","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eDer diesjährige Empfehlungsbund Community Workshop findet online in vier identischen Sessions zu unterschiedlichen Zeiten statt. \u003cbr\u003eUnsere Community Workshops verfolgen das Ziel, den persönlichen Austausch von Personalexpert*innen und Führungskräften anzuregen. Dafür stellen wir die neuesten Entwicklungen des Empfehlungsbundes und seiner Services vor, diesen September mit dem Fokus auf Active Sourcing. Vertieft wird dieses Thema durch einen Fachvortrag zu den Do’s und Dont’s bei der direkten Ansprache von Bewerber*innen. Mithilfe des Feedbacks unserer Mitglieder können wir unser Konzept der Fachkräftesuche gemeinsam vorantreiben.\u003cbr\u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme erhalten Sie 3-4 Tage vor dem Beginn per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e","agenda":"\u003cdiv\u003e\u003cstrong\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und den Community-Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an Stellenanzeigen und Bewerbungen in der Corona-Krise\u003c/li\u003e\u003cli\u003eneue Features der Services\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eActive Sourcing mit Empfehlungsbund-Services\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eCoworkr – Mitarbeiter werben Mitarbeiter\u003c/li\u003e\u003cli\u003emittlr – neues Feature: automatischer Kandidatenimport\u003c/li\u003e\u003cli\u003eEBMS – neues Feature: Unterstützung von Personaldienstleister-Bewerbungen\u003c/li\u003e\u003cli\u003eCandiSearch – unser neues Tool für Active Search im EB-Profil\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFachvortrag: Do’s und Don’ts bei der direkten Ansprache von Bewerber*innen\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAktuelle Trends im Active Sourcing\u003c/li\u003e\u003cli\u003eTools und deren Vor- und Nachteile\u003c/li\u003e\u003cli\u003eChancen und Risiken beim Active Sourcing\u003c/li\u003e\u003cli\u003eoffener Erfahrungsaustausch\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2020-09-29T09:00:26.000+02:00","finish":"2020-09-30T17:00:58.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/49/wide_EBCW_Bannerbild.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/49/wide_EBCW_Bannerbild%2BLogo.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/49/Online_Community_Workshop_Logo.png","register_url":"https://www.empfehlungsbund.de/events/49/register","show_url":"https://www.empfehlungsbund.de/events/49","events":[{"id":117,"display_line":"29.09.2020 - 09 bis 12:00 Uhr College Park - Empfehlungsbund Online-Treffen Session 1 - Gastgeber: pludoni GmbH","subtitle":"Empfehlungsbund Online-Treffen Session 1","city":"College Park","start":"2020-09-29T09:00:26.000+02:00","finish":"2020-09-29T12:00:26.000+02:00","address":"WebEx EBCW Session 1","event_host":"pludoni GmbH","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200929T120026\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200929T090026\nCATEGORIES:BUSINESS\nDESCRIPTION:Der diesjährige Empfehlungsbund Community Workshop findet onl\n ine in vier identischen Sessions zu unterschiedlichen Zeiten statt. \\nUn\n sere Community Workshops verfolgen das Ziel\\, den persönlichen Austausch\n  von Personalexpert*innen und Führungskräften anzuregen. Dafür stellen w\n ir die neuesten Entwicklungen des Empfehlungsbundes und seiner Services \n vor\\, diesen September mit dem Fokus auf Active Sourcing. Vertieft wird \n dieses Thema durch einen Fachvortrag zu den Do’s und Dont’s bei der dire\n kten Ansprache von Bewerber*innen. Mithilfe des Feedbacks unserer Mitgli\n eder können wir unser Konzept der Fachkräftesuche gemeinsam vorantreiben\n .\\n\\nDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie 3-4 Tage vor dem Beginn per E-Mail. Sie benötigen einen Inte\n rnetzugang und wenn möglich ein Headset.\\nDer Empfehlungsbund ist das fü\n hrende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in \n Deutschland.\\n\\n\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technisc\n he Updates\\n\\n\\n* Allgemeine Entwicklungen im Empfehlungsbund und den Co\n mmunity-Portalen* Entwicklung der Anzahl an Stellenanzeigen und Bewerbun\n gen in der Corona-Krise* neue Features der Services\\n\\nActive Sourcing m\n it Empfehlungsbund-Services\\n\\n\\n* Coworkr – Mitarbeiter werben Mitarbei\n ter* mittlr – neues Feature: automatischer Kandidatenimport* EBMS – neue\n s Feature: Unterstützung von Personaldienstleister-Bewerbungen* CandiSea\n rch – unser neues Tool für Active Search im EB-Profil\\n\\nFachvortrag: Do\n ’s und Don’ts bei der direkten Ansprache von Bewerber*innen\\n\\n\\n* Aktue\n lle Trends im Active Sourcing* Tools und deren Vor- und Nachteile* Chanc\n en und Risiken beim Active Sourcing* offener Erfahrungsaustausch\\n\\n\nURL:https://www.empfehlungsbund.de/events/49\nSUMMARY:Online Empfehlungsbund Community Workshop\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/49\nATTACH:https://www.empfehlungsbund.de/events/49\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 1\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDer diesjährige Empfehlungsbu\n nd Community Workshop findet online in vier identischen Sessions zu unte\n rschiedlichen Zeiten statt. \u003cbr\u003eUnsere Community Workshops verfolgen das\n  Ziel, den persönlichen Austausch von Personalexpert*innen und Führungsk\n räften anzuregen. Dafür stellen wir die neuesten Entwicklungen des Empfe\n hlungsbundes und seiner Services vor, diesen September mit dem Fokus auf\n  Active Sourcing. Vertieft wird dieses Thema durch einen Fachvortrag zu \n den Do’s und Dont’s bei der direkten Ansprache von Bewerber*innen. Mithi\n lfe des Feedbacks unserer Mitglieder können wir unser Konzept der Fachkr\n äftesuche gemeinsam vorantreiben.\u003cbr\u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbun\n d Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung zur\n  Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und\n  technische Hinweise zur Teilnahme erhalten Sie 3-4 Tage vor dem Beginn \n per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein Head\n set.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlu\n ngsbund ist das führende Netzwerk zur effizienten Personalgewinnung durc\n h Empfehlungen in Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eAktuelle Ke\n nnzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/di\n v\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und den Community-\n Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an Stellenanzeigen und Bewerbung\n en in der Corona-Krise\u003c/li\u003e\u003cli\u003eneue Features der Services\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\n \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eActive Sourcing mit Empfehlungsbund-Services\u003cbr\u003e\u003c/strong\n \u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eCoworkr – Mitarbeiter werben Mitarbeiter\u003c/li\u003e\u003cli\u003emitt\n lr – neues Feature: automatischer Kandidatenimport\u003c/li\u003e\u003cli\u003eEBMS – neues \n Feature: Unterstützung von Personaldienstleister-Bewerbungen\u003c/li\u003e\u003cli\u003eCan\n diSearch – unser neues Tool für Active Search im EB-Profil\u003c/li\u003e\u003c/ul\u003e\u003cdiv\n \u003e\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFachvortrag: Do’s und Don’ts bei der direkten Ansprache\n  von Bewerber*innen\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAktuelle Trends im Act\n ive Sourcing\u003c/li\u003e\u003cli\u003eTools und deren Vor- und Nachteile\u003c/li\u003e\u003cli\u003eChancen \n und Risiken beim Active Sourcing\u003c/li\u003e\u003cli\u003eoffener Erfahrungsaustausch\u003c/li\n \u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":118,"display_line":"29.09.2020 - 14 bis 17:00 Uhr College Park - Empfehlungsbund Online-Treffen Session 2 - Gastgeber: pludoni GmbH","subtitle":"Empfehlungsbund Online-Treffen Session 2","city":"College Park","start":"2020-09-29T14:00:26.000+02:00","finish":"2020-09-29T17:00:26.000+02:00","address":"WebEx EBCW Session 2","event_host":"pludoni GmbH","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200929T170026\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200929T140026\nCATEGORIES:BUSINESS\nDESCRIPTION:Der diesjährige Empfehlungsbund Community Workshop findet onl\n ine in vier identischen Sessions zu unterschiedlichen Zeiten statt. \\nUn\n sere Community Workshops verfolgen das Ziel\\, den persönlichen Austausch\n  von Personalexpert*innen und Führungskräften anzuregen. Dafür stellen w\n ir die neuesten Entwicklungen des Empfehlungsbundes und seiner Services \n vor\\, diesen September mit dem Fokus auf Active Sourcing. Vertieft wird \n dieses Thema durch einen Fachvortrag zu den Do’s und Dont’s bei der dire\n kten Ansprache von Bewerber*innen. Mithilfe des Feedbacks unserer Mitgli\n eder können wir unser Konzept der Fachkräftesuche gemeinsam vorantreiben\n .\\n\\nDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie 3-4 Tage vor dem Beginn per E-Mail. Sie benötigen einen Inte\n rnetzugang und wenn möglich ein Headset.\\nDer Empfehlungsbund ist das fü\n hrende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in \n Deutschland.\\n\\n\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technisc\n he Updates\\n\\n\\n* Allgemeine Entwicklungen im Empfehlungsbund und den Co\n mmunity-Portalen* Entwicklung der Anzahl an Stellenanzeigen und Bewerbun\n gen in der Corona-Krise* neue Features der Services\\n\\nActive Sourcing m\n it Empfehlungsbund-Services\\n\\n\\n* Coworkr – Mitarbeiter werben Mitarbei\n ter* mittlr – neues Feature: automatischer Kandidatenimport* EBMS – neue\n s Feature: Unterstützung von Personaldienstleister-Bewerbungen* CandiSea\n rch – unser neues Tool für Active Search im EB-Profil\\n\\nFachvortrag: Do\n ’s und Don’ts bei der direkten Ansprache von Bewerber*innen\\n\\n\\n* Aktue\n lle Trends im Active Sourcing* Tools und deren Vor- und Nachteile* Chanc\n en und Risiken beim Active Sourcing* offener Erfahrungsaustausch\\n\\n\nURL:https://www.empfehlungsbund.de/events/49\nSUMMARY:Online Empfehlungsbund Community Workshop\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/49\nATTACH:https://www.empfehlungsbund.de/events/49\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 2\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDer diesjährige Empfehlungsbu\n nd Community Workshop findet online in vier identischen Sessions zu unte\n rschiedlichen Zeiten statt. \u003cbr\u003eUnsere Community Workshops verfolgen das\n  Ziel, den persönlichen Austausch von Personalexpert*innen und Führungsk\n räften anzuregen. Dafür stellen wir die neuesten Entwicklungen des Empfe\n hlungsbundes und seiner Services vor, diesen September mit dem Fokus auf\n  Active Sourcing. Vertieft wird dieses Thema durch einen Fachvortrag zu \n den Do’s und Dont’s bei der direkten Ansprache von Bewerber*innen. Mithi\n lfe des Feedbacks unserer Mitglieder können wir unser Konzept der Fachkr\n äftesuche gemeinsam vorantreiben.\u003cbr\u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbun\n d Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung zur\n  Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und\n  technische Hinweise zur Teilnahme erhalten Sie 3-4 Tage vor dem Beginn \n per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein Head\n set.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlu\n ngsbund ist das führende Netzwerk zur effizienten Personalgewinnung durc\n h Empfehlungen in Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eAktuelle Ke\n nnzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/di\n v\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und den Community-\n Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an Stellenanzeigen und Bewerbung\n en in der Corona-Krise\u003c/li\u003e\u003cli\u003eneue Features der Services\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\n \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eActive Sourcing mit Empfehlungsbund-Services\u003cbr\u003e\u003c/strong\n \u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eCoworkr – Mitarbeiter werben Mitarbeiter\u003c/li\u003e\u003cli\u003emitt\n lr – neues Feature: automatischer Kandidatenimport\u003c/li\u003e\u003cli\u003eEBMS – neues \n Feature: Unterstützung von Personaldienstleister-Bewerbungen\u003c/li\u003e\u003cli\u003eCan\n diSearch – unser neues Tool für Active Search im EB-Profil\u003c/li\u003e\u003c/ul\u003e\u003cdiv\n \u003e\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFachvortrag: Do’s und Don’ts bei der direkten Ansprache\n  von Bewerber*innen\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAktuelle Trends im Act\n ive Sourcing\u003c/li\u003e\u003cli\u003eTools und deren Vor- und Nachteile\u003c/li\u003e\u003cli\u003eChancen \n und Risiken beim Active Sourcing\u003c/li\u003e\u003cli\u003eoffener Erfahrungsaustausch\u003c/li\n \u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":119,"display_line":"30.09.2020 - 09 bis 12:00 Uhr College Park - Empfehlungsbund Online-Treffen Session 3 - Gastgeber: pludoni GmbH","subtitle":"Empfehlungsbund Online-Treffen Session 3","city":"College Park","start":"2020-09-30T09:00:47.000+02:00","finish":"2020-09-30T12:00:47.000+02:00","address":"WebEx EBCW Session 3","event_host":"pludoni GmbH","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200930T120047\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200930T090047\nCATEGORIES:BUSINESS\nDESCRIPTION:Der diesjährige Empfehlungsbund Community Workshop findet onl\n ine in vier identischen Sessions zu unterschiedlichen Zeiten statt. \\nUn\n sere Community Workshops verfolgen das Ziel\\, den persönlichen Austausch\n  von Personalexpert*innen und Führungskräften anzuregen. Dafür stellen w\n ir die neuesten Entwicklungen des Empfehlungsbundes und seiner Services \n vor\\, diesen September mit dem Fokus auf Active Sourcing. Vertieft wird \n dieses Thema durch einen Fachvortrag zu den Do’s und Dont’s bei der dire\n kten Ansprache von Bewerber*innen. Mithilfe des Feedbacks unserer Mitgli\n eder können wir unser Konzept der Fachkräftesuche gemeinsam vorantreiben\n .\\n\\nDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie 3-4 Tage vor dem Beginn per E-Mail. Sie benötigen einen Inte\n rnetzugang und wenn möglich ein Headset.\\nDer Empfehlungsbund ist das fü\n hrende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in \n Deutschland.\\n\\n\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technisc\n he Updates\\n\\n\\n* Allgemeine Entwicklungen im Empfehlungsbund und den Co\n mmunity-Portalen* Entwicklung der Anzahl an Stellenanzeigen und Bewerbun\n gen in der Corona-Krise* neue Features der Services\\n\\nActive Sourcing m\n it Empfehlungsbund-Services\\n\\n\\n* Coworkr – Mitarbeiter werben Mitarbei\n ter* mittlr – neues Feature: automatischer Kandidatenimport* EBMS – neue\n s Feature: Unterstützung von Personaldienstleister-Bewerbungen* CandiSea\n rch – unser neues Tool für Active Search im EB-Profil\\n\\nFachvortrag: Do\n ’s und Don’ts bei der direkten Ansprache von Bewerber*innen\\n\\n\\n* Aktue\n lle Trends im Active Sourcing* Tools und deren Vor- und Nachteile* Chanc\n en und Risiken beim Active Sourcing* offener Erfahrungsaustausch\\n\\n\nURL:https://www.empfehlungsbund.de/events/49\nSUMMARY:Online Empfehlungsbund Community Workshop\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/49\nATTACH:https://www.empfehlungsbund.de/events/49\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 3\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDer diesjährige Empfehlungsbu\n nd Community Workshop findet online in vier identischen Sessions zu unte\n rschiedlichen Zeiten statt. \u003cbr\u003eUnsere Community Workshops verfolgen das\n  Ziel, den persönlichen Austausch von Personalexpert*innen und Führungsk\n räften anzuregen. Dafür stellen wir die neuesten Entwicklungen des Empfe\n hlungsbundes und seiner Services vor, diesen September mit dem Fokus auf\n  Active Sourcing. Vertieft wird dieses Thema durch einen Fachvortrag zu \n den Do’s und Dont’s bei der direkten Ansprache von Bewerber*innen. Mithi\n lfe des Feedbacks unserer Mitglieder können wir unser Konzept der Fachkr\n äftesuche gemeinsam vorantreiben.\u003cbr\u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbun\n d Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung zur\n  Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und\n  technische Hinweise zur Teilnahme erhalten Sie 3-4 Tage vor dem Beginn \n per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein Head\n set.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlu\n ngsbund ist das führende Netzwerk zur effizienten Personalgewinnung durc\n h Empfehlungen in Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eAktuelle Ke\n nnzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/di\n v\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und den Community-\n Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an Stellenanzeigen und Bewerbung\n en in der Corona-Krise\u003c/li\u003e\u003cli\u003eneue Features der Services\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\n \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eActive Sourcing mit Empfehlungsbund-Services\u003cbr\u003e\u003c/strong\n \u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eCoworkr – Mitarbeiter werben Mitarbeiter\u003c/li\u003e\u003cli\u003emitt\n lr – neues Feature: automatischer Kandidatenimport\u003c/li\u003e\u003cli\u003eEBMS – neues \n Feature: Unterstützung von Personaldienstleister-Bewerbungen\u003c/li\u003e\u003cli\u003eCan\n diSearch – unser neues Tool für Active Search im EB-Profil\u003c/li\u003e\u003c/ul\u003e\u003cdiv\n \u003e\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFachvortrag: Do’s und Don’ts bei der direkten Ansprache\n  von Bewerber*innen\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAktuelle Trends im Act\n ive Sourcing\u003c/li\u003e\u003cli\u003eTools und deren Vor- und Nachteile\u003c/li\u003e\u003cli\u003eChancen \n und Risiken beim Active Sourcing\u003c/li\u003e\u003cli\u003eoffener Erfahrungsaustausch\u003c/li\n \u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":120,"display_line":"30.09.2020 - 14 bis 17:00 Uhr College Park - Empfehlungsbund Online-Treffen Session 4 - Gastgeber: pludoni GmbH","subtitle":"Empfehlungsbund Online-Treffen Session 4","city":"College Park","start":"2020-09-30T14:00:58.000+02:00","finish":"2020-09-30T17:00:58.000+02:00","address":"WebEx EBCW Session 4","event_host":"pludoni GmbH","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200930T170058\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200930T140058\nCATEGORIES:BUSINESS\nDESCRIPTION:Der diesjährige Empfehlungsbund Community Workshop findet onl\n ine in vier identischen Sessions zu unterschiedlichen Zeiten statt. \\nUn\n sere Community Workshops verfolgen das Ziel\\, den persönlichen Austausch\n  von Personalexpert*innen und Führungskräften anzuregen. Dafür stellen w\n ir die neuesten Entwicklungen des Empfehlungsbundes und seiner Services \n vor\\, diesen September mit dem Fokus auf Active Sourcing. Vertieft wird \n dieses Thema durch einen Fachvortrag zu den Do’s und Dont’s bei der dire\n kten Ansprache von Bewerber*innen. Mithilfe des Feedbacks unserer Mitgli\n eder können wir unser Konzept der Fachkräftesuche gemeinsam vorantreiben\n .\\n\\nDie Teilnahme am Empfehlungsbund Community Workshop ist kostenfrei.\n  Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen\n  Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme e\n rhalten Sie 3-4 Tage vor dem Beginn per E-Mail. Sie benötigen einen Inte\n rnetzugang und wenn möglich ein Headset.\\nDer Empfehlungsbund ist das fü\n hrende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in \n Deutschland.\\n\\n\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technisc\n he Updates\\n\\n\\n* Allgemeine Entwicklungen im Empfehlungsbund und den Co\n mmunity-Portalen* Entwicklung der Anzahl an Stellenanzeigen und Bewerbun\n gen in der Corona-Krise* neue Features der Services\\n\\nActive Sourcing m\n it Empfehlungsbund-Services\\n\\n\\n* Coworkr – Mitarbeiter werben Mitarbei\n ter* mittlr – neues Feature: automatischer Kandidatenimport* EBMS – neue\n s Feature: Unterstützung von Personaldienstleister-Bewerbungen* CandiSea\n rch – unser neues Tool für Active Search im EB-Profil\\n\\nFachvortrag: Do\n ’s und Don’ts bei der direkten Ansprache von Bewerber*innen\\n\\n\\n* Aktue\n lle Trends im Active Sourcing* Tools und deren Vor- und Nachteile* Chanc\n en und Risiken beim Active Sourcing* offener Erfahrungsaustausch\\n\\n\nURL:https://www.empfehlungsbund.de/events/49\nSUMMARY:Online Empfehlungsbund Community Workshop\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/49\nATTACH:https://www.empfehlungsbund.de/events/49\nLOCATION:pludoni GmbH\\, WebEx EBCW Session 4\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDer diesjährige Empfehlungsbu\n nd Community Workshop findet online in vier identischen Sessions zu unte\n rschiedlichen Zeiten statt. \u003cbr\u003eUnsere Community Workshops verfolgen das\n  Ziel, den persönlichen Austausch von Personalexpert*innen und Führungsk\n räften anzuregen. Dafür stellen wir die neuesten Entwicklungen des Empfe\n hlungsbundes und seiner Services vor, diesen September mit dem Fokus auf\n  Active Sourcing. Vertieft wird dieses Thema durch einen Fachvortrag zu \n den Do’s und Dont’s bei der direkten Ansprache von Bewerber*innen. Mithi\n lfe des Feedbacks unserer Mitglieder können wir unser Konzept der Fachkr\n äftesuche gemeinsam vorantreiben.\u003cbr\u003e\u003cbr\u003eDie Teilnahme am Empfehlungsbun\n d Community Workshop ist kostenfrei. Jedoch ist eine kurze Anmeldung zur\n  Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und\n  technische Hinweise zur Teilnahme erhalten Sie 3-4 Tage vor dem Beginn \n per E-Mail. Sie benötigen einen Internetzugang und wenn möglich ein Head\n set.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlu\n ngsbund ist das führende Netzwerk zur effizienten Personalgewinnung durc\n h Empfehlungen in Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eAktuelle Ke\n nnzahlen zum Empfehlungsbund und technische Updates\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/di\n v\u003e\u003cul\u003e\u003cli\u003eAllgemeine Entwicklungen im Empfehlungsbund und den Community-\n Portalen\u003c/li\u003e\u003cli\u003eEntwicklung der Anzahl an Stellenanzeigen und Bewerbung\n en in der Corona-Krise\u003c/li\u003e\u003cli\u003eneue Features der Services\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\n \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eActive Sourcing mit Empfehlungsbund-Services\u003cbr\u003e\u003c/strong\n \u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eCoworkr – Mitarbeiter werben Mitarbeiter\u003c/li\u003e\u003cli\u003emitt\n lr – neues Feature: automatischer Kandidatenimport\u003c/li\u003e\u003cli\u003eEBMS – neues \n Feature: Unterstützung von Personaldienstleister-Bewerbungen\u003c/li\u003e\u003cli\u003eCan\n diSearch – unser neues Tool für Active Search im EB-Profil\u003c/li\u003e\u003c/ul\u003e\u003cdiv\n \u003e\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFachvortrag: Do’s und Don’ts bei der direkten Ansprache\n  von Bewerber*innen\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eAktuelle Trends im Act\n ive Sourcing\u003c/li\u003e\u003cli\u003eTools und deren Vor- und Nachteile\u003c/li\u003e\u003cli\u003eChancen \n und Risiken beim Active Sourcing\u003c/li\u003e\u003cli\u003eoffener Erfahrungsaustausch\u003c/li\n \u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":48,"name":"akquise_webex_bavaria_2020","hashtag":"ebcw","title":"Empfehlungsbund: Gewinnung von IT- und OFFICE-Fachkräften in Bayern - Online-Kennlernveranstaltung am 16. September 2020","teaser":"Der Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe gemacht regionale Arbeitgeber in branchenspezifischen Solidargemeinschaften zu vereinen. Ein Mitgliedsunternehmen in einem unserer regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa. Zu diesem Zweck setzen wir auf integrationsfreie Webanwendungen, die die intrakooperative Zusammenarbeit unserer Mitglieder gewährleisten ohne eine Installation vorauszusetzen.\r\n\r\nIn einer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vorstellen. Interessierte Unternehmen lernen den Empfehlungsbund durch Erfahrungsberichte der Mitglieder kennen. Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf in den Bereichen Informatik, kaufmännische Berufsgruppen (Vertrieb, Marketing, HR, etc.) und Ingenieurswesen.","teaser_hrfilter":"In unserem einstündigen Online-Erfahrungsaustausch am 16.9.2020 möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vorstellen.  ","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eDer Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe gemacht, regionale Arbeitgeber Bayerns in branchenspezifischen Solidargemeinschaften zu vereinen. Ein Mitgliedsunternehmen in einem unserer regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa. Zu diesem Zweck setzen wir auf integrationsfreie Webanwendungen, die die intrakooperative Zusammenarbeit unserer Mitglieder gewährleistet.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn einer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund, und sein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vorstellen. Interessierte Unternehmen lernen den Empfehlungsbund durch Erfahrungsberichte der Mitglieder kennen. Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf in den Bereichen Informatik, kaufmännische Berufsgruppen (Vertrieb, Marketing, HR, etc.) und Ingenieurswesen.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Personalsuche in einer Solidargemeinschaft hat folgende Vorteile:\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eSie erschließen einen neuen Recruitingkanal - die Bewerberempfehlung, die es nur im Unternehmensverbund geben kann.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie geben abgesagten Kandidaten wichtige Orientierung in der Berufssuche und verbessern automatisch Ihr Arbeitgeberimage.\u003c/li\u003e\u003cli\u003eSie tragen direkt und indirekt zur regionalen Fachkräftebindung bei. Kandidaten bleiben dem regionalen Arbeitsmarkt erhalten und müssen nicht abwandern.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie steigern die Prominenz Ihrer Karriereseite und Ihres Stellenangebotes mithilfe des weitläufigen Empfehlungsbund-Kooperationsnetzwerkes, womit Ihr Stellenangebot an angebundenen Stellenbörsen, Hochschulen und Fachkräfteinitiativen von Bund und Länder platziert wird.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie erhalten Zugriff auf arbeitsmarktrelevante Benchmarks, insb. Gehaltsbenchmarks und Recruitingperformancebenchmarks.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eSeit 2009 bewährt sich das Konzept der gegenseitigen Bewerberempfehlung. Insgesamt haben unsere Mitglieder in diesem Zeitraum über 13.000 qualifizierte, hochrelevante IT-, MINT und kaufmännische Fachkräfte ohne Provision einander weiterempfohlen. Davon sind allein im letzten Jahr über 1.600 Fachkräfte\u0026nbsp; weiterempfohlen worden.\u003cbr\u003eDarüber hinaus ist der Empfehlungbund, dank seines umfangreichen Kooperationsnetzwerkes, ein leistungsstarker Partner für Ihre Personalbeschaffung. So haben in den letzten 365 Tagen unsere 350 Mitgliedsunternehmen zusätzlich 21.000 Bewerbungseingänge über den Empfehlungsbund erhalten.\u0026nbsp;\u003c/strong\u003e\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003e\u003ch1\u003eWillkommensrunde (ca. 10 min.)\u003c/h1\u003e\u003c/li\u003e\u003cli\u003e\u003ch1\u003eVorstellung des Empfehlungsbundes (ca. 40 min.)\u003c/h1\u003e\u003c/li\u003e\u003cli\u003e\u003ch1\u003eFragerunde (ca. 10 min.)\u003c/h1\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2020-09-16T10:00:42.000+02:00","finish":"2020-09-16T11:00:42.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/48/wide_Empfehlungsbund_Veranstaltung.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/48/wide_Empfehlungsbund_Veranstaltung.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/48/Empfehlungsbund_Veranstaltung.png","register_url":"https://www.empfehlungsbund.de/events/48/register","show_url":"https://www.empfehlungsbund.de/events/48","events":[{"id":116,"display_line":"16.09.2020 - 10 bis 11:00 Uhr  - Empfehlungsbund: Online-Kennlernveranstaltung am 16. September 2020 - Gastgeber: WebEx Online-Veranstaltung","subtitle":"Empfehlungsbund: Online-Kennlernveranstaltung am 16. September 2020","city":null,"start":"2020-09-16T10:00:42.000+02:00","finish":"2020-09-16T11:00:42.000+02:00","address":"","event_host":"WebEx Online-Veranstaltung","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200916T110042\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200916T100042\nCATEGORIES:BUSINESS\nDESCRIPTION:Der Empfehlungsbund\\, das größte Arbeitgebernetzwerk Deutschl\n ands zur gegenseitigen Fachkräfteempfehlung\\, hat es sich zur Aufgabe ge\n macht\\, regionale Arbeitgeber Bayerns in branchenspezifischen Solidargem\n einschaften zu vereinen. Ein Mitgliedsunternehmen in einem unserer regio\n nalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsm\n aßnahmen aller anderen Mitglieder und vice versa. Zu diesem Zweck setzen\n  wir auf integrationsfreie Webanwendungen\\, die die intrakooperative Zus\n ammenarbeit unserer Mitglieder gewährleistet.\\n\\nIn einer einstündigen O\n nline-Veranstaltung möchten wir Ihnen den Empfehlungsbund\\, und sein Ker\n nkonzept der gegenseitigen Bewerberempfehlung\\, sowie seinen Leistungsum\n fang in den Bereichen Employer Branding\\, Personalmarketing und Personal\n auswahl detailliert vorstellen. Interessierte Unternehmen lernen den Emp\n fehlungsbund durch Erfahrungsberichte der Mitglieder kennen. Unsere Vera\n nstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf \n in den Bereichen Informatik\\, kaufmännische Berufsgruppen (Vertrieb\\, Ma\n rketing\\, HR\\, etc.) und Ingenieurswesen.\\n\\nDie Personalsuche in einer \n Solidargemeinschaft hat folgende Vorteile: \\n\\n\\n* Sie erschließen einen\n  neuen Recruitingkanal - die Bewerberempfehlung\\, die es nur im Unterneh\n mensverbund geben kann. * Sie geben abgesagten Kandidaten wichtige Orien\n tierung in der Berufssuche und verbessern automatisch Ihr Arbeitgeberima\n ge.* Sie tragen direkt und indirekt zur regionalen Fachkräftebindung bei\n . Kandidaten bleiben dem regionalen Arbeitsmarkt erhalten und müssen nic\n ht abwandern. * Sie steigern die Prominenz Ihrer Karriereseite und Ihres\n  Stellenangebotes mithilfe des weitläufigen Empfehlungsbund-Kooperations\n netzwerkes\\, womit Ihr Stellenangebot an angebundenen Stellenbörsen\\, Ho\n chschulen und Fachkräfteinitiativen von Bund und Länder platziert wird. \n * Sie erhalten Zugriff auf arbeitsmarktrelevante Benchmarks\\, insb. Geha\n ltsbenchmarks und Recruitingperformancebenchmarks.\\nSeit 2009 bewährt si\n ch das Konzept der gegenseitigen Bewerberempfehlung. Insgesamt haben uns\n ere Mitglieder in diesem Zeitraum über 13.000 qualifizierte\\, hochreleva\n nte IT-\\, MINT und kaufmännische Fachkräfte ohne Provision einander weit\n erempfohlen. Davon sind allein im letzten Jahr über 1.600 Fachkräfte  we\n iterempfohlen worden.\\nDarüber hinaus ist der Empfehlungbund\\, dank sein\n es umfangreichen Kooperationsnetzwerkes\\, ein leistungsstarker Partner f\n ür Ihre Personalbeschaffung. So haben in den letzten 365 Tagen unsere 35\n 0 Mitgliedsunternehmen zusätzlich 21.000 Bewerbungseingänge über den Emp\n fehlungsbund erhalten. \\n\\n* Willkommensrunde (ca. 10 min.)* Vorstellung\n  des Empfehlungsbundes (ca. 40 min.)* Fragerunde (ca. 10 min.)\\n\\n\nURL:https://www.empfehlungsbund.de/events/48\nSUMMARY:Empfehlungsbund: Gewinnung von IT- und OFFICE-Fachkräften in Baye\n rn - Online-Kennlernveranstaltung am 16. September 2020\nORGANIZER;CN=WebEx Online-Veranstaltung / Empfehlungsbund.de:https://www.\n empfehlungsbund.de/events/48\nATTACH:https://www.empfehlungsbund.de/events/48\nLOCATION:WebEx Online-Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDer Empfehlungsbund, das größ\n te Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlu\n ng, hat es sich zur Aufgabe gemacht, regionale Arbeitgeber Bayerns in br\n anchenspezifischen Solidargemeinschaften zu vereinen. Ein Mitgliedsunter\n nehmen in einem unserer regionalen Arbeitgebergemeinschaften profitiert \n von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice \n versa. Zu diesem Zweck setzen wir auf integrationsfreie Webanwendungen, \n die die intrakooperative Zusammenarbeit unserer Mitglieder gewährleistet\n .\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn einer einstündigen Online-Veranstaltung möchten wir \n Ihnen den Empfehlungsbund, und sein Kernkonzept der gegenseitigen Bewerb\n erempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Bra\n nding, Personalmarketing und Personalauswahl detailliert vorstellen. Int\n eressierte Unternehmen lernen den Empfehlungsbund durch Erfahrungsberich\n te der Mitglieder kennen. Unsere Veranstaltung richtet sich insbesondere\n  an Unternehmen mit Fachkräftebedarf in den Bereichen Informatik, kaufmä\n nnische Berufsgruppen (Vertrieb, Marketing, HR, etc.) und Ingenieurswese\n n.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Personalsuche in einer Solidargemeinschaft hat fo\n lgende Vorteile:\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eSie erschließen einen neuen \n Recruitingkanal - die Bewerberempfehlung, die es nur im Unternehmensverb\n und geben kann.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie geben abgesagten Kandidaten wichtige O\n rientierung in der Berufssuche und verbessern automatisch Ihr Arbeitgebe\n rimage.\u003c/li\u003e\u003cli\u003eSie tragen direkt und indirekt zur regionalen Fachkräfte\n bindung bei. Kandidaten bleiben dem regionalen Arbeitsmarkt erhalten und\n  müssen nicht abwandern.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie steigern die Prominenz Ihrer \n Karriereseite und Ihres Stellenangebotes mithilfe des weitläufigen Empfe\n hlungsbund-Kooperationsnetzwerkes, womit Ihr Stellenangebot an angebunde\n nen Stellenbörsen, Hochschulen und Fachkräfteinitiativen von Bund und Lä\n nder platziert wird.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie erhalten Zugriff auf arbeitsmarkt\n relevante Benchmarks, insb. Gehaltsbenchmarks und Recruitingperformanceb\n enchmarks.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eSeit 2009 bewährt sich das Konzept \n der gegenseitigen Bewerberempfehlung. Insgesamt haben unsere Mitglieder \n in diesem Zeitraum über 13.000 qualifizierte, hochrelevante IT-, MINT un\n d kaufmännische Fachkräfte ohne Provision einander weiterempfohlen. Davo\n n sind allein im letzten Jahr über 1.600 Fachkräfte\u0026nbsp; weiterempfohle\n n worden.\u003cbr\u003eDarüber hinaus ist der Empfehlungbund, dank seines umfangre\n ichen Kooperationsnetzwerkes, ein leistungsstarker Partner für Ihre Pers\n onalbeschaffung. So haben in den letzten 365 Tagen unsere 350 Mitgliedsu\n nternehmen zusätzlich 21.000 Bewerbungseingänge über den Empfehlungsbund\n  erhalten.\u0026nbsp;\u003c/strong\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003e\u003ch1\u003eWillkommensrunde (ca. 10 min.\n )\u003c/h1\u003e\u003c/li\u003e\u003cli\u003e\u003ch1\u003eVorstellung des Empfehlungsbundes (ca. 40 min.)\u003c/h1\u003e\u003c\n /li\u003e\u003cli\u003e\u003ch1\u003eFragerunde (ca. 10 min.)\u003c/h1\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\n \u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":47,"name":"akquise_webex_bbb_and_beyond_2020","hashtag":"ebcw","title":"Empfehlungsbund: Online-Erfahrungsaustausch - Gewinnung von IT- und OFFICE-Fachkräften in Berlin und Brandenburg am 19. August 2020","teaser":"Der Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe, gemacht regionale Arbeitgeber in branchenspezifischen Solidargemeinschaften zu vereinen. Ein Mitgliedsunternehmen in einem unserer regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa. Zu diesem Zweck setzen wir auf integrationsfreie Webanwendungen, die die intrakooperative Zusammenarbeit unserer Mitglieder gewährleistet, die allerdings keine Installation voraussetzen.\r\n\r\nIn einer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund, und sein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vorstellen. Interessierte Unternehmen lernen den Empfehlungsbund durch Erfahrungsberichte der Mitglieder kennen. Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, sowie an kaufmännische Berufsgruppen (Vertrieb, Marketing, HR, etc.) und Ingenieure.","teaser_hrfilter":"In unserer einstündigen Online-Veranstaltung am 19.8.2020 möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vorstellen.  ","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eDer Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe, gemacht regionale Arbeitgeber in branchenspezifischen Solidargemeinschaften zu vereinen. Ein Mitgliedsunternehmen in einem unserer regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa. Zu diesem Zweck setzen wir auf integrationsfreie Webanwendungen, die die intrakooperative Zusammenarbeit unserer Mitglieder gewährleistet, die allerdings keine Installation voraussetzen.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn einer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund, und sein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vorstellen. Interessierte Unternehmen lernen den Empfehlungsbund durch Erfahrungsberichte der Mitlgieder kennen. Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, sowie an kaufmännische Berufsgruppen (Vertrieb, Marketing, HR, etc.) und Ingenieure.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Personalsuche in einer Solidargemeinschaft hat folgende Vorteile:\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eSie erschließen einen neuen Recruitingkanal - die Bewerberempfehlung, die es nur im Unternehmensverbund geben kann.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie geben abgesagten Kandidaten wichtige Orientierung in der Berufssuche und verbessern automatisch Ihr Arbeitgeberimage.\u003c/li\u003e\u003cli\u003eSie tragen direkt und indirekt zur regionalen Fachkräftebindung bei. Kandidaten bleiben dem regionalen Arbeitsmarkt erhalten und müssen nicht abwandern.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie steigern die Prominenz Ihrer Karriereseite und Ihres Stellenangebotes mithilfe des weitläufigen Empfehlungsbund-Kooperationsnetzwerkes, womit Ihr Stellenangebot an angebundenen Stellenbörsen, Hochschulen und Fachkräfteinitiativen von Bund und Länder platziert wird.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie erhalten Zugriff auf arbeitsmarktrelevante Benchmarks, insb. Gehaltsbenchmarks und Recruitingperformancebenchmarks.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eSeit 2009 bewährt sich das Konzept der gegenseitigen Bewerberempfehlung. Insgesamt haben unsere Mitglieder in diesem Zeitraum über 13.000 qualifizierte, hochrelevante IT-, MINT und kaufmännische Fachkräfte ohne Provision einander weiterempfohlen. Davon sind allein im letzten Jahr über 1.600 Fachkräfte\u0026nbsp; weiterempfohlen worden.\u003cbr\u003eDarüber hinaus ist der Empfehlungbund, dank seines umfangreichen Kooperationsnetzwerkes, ein leistungsstarker Partner für Ihre Personalbeschaffung. So haben in den letzten 365 Tagen unsere 350 Mitgliedsunternehmen zusätzlich 21.000 Bewerbungseingänge über den Empfehlungsbund erhalten.\u0026nbsp;\u003c/strong\u003e\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003e\u003ch1\u003eWillkommensrunde (ca. 10 min.)\u003c/h1\u003e\u003c/li\u003e\u003cli\u003e\u003ch1\u003eVorstellung des Empfehlungsbundes (ca. 40 min.)\u003c/h1\u003e\u003c/li\u003e\u003cli\u003e\u003ch1\u003eFragerunde (ca. 10 min.)\u003c/h1\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2020-08-19T10:00:28.000+02:00","finish":"2020-08-19T11:00:28.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/47/wide_Banner-EB-Kennlernveranstaltung.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/47/wide_Banner-EB-Kennlernveranstaltung.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/47/Banner-EB-Kennlernveranstaltung.png","register_url":"https://www.empfehlungsbund.de/events/47/register","show_url":"https://www.empfehlungsbund.de/events/47","events":[{"id":115,"display_line":"19.08.2020 - 10 bis 11:00 Uhr  - Empfehlungsbund: Online-Kennlernveranstaltung am 19. August 2020 - Gastgeber: WebEx Online-Veranstaltung","subtitle":"Empfehlungsbund: Online-Kennlernveranstaltung am 19. August 2020","city":null,"start":"2020-08-19T10:00:28.000+02:00","finish":"2020-08-19T11:00:28.000+02:00","address":"","event_host":"WebEx Online-Veranstaltung","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200819T110028\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200819T100028\nCATEGORIES:BUSINESS\nDESCRIPTION:Der Empfehlungsbund\\, das größte Arbeitgebernetzwerk Deutschl\n ands zur gegenseitigen Fachkräfteempfehlung\\, hat es sich zur Aufgabe\\, \n gemacht regionale Arbeitgeber in branchenspezifischen Solidargemeinschaf\n ten zu vereinen. Ein Mitgliedsunternehmen in einem unserer regionalen Ar\n beitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen\n  aller anderen Mitglieder und vice versa. Zu diesem Zweck setzen wir auf\n  integrationsfreie Webanwendungen\\, die die intrakooperative Zusammenarb\n eit unserer Mitglieder gewährleistet\\, die allerdings keine Installation\n  voraussetzen.\\n\\nIn einer einstündigen Online-Veranstaltung möchten wir\n  Ihnen den Empfehlungsbund\\, und sein Kernkonzept der gegenseitigen Bewe\n rberempfehlung\\, sowie seinen Leistungsumfang in den Bereichen Employer \n Branding\\, Personalmarketing und Personalauswahl detailliert vorstellen.\n  Interessierte Unternehmen lernen den Empfehlungsbund durch Erfahrungsbe\n richte der Mitlgieder kennen. Unsere Veranstaltung richtet sich insbeson\n dere an Unternehmen mit Fachkräftebedarf wie Informatiker\\, sowie an kau\n fmännische Berufsgruppen (Vertrieb\\, Marketing\\, HR\\, etc.) und Ingenieu\n re.\\n\\nDie Personalsuche in einer Solidargemeinschaft hat folgende Vorte\n ile: \\n\\n\\n* Sie erschließen einen neuen Recruitingkanal - die Bewerbere\n mpfehlung\\, die es nur im Unternehmensverbund geben kann. * Sie geben ab\n gesagten Kandidaten wichtige Orientierung in der Berufssuche und verbess\n ern automatisch Ihr Arbeitgeberimage.* Sie tragen direkt und indirekt zu\n r regionalen Fachkräftebindung bei. Kandidaten bleiben dem regionalen Ar\n beitsmarkt erhalten und müssen nicht abwandern. * Sie steigern die Promi\n nenz Ihrer Karriereseite und Ihres Stellenangebotes mithilfe des weitläu\n figen Empfehlungsbund-Kooperationsnetzwerkes\\, womit Ihr Stellenangebot \n an angebundenen Stellenbörsen\\, Hochschulen und Fachkräfteinitiativen vo\n n Bund und Länder platziert wird. * Sie erhalten Zugriff auf arbeitsmark\n trelevante Benchmarks\\, insb. Gehaltsbenchmarks und Recruitingperformanc\n ebenchmarks.\\nSeit 2009 bewährt sich das Konzept der gegenseitigen Bewer\n berempfehlung. Insgesamt haben unsere Mitglieder in diesem Zeitraum über\n  13.000 qualifizierte\\, hochrelevante IT-\\, MINT und kaufmännische Fachk\n räfte ohne Provision einander weiterempfohlen. Davon sind allein im letz\n ten Jahr über 1.600 Fachkräfte  weiterempfohlen worden.\\nDarüber hinaus \n ist der Empfehlungbund\\, dank seines umfangreichen Kooperationsnetzwerke\n s\\, ein leistungsstarker Partner für Ihre Personalbeschaffung. So haben \n in den letzten 365 Tagen unsere 350 Mitgliedsunternehmen zusätzlich 21.0\n 00 Bewerbungseingänge über den Empfehlungsbund erhalten. \\n\\n* Willkomme\n nsrunde (ca. 10 min.)* Vorstellung des Empfehlungsbundes (ca. 40 min.)* \n Fragerunde (ca. 10 min.)\\n\\n\nURL:https://www.empfehlungsbund.de/events/47\nSUMMARY:Empfehlungsbund: Online-Erfahrungsaustausch - Gewinnung von IT- u\n nd OFFICE-Fachkräften in Berlin und Brandenburg am 19. August 2020\nORGANIZER;CN=WebEx Online-Veranstaltung / Empfehlungsbund.de:https://www.\n empfehlungsbund.de/events/47\nATTACH:https://www.empfehlungsbund.de/events/47\nLOCATION:WebEx Online-Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDer Empfehlungsbund, das größ\n te Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlu\n ng, hat es sich zur Aufgabe, gemacht regionale Arbeitgeber in branchensp\n ezifischen Solidargemeinschaften zu vereinen. Ein Mitgliedsunternehmen i\n n einem unserer regionalen Arbeitgebergemeinschaften profitiert von den \n Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa. Z\n u diesem Zweck setzen wir auf integrationsfreie Webanwendungen, die die \n intrakooperative Zusammenarbeit unserer Mitglieder gewährleistet, die al\n lerdings keine Installation voraussetzen.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn einer einstü\n ndigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund, und s\n ein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leist\n ungsumfang in den Bereichen Employer Branding, Personalmarketing und Per\n sonalauswahl detailliert vorstellen. Interessierte Unternehmen lernen de\n n Empfehlungsbund durch Erfahrungsberichte der Mitlgieder kennen. Unsere\n  Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebe\n darf wie Informatiker, sowie an kaufmännische Berufsgruppen (Vertrieb, M\n arketing, HR, etc.) und Ingenieure.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Personalsuche in\n  einer Solidargemeinschaft hat folgende Vorteile:\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\n \u003e\u003cli\u003eSie erschließen einen neuen Recruitingkanal - die Bewerberempfehlun\n g, die es nur im Unternehmensverbund geben kann.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie geben\n  abgesagten Kandidaten wichtige Orientierung in der Berufssuche und verb\n essern automatisch Ihr Arbeitgeberimage.\u003c/li\u003e\u003cli\u003eSie tragen direkt und i\n ndirekt zur regionalen Fachkräftebindung bei. Kandidaten bleiben dem reg\n ionalen Arbeitsmarkt erhalten und müssen nicht abwandern.\u0026nbsp;\u003c/li\u003e\u003cli\u003e\n Sie steigern die Prominenz Ihrer Karriereseite und Ihres Stellenangebote\n s mithilfe des weitläufigen Empfehlungsbund-Kooperationsnetzwerkes, womi\n t Ihr Stellenangebot an angebundenen Stellenbörsen, Hochschulen und Fach\n kräfteinitiativen von Bund und Länder platziert wird.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie \n erhalten Zugriff auf arbeitsmarktrelevante Benchmarks, insb. Gehaltsbenc\n hmarks und Recruitingperformancebenchmarks.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eSe\n it 2009 bewährt sich das Konzept der gegenseitigen Bewerberempfehlung. I\n nsgesamt haben unsere Mitglieder in diesem Zeitraum über 13.000 qualifiz\n ierte, hochrelevante IT-, MINT und kaufmännische Fachkräfte ohne Provisi\n on einander weiterempfohlen. Davon sind allein im letzten Jahr über 1.60\n 0 Fachkräfte\u0026nbsp; weiterempfohlen worden.\u003cbr\u003eDarüber hinaus ist der Emp\n fehlungbund, dank seines umfangreichen Kooperationsnetzwerkes, ein leist\n ungsstarker Partner für Ihre Personalbeschaffung. So haben in den letzte\n n 365 Tagen unsere 350 Mitgliedsunternehmen zusätzlich 21.000 Bewerbungs\n eingänge über den Empfehlungsbund erhalten.\u0026nbsp;\u003c/strong\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003e\n \u003ch1\u003eWillkommensrunde (ca. 10 min.)\u003c/h1\u003e\u003c/li\u003e\u003cli\u003e\u003ch1\u003eVorstellung des Empf\n ehlungsbundes (ca. 40 min.)\u003c/h1\u003e\u003c/li\u003e\u003cli\u003e\u003ch1\u003eFragerunde (ca. 10 min.)\u003c/h\n 1\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":46,"name":"akquise_webex_sax/mitte_2020","hashtag":"ofxp","title":"Empfehlungsbund: Gewinnung von IT- und OFFICE-Fachkräften in Mitteldeutschland - Online-Kennlernveranstaltung am 8. Juli 2020","teaser":"Der Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe, gemacht regionale Arbeitgeber in branchenspezifischen Solidargemeinschaften zu vereinen. Ein Mitgliedsunternehmen in einem unserer regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa. Zu diesem Zweck setzen wir auf integrationsfreie Webanwendungen, die die intrakooperative Zusammenarbeit unserer Mitglieder gewährleistet, die allerdings keine Installation voraussetzen.\r\n\r\nIn einer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vorstellen.  Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, sowie an kaufmännische Berufsgruppen (Vertrieb, Marketing, HR, etc.). \r\n\r\n","teaser_hrfilter":"In unserer einstündigen Online-Veranstaltung am 8. Juli 2020 möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert vorstellen.  ","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eDer Empfehlungsbund, das größte Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlung, hat es sich zur Aufgabe gemacht, regionale Arbeitgeber in branchenspezifischen Solidargemeinschaften zu vereinen. Jedes Mitgliedsunternehmen in unseren regionalen Arbeitgebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa. Gemeinsam lässt es sich einfacher Fachkräfte gewinnen. Zu diesem Zweck setzen wir auf integrationsfreie Webanwendungen, die die intrakooperative Zusammenarbeit unserer Mitglieder gewährleistet, die allerdings keine Installation voraussetzen.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Bereichen Employer Branding, Personalmarketing und Personalauswahl detailliert veranschaulichen.\u0026nbsp; Unsere Veranstaltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ingenieure, sowie an kaufmännische Berufsgruppen (Vertrieb, Marketing, HR, etc.). \u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Personalsuche in einer Solidargemeinschaft hat folgende Vorteile:\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eSie erschließen einen neuen Recruitingkanal - die Bewerberempfehlung, die es nur im Unternehmensverbund geben kann.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie geben abgesagten Kandidaten wichtige Orientierung in der Berufssuche und verbessern automatisch Ihr Arbeitgeberimage.\u003c/li\u003e\u003cli\u003eSie tragen direkt und indirekt zur regionalen Fachkräftebindung bei. Kandidaten bleiben dem regionalen Arbeitsmarkt erhalten und müssen nicht abwandern.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie steigern die Prominenz Ihrer Karriereseite und Ihres Stellenangebotes mithilfe des weitläufigen Empfehlungsbund-Kooperationsnetzwerkes, womit Ihr Stellenangebot an angebundenen Stellenbörsen, Hochschulen und Fachkräfteinitiativen von Bund und Länder platziert wird.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie erhalten Zugriff auf arbeitsmarktrelevante Benchmarks, insb. Gehaltsbenchmarks und Recruitingperformancebenchmarks.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eSeit 2009 bewährt sich das Konzept der gegenseitigen Bewerberempfehlung. Insgesamt haben unsere Mitglieder in diesem Zeitraum über 13.000 qualifizierte, hochrelevante IT-, MINT und kaufmännische Fachkräfte ohne Provision einander weiterempfohlen. Davon sind allein im letzten Jahr über 1.600 Fachkräfte\u0026nbsp; weiterempfohlen worden.\u003cbr\u003eDarüber hinaus ist der Empfehlungbund, dank seines umfangreichen Kooperationsnetzwerkes, ein leistungsstarker Partner für Ihre Personalbeschaffung. So haben in den letzten 365 Tagen unsere 350 Mitgliedsunternehmen zusätzlich 21.000 Bewerbungseingänge über den Empfehlungsbund erhalten.\u0026nbsp;\u003c/strong\u003e\u003c/div\u003e","agenda":"\u003cul\u003e\u003cli\u003e\u003ch1\u003eWillkommensrunde (ca. 10 min.)\u003c/h1\u003e\u003c/li\u003e\u003cli\u003e\u003ch1\u003eVorstellung des Empfehlungsbundes (ca. 40 min.)\u003c/h1\u003e\u003c/li\u003e\u003cli\u003e\u003ch1\u003eFragerunde (ca. 10 min.)\u003c/h1\u003e\u003c/li\u003e\u003c/ul\u003e","start":"2020-07-08T10:00:41.000+02:00","finish":"2020-07-08T11:00:41.000+02:00","visible":true,"is_open_network":true,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/46/wide_Empfehlungsbund_Veranstaltung.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/46/wide_Empfehlungsbund_Veranstaltung.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/46/Empfehlungsbund_Veranstaltung.png","register_url":"https://www.empfehlungsbund.de/events/46/register","show_url":"https://www.empfehlungsbund.de/events/46","events":[{"id":114,"display_line":"08.07.2020 - 10 bis 11:00 Uhr  - Gastgeber: WebEx Online-Veranstaltung","subtitle":"","city":null,"start":"2020-07-08T10:00:41.000+02:00","finish":"2020-07-08T11:00:41.000+02:00","address":"","event_host":"WebEx Online-Veranstaltung","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200708T110041\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200708T100041\nCATEGORIES:BUSINESS\nDESCRIPTION:Der Empfehlungsbund\\, das größte Arbeitgebernetzwerk Deutschl\n ands zur gegenseitigen Fachkräfteempfehlung\\, hat es sich zur Aufgabe ge\n macht\\, regionale Arbeitgeber in branchenspezifischen Solidargemeinschaf\n ten zu vereinen. Jedes Mitgliedsunternehmen in unseren regionalen Arbeit\n gebergemeinschaften profitiert von den Personalbeschaffungsmaßnahmen all\n er anderen Mitglieder und vice versa. Gemeinsam lässt es sich einfacher \n Fachkräfte gewinnen. Zu diesem Zweck setzen wir auf integrationsfreie We\n banwendungen\\, die die intrakooperative Zusammenarbeit unserer Mitgliede\n r gewährleistet\\, die allerdings keine Installation voraussetzen.\\n\\nIn \n unserer einstündigen Online-Veranstaltung möchten wir Ihnen den Empfehlu\n ngsbund und sein Kernkonzept der gegenseitigen Bewerberempfehlung\\, sowi\n e seinen Leistungsumfang in den Bereichen Employer Branding\\, Personalma\n rketing und Personalauswahl detailliert veranschaulichen.  Unsere Verans\n taltung richtet sich insbesondere an Unternehmen mit Fachkräftebedarf wi\n e Informatiker\\, Ingenieure\\, sowie an kaufmännische Berufsgruppen (Vert\n rieb\\, Marketing\\, HR\\, etc.). \\n\\nDie Personalsuche in einer Solidargem\n einschaft hat folgende Vorteile: \\n\\n\\n* Sie erschließen einen neuen Rec\n ruitingkanal - die Bewerberempfehlung\\, die es nur im Unternehmensverbun\n d geben kann. * Sie geben abgesagten Kandidaten wichtige Orientierung in\n  der Berufssuche und verbessern automatisch Ihr Arbeitgeberimage.* Sie t\n ragen direkt und indirekt zur regionalen Fachkräftebindung bei. Kandidat\n en bleiben dem regionalen Arbeitsmarkt erhalten und müssen nicht abwande\n rn. * Sie steigern die Prominenz Ihrer Karriereseite und Ihres Stellenan\n gebotes mithilfe des weitläufigen Empfehlungsbund-Kooperationsnetzwerkes\n \\, womit Ihr Stellenangebot an angebundenen Stellenbörsen\\, Hochschulen \n und Fachkräfteinitiativen von Bund und Länder platziert wird. * Sie erha\n lten Zugriff auf arbeitsmarktrelevante Benchmarks\\, insb. Gehaltsbenchma\n rks und Recruitingperformancebenchmarks.\\nSeit 2009 bewährt sich das Kon\n zept der gegenseitigen Bewerberempfehlung. Insgesamt haben unsere Mitgli\n eder in diesem Zeitraum über 13.000 qualifizierte\\, hochrelevante IT-\\, \n MINT und kaufmännische Fachkräfte ohne Provision einander weiterempfohle\n n. Davon sind allein im letzten Jahr über 1.600 Fachkräfte  weiterempfoh\n len worden.\\nDarüber hinaus ist der Empfehlungbund\\, dank seines umfangr\n eichen Kooperationsnetzwerkes\\, ein leistungsstarker Partner für Ihre Pe\n rsonalbeschaffung. So haben in den letzten 365 Tagen unsere 350 Mitglied\n sunternehmen zusätzlich 21.000 Bewerbungseingänge über den Empfehlungsbu\n nd erhalten. \\n\\n* Willkommensrunde (ca. 10 min.)* Vorstellung des Empfe\n hlungsbundes (ca. 40 min.)* Fragerunde (ca. 10 min.)\nURL:https://www.empfehlungsbund.de/events/46\nSUMMARY:Empfehlungsbund: Gewinnung von IT- und OFFICE-Fachkräften in Mitt\n eldeutschland - Online-Kennlernveranstaltung am 8. Juli 2020\nORGANIZER;CN=WebEx Online-Veranstaltung / Empfehlungsbund.de:https://www.\n empfehlungsbund.de/events/46\nATTACH:https://www.empfehlungsbund.de/events/46\nLOCATION:WebEx Online-Veranstaltung\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDer Empfehlungsbund, das größ\n te Arbeitgebernetzwerk Deutschlands zur gegenseitigen Fachkräfteempfehlu\n ng, hat es sich zur Aufgabe gemacht, regionale Arbeitgeber in branchensp\n ezifischen Solidargemeinschaften zu vereinen. Jedes Mitgliedsunternehmen\n  in unseren regionalen Arbeitgebergemeinschaften profitiert von den Pers\n onalbeschaffungsmaßnahmen aller anderen Mitglieder und vice versa. Gemei\n nsam lässt es sich einfacher Fachkräfte gewinnen. Zu diesem Zweck setzen\n  wir auf integrationsfreie Webanwendungen, die die intrakooperative Zusa\n mmenarbeit unserer Mitglieder gewährleistet, die allerdings keine Instal\n lation voraussetzen.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eIn unserer einstündigen Online-Veran\n staltung möchten wir Ihnen den Empfehlungsbund und sein Kernkonzept der \n gegenseitigen Bewerberempfehlung, sowie seinen Leistungsumfang in den Be\n reichen Employer Branding, Personalmarketing und Personalauswahl detaill\n iert veranschaulichen.\u0026nbsp; Unsere Veranstaltung richtet sich insbesond\n ere an Unternehmen mit Fachkräftebedarf wie Informatiker, Ingenieure, so\n wie an kaufmännische Berufsgruppen (Vertrieb, Marketing, HR, etc.). \u003c/st\n rong\u003e\u003cbr\u003e\u003cbr\u003eDie Personalsuche in einer Solidargemeinschaft hat folgende\n  Vorteile:\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eSie erschließen einen neuen Recrui\n tingkanal - die Bewerberempfehlung, die es nur im Unternehmensverbund ge\n ben kann.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie geben abgesagten Kandidaten wichtige Orienti\n erung in der Berufssuche und verbessern automatisch Ihr Arbeitgeberimage\n .\u003c/li\u003e\u003cli\u003eSie tragen direkt und indirekt zur regionalen Fachkräftebindun\n g bei. Kandidaten bleiben dem regionalen Arbeitsmarkt erhalten und müsse\n n nicht abwandern.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie steigern die Prominenz Ihrer Karrie\n reseite und Ihres Stellenangebotes mithilfe des weitläufigen Empfehlungs\n bund-Kooperationsnetzwerkes, womit Ihr Stellenangebot an angebundenen St\n ellenbörsen, Hochschulen und Fachkräfteinitiativen von Bund und Länder p\n latziert wird.\u0026nbsp;\u003c/li\u003e\u003cli\u003eSie erhalten Zugriff auf arbeitsmarktreleva\n nte Benchmarks, insb. Gehaltsbenchmarks und Recruitingperformancebenchma\n rks.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eSeit 2009 bewährt sich das Konzept der ge\n genseitigen Bewerberempfehlung. Insgesamt haben unsere Mitglieder in die\n sem Zeitraum über 13.000 qualifizierte, hochrelevante IT-, MINT und kauf\n männische Fachkräfte ohne Provision einander weiterempfohlen. Davon sind\n  allein im letzten Jahr über 1.600 Fachkräfte\u0026nbsp; weiterempfohlen word\n en.\u003cbr\u003eDarüber hinaus ist der Empfehlungbund, dank seines umfangreichen \n Kooperationsnetzwerkes, ein leistungsstarker Partner für Ihre Personalbe\n schaffung. So haben in den letzten 365 Tagen unsere 350 Mitgliedsunterne\n hmen zusätzlich 21.000 Bewerbungseingänge über den Empfehlungsbund erhal\n ten.\u0026nbsp;\u003c/strong\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003e\u003ch1\u003eWillkommensrunde (ca. 10 min.)\u003c/h1\u003e\n \u003c/li\u003e\u003cli\u003e\u003ch1\u003eVorstellung des Empfehlungsbundes (ca. 40 min.)\u003c/h1\u003e\u003c/li\u003e\u003cl\n i\u003e\u003ch1\u003eFragerunde (ca. 10 min.)\u003c/h1\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":45,"name":"OXFP_05_2020","hashtag":"ofxp","title":"Online Expertenforum Personalmanagement 2020","teaser":"Trotz der gegenwärtigen Ausnahmesituation möchten wir unser alljährliches Expertenforum Personalmanagement austragen. Dieses Jahr findet das Expertenforum Personalmanagement als Online-Veranstaltung statt.\r\nDie Agenda des Expertenforums dieses Jahres beinhaltet, neben der regulären Auswertung des Gehaltsbenchmarks 2020 und den technischen Updates, einen besonderen Fokus auf Stellenanzeigenoptimierung: Einerseits führen wir eine statistische Auswertung durch, welche Suchmaschinenkriterien eine erfolgreiche Stellenanzeige erfüllen muss. Ferner erfahren wir aus von der langjährigen Projektleiterin und Unternehmensberaterin Anette Schlotte, was es bei der Suche nach Projektleitern zu beachten gilt.  ","teaser_hrfilter":"Start des Expertenforums Personalmanagement am 26. und 27. Mai 2020. Unsere Hauptthemen: (1) Statistische Auswertung zu den Erfolgsfaktoren optimierter Stellenanzeigen. (2) Wie angle ich einen Projektleiter? Funktion entscheidet, Haltung verführt! ","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eTrotz der gegenwärtigen Ausnahmesituation möchten wir unser alljährliches Expertenforum Personalmanagement austragen. Dieses Jahr findet das Expertenforum Personalmanagement als Online-Veranstaltung statt. Es gibt vier identische Sessions zu unterschiedlichen Zeiten zu denen Sie sich anmelden können. Die Teilnehmerzahl pro Session ist auf 30-40 Personen begrenzt. \u003cbr\u003e\u003cbr\u003eIm Rahmen des jährlichen Expertentreffens stellt der Empfehlungsbund regelmäßig aktuelle Entwicklungen und Studien in den Bereichen Employer Branding, Personalmarketing und Personalauswahl vor. Das offene Expertenforum Personalmanagement richtet sich speziell an Personalmanager und Führungskräfte regionaler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfolgen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönlichen Austausch zu Fragen der Personalgewinnung und wir informieren sie über technische Innovationen für eine erfolgreichere Personalbedarfsdeckung.\u0026nbsp; \u003cbr\u003e\u003cbr\u003eDie Agenda des Expertenforums dieses Jahres beinhaltet, neben der regulären Auswertung des Gehaltsbenchmarks 2020 und den technischen Updates, einen besonderen Fokus auf Stellenanzeigen: Einerseits führen wir eine statistische Auswertung durch, welche Suchmaschinenkriterien eine erfolgreiche Stellenanzeige erfüllt. Ferner erfahren wir aus von der langjährigen Projektleiterin und Unternehmensberaterin Anette Schlotte, was es bei der Suche nach Projektleitern zu beachten gilt.\u0026nbsp; \u003cbr\u003e\u003cbr\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und technische Hinweise zur Teilnahme erhalten Sie ein 3-4 Tage vor dem Beginn per E-Mail. Sie benötigen Internetzugang, Browser und wenn möglich ein Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e","agenda":"\u003ch1\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuigkeiten des Empfehlungsbundes - Information zu technischen Entwicklungen\u003c/li\u003e\u003cli\u003eNeugestaltung der Fachkräfteportale, Services und am Empfehlungsbund-Profil\u003c/li\u003e\u003cli\u003eMittlr: Umstellung des Geschäftsmodells\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eErgebnisse des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase vom 1. Januar bis 31. März konnten teilnehmende Unternehmen ihre Gehälter und Benefit-Leistungen einreichen und sich regional benchmarken lassen. In unserer Benchmarkauswertung präsentieren wir Ihnen aktuelle Zahlen zu Gehältern und Benefits auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortrag: Stellenoptimierung 2.0\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eMomentan entwickeln wir mit Joblytics einen Service, der es Ihnen erlaubt Ihre Stellenanzeigen auf Suchmaschinenauffindbarkeit zu prüfen. Insb. Stellenbörsensuchmaschinen spielen hier eine herausragende Rolle. Wir haben damit die Möglichkeit große Mengen an Stellenanzeigen statistisch auszuwerten, deren Ergebnisse wir in einem Fachvortrag präsentieren werden. Unser Ziel ist es objektive Erfolgsfaktoren für eine optimierte Stellenanzeige herauszustellen. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eGastvortrag: Wie angle ich einen Projektleiter? \u003cstrong\u003eFunktion\u003c/strong\u003e entscheidet, \u003cstrong\u003eHaltung\u003c/strong\u003e verführt!\u003c/h1\u003e\u003cdiv\u003e\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir freuen uns, Annett Schlotte, langjährige Projektleiterin und Unternehmensberaterin mit Fokus auf Projektmanagement, für diesen Gastvortrag gewinnen zu können. Aus der Perspektive eines Projektleiters berichtet uns Frau Schlotte, welche Funktionen für einen Projektleiter attraktive Bewerbungsgründe sind. Zudem gibt Sie Ausblick in die Haltung eines Projektleiters und dessen Wünsche an eine Organisation. Authentische Rollenprofile für einen Projektmanager, die integriert in eine passende Unternehmenskultur dargestellt sind, ist ein Schlüsselelement für eine Einladung in einen neuen Lebensabschnitt mit Leitungsfunktion.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2020-05-26T09:00:35.000+02:00","finish":"2020-05-27T17:00:22.000+02:00","visible":true,"is_open_network":true,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/45/wide_full_2017-05-23_20170523_162358.jpg","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/45/wide_full_2017-05-23_20170523_162358.jpg","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/45/Online_Expertenforum_Personalmanagement.png","register_url":"https://www.empfehlungsbund.de/events/45/register","show_url":"https://www.empfehlungsbund.de/events/45","events":[{"id":110,"display_line":"26.05.2020 - 09 bis 12:00 Uhr WebEx - Empfehlungsbund Online Treffen - Session 1 - Gastgeber: pludoni GmbH","subtitle":"Empfehlungsbund Online Treffen - Session 1","city":"WebEx","start":"2020-05-26T09:00:35.000+02:00","finish":"2020-05-26T12:00:35.000+02:00","address":"WebEx","event_host":"pludoni GmbH","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200526T120035\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200526T090035\nCATEGORIES:BUSINESS\nDESCRIPTION:Trotz der gegenwärtigen Ausnahmesituation möchten wir unser a\n lljährliches Expertenforum Personalmanagement austragen. Dieses Jahr fin\n det das Expertenforum Personalmanagement als Online-Veranstaltung statt.\n  Es gibt vier identische Sessions zu unterschiedlichen Zeiten zu denen S\n ie sich anmelden können. Die Teilnehmerzahl pro Session ist auf 30-40 Pe\n rsonen begrenzt. \\n\\nIm Rahmen des jährlichen Expertentreffens stellt de\n r Empfehlungsbund regelmäßig aktuelle Entwicklungen und Studien in den B\n ereichen Employer Branding\\, Personalmarketing und Personalauswahl vor. \n Das offene Expertenforum Personalmanagement richtet sich speziell an Per\n sonalmanager und Führungskräfte regionaler Unternehmen mit Fachkräftebed\n arf. Mit unserem Expertenforum verfolgen wir zwei Ziele: Wir bieten Pers\n onaler eine Plattform zum persönlichen Austausch zu Fragen der Personalg\n ewinnung und wir informieren sie über technische Innovationen für eine e\n rfolgreichere Personalbedarfsdeckung.  \\n\\nDie Agenda des Expertenforums\n  dieses Jahres beinhaltet\\, neben der regulären Auswertung des Gehaltsbe\n nchmarks 2020 und den technischen Updates\\, einen besonderen Fokus auf S\n tellenanzeigen: Einerseits führen wir eine statistische Auswertung durch\n \\, welche Suchmaschinenkriterien eine erfolgreiche Stellenanzeige erfüll\n t. Ferner erfahren wir aus von der langjährigen Projektleiterin und Unte\n rnehmensberaterin Anette Schlotte\\, was es bei der Suche nach Projektlei\n tern zu beachten gilt.  \\n\\nDie Teilnahme ist kostenfrei. Jedoch ist ein\n e kurze Anmeldung zur Freischaltung aus organisatorischen Gründen nötig.\n  Die Zugangsdaten und technische Hinweise zur Teilnahme erhalten Sie ein\n  3-4 Tage vor dem Beginn per E-Mail. Sie benötigen Internetzugang\\, Brow\n ser und wenn möglich ein Headset.\\nDer Empfehlungsbund ist das führende \n Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutsch\n land.\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\\\n n\\n* Neuigkeiten des Empfehlungsbundes - Information zu technischen Entw\n icklungen* Neugestaltung der Fachkräfteportale\\, Services und am Empfehl\n ungsbund-Profil* Mittlr: Umstellung des Geschäftsmodells\\n\\nErgebnisse d\n es Gehaltsbenchmarks 2020 mit Jobwert.info\\n\\n* Während der jährlichen D\n atenerhebungsphase vom 1. Januar bis 31. März konnten teilnehmende Unter\n nehmen ihre Gehälter und Benefit-Leistungen einreichen und sich regional\n  benchmarken lassen. In unserer Benchmarkauswertung präsentieren wir Ihn\n en aktuelle Zahlen zu Gehältern und Benefits auf regionalem Niveau. \\n\\n\n Fachvortrag: Stellenoptimierung 2.0 \\n\\n* Momentan entwickeln wir mit Jo\n blytics einen Service\\, der es Ihnen erlaubt Ihre Stellenanzeigen auf Su\n chmaschinenauffindbarkeit zu prüfen. Insb. Stellenbörsensuchmaschinen sp\n ielen hier eine herausragende Rolle. Wir haben damit die Möglichkeit gro\n ße Mengen an Stellenanzeigen statistisch auszuwerten\\, deren Ergebnisse \n wir in einem Fachvortrag präsentieren werden. Unser Ziel ist es objektiv\n e Erfolgsfaktoren für eine optimierte Stellenanzeige herauszustellen.  \\\n n\\nGastvortrag: Wie angle ich einen Projektleiter? Funktion entscheidet\\\n , Haltung verführt! \\n* Wir freuen uns\\, Annett Schlotte\\, langjährige P\n rojektleiterin und Unternehmensberaterin mit Fokus auf Projektmanagement\n \\, für diesen Gastvortrag gewinnen zu können. Aus der Perspektive eines \n Projektleiters berichtet uns Frau Schlotte\\, welche Funktionen für einen\n  Projektleiter attraktive Bewerbungsgründe sind. Zudem gibt Sie Ausblick\n  in die Haltung eines Projektleiters und dessen Wünsche an eine Organisa\n tion. Authentische Rollenprofile für einen Projektmanager\\, die integrie\n rt in eine passende Unternehmenskultur dargestellt sind\\, ist ein Schlüs\n selelement für eine Einladung in einen neuen Lebensabschnitt mit Leitung\n sfunktion.\\n\\n\\n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/45\nSUMMARY:Online Expertenforum Personalmanagement 2020\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/45\nATTACH:https://www.empfehlungsbund.de/events/45\nLOCATION:pludoni GmbH\\, WebEx\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eTrotz der gegenwärtigen Ausna\n hmesituation möchten wir unser alljährliches Expertenforum Personalmanag\n ement austragen. Dieses Jahr findet das Expertenforum Personalmanagement\n  als Online-Veranstaltung statt. Es gibt vier identische Sessions zu unt\n erschiedlichen Zeiten zu denen Sie sich anmelden können. Die Teilnehmerz\n ahl pro Session ist auf 30-40 Personen begrenzt. \u003cbr\u003e\u003cbr\u003eIm Rahmen des j\n ährlichen Expertentreffens stellt der Empfehlungsbund regelmäßig aktuell\n e Entwicklungen und Studien in den Bereichen Employer Branding, Personal\n marketing und Personalauswahl vor. Das offene Expertenforum Personalmana\n gement richtet sich speziell an Personalmanager und Führungskräfte regio\n naler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfol\n gen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönliche\n n Austausch zu Fragen der Personalgewinnung und wir informieren sie über\n  technische Innovationen für eine erfolgreichere Personalbedarfsdeckung.\n \u0026nbsp; \u003cbr\u003e\u003cbr\u003eDie Agenda des Expertenforums dieses Jahres beinhaltet, n\n eben der regulären Auswertung des Gehaltsbenchmarks 2020 und den technis\n chen Updates, einen besonderen Fokus auf Stellenanzeigen: Einerseits füh\n ren wir eine statistische Auswertung durch, welche Suchmaschinenkriterie\n n eine erfolgreiche Stellenanzeige erfüllt. Ferner erfahren wir aus von \n der langjährigen Projektleiterin und Unternehmensberaterin Anette Schlot\n te, was es bei der Suche nach Projektleitern zu beachten gilt.\u0026nbsp; \u003cbr\n \u003e\u003cbr\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur F\n reischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und t\n echnische Hinweise zur Teilnahme erhalten Sie ein 3-4 Tage vor dem Begin\n n per E-Mail. Sie benötigen Internetzugang, Browser und wenn möglich ein\n  Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Emp\n fehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung\n  durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eAktuelle Kennzahlen zum\n  Empfehlungsbund und technische Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuig\n keiten des Empfehlungsbundes - Information zu technischen Entwicklungen\u003c\n /li\u003e\u003cli\u003eNeugestaltung der Fachkräfteportale, Services und am Empfehlungs\n bund-Profil\u003c/li\u003e\u003cli\u003eMittlr: Umstellung des Geschäftsmodells\u003c/li\u003e\u003c/ul\u003e\u003cdi\n v\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eErgebnisse des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c/\n h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase vom\n  1. Januar bis 31. März konnten teilnehmende Unternehmen ihre Gehälter u\n nd Benefit-Leistungen einreichen und sich regional benchmarken lassen. I\n n unserer Benchmarkauswertung präsentieren wir Ihnen aktuelle Zahlen zu \n Gehältern und Benefits auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/\n div\u003e\u003ch1\u003eFachvortrag: Stellenoptimierung 2.0\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\n \u003e\u003cli\u003eMomentan entwickeln wir mit Joblytics einen Service, der es Ihnen e\n rlaubt Ihre Stellenanzeigen auf Suchmaschinenauffindbarkeit zu prüfen. I\n nsb. Stellenbörsensuchmaschinen spielen hier eine herausragende Rolle. W\n ir haben damit die Möglichkeit große Mengen an Stellenanzeigen statistis\n ch auszuwerten, deren Ergebnisse wir in einem Fachvortrag präsentieren w\n erden. Unser Ziel ist es objektive Erfolgsfaktoren für eine optimierte S\n tellenanzeige herauszustellen. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eGastvo\n rtrag: Wie angle ich einen Projektleiter? \u003cstrong\u003eFunktion\u003c/strong\u003e ents\n cheidet, \u003cstrong\u003eHaltung\u003c/strong\u003e verführt!\u003c/h1\u003e\u003cdiv\u003e\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\n \u003eWir freuen uns, Annett Schlotte, langjährige Projektleiterin und Untern\n ehmensberaterin mit Fokus auf Projektmanagement, für diesen Gastvortrag \n gewinnen zu können. Aus der Perspektive eines Projektleiters berichtet u\n ns Frau Schlotte, welche Funktionen für einen Projektleiter attraktive B\n ewerbungsgründe sind. Zudem gibt Sie Ausblick in die Haltung eines Proje\n ktleiters und dessen Wünsche an eine Organisation. Authentische Rollenpr\n ofile für einen Projektmanager, die integriert in eine passende Unterneh\n menskultur dargestellt sind, ist ein Schlüsselelement für eine Einladung\n  in einen neuen Lebensabschnitt mit Leitungsfunktion.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\n \u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":111,"display_line":"26.05.2020 - 14 bis 17:00 Uhr WebEx - Empfehlungsbund Online Treffen - Session 2 - Gastgeber: pludoni GmbH","subtitle":"Empfehlungsbund Online Treffen - Session 2","city":"WebEx","start":"2020-05-26T14:00:58.000+02:00","finish":"2020-05-26T17:00:58.000+02:00","address":"WebEx","event_host":"pludoni GmbH","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200526T170058\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200526T140058\nCATEGORIES:BUSINESS\nDESCRIPTION:Trotz der gegenwärtigen Ausnahmesituation möchten wir unser a\n lljährliches Expertenforum Personalmanagement austragen. Dieses Jahr fin\n det das Expertenforum Personalmanagement als Online-Veranstaltung statt.\n  Es gibt vier identische Sessions zu unterschiedlichen Zeiten zu denen S\n ie sich anmelden können. Die Teilnehmerzahl pro Session ist auf 30-40 Pe\n rsonen begrenzt. \\n\\nIm Rahmen des jährlichen Expertentreffens stellt de\n r Empfehlungsbund regelmäßig aktuelle Entwicklungen und Studien in den B\n ereichen Employer Branding\\, Personalmarketing und Personalauswahl vor. \n Das offene Expertenforum Personalmanagement richtet sich speziell an Per\n sonalmanager und Führungskräfte regionaler Unternehmen mit Fachkräftebed\n arf. Mit unserem Expertenforum verfolgen wir zwei Ziele: Wir bieten Pers\n onaler eine Plattform zum persönlichen Austausch zu Fragen der Personalg\n ewinnung und wir informieren sie über technische Innovationen für eine e\n rfolgreichere Personalbedarfsdeckung.  \\n\\nDie Agenda des Expertenforums\n  dieses Jahres beinhaltet\\, neben der regulären Auswertung des Gehaltsbe\n nchmarks 2020 und den technischen Updates\\, einen besonderen Fokus auf S\n tellenanzeigen: Einerseits führen wir eine statistische Auswertung durch\n \\, welche Suchmaschinenkriterien eine erfolgreiche Stellenanzeige erfüll\n t. Ferner erfahren wir aus von der langjährigen Projektleiterin und Unte\n rnehmensberaterin Anette Schlotte\\, was es bei der Suche nach Projektlei\n tern zu beachten gilt.  \\n\\nDie Teilnahme ist kostenfrei. Jedoch ist ein\n e kurze Anmeldung zur Freischaltung aus organisatorischen Gründen nötig.\n  Die Zugangsdaten und technische Hinweise zur Teilnahme erhalten Sie ein\n  3-4 Tage vor dem Beginn per E-Mail. Sie benötigen Internetzugang\\, Brow\n ser und wenn möglich ein Headset.\\nDer Empfehlungsbund ist das führende \n Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutsch\n land.\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\\\n n\\n* Neuigkeiten des Empfehlungsbundes - Information zu technischen Entw\n icklungen* Neugestaltung der Fachkräfteportale\\, Services und am Empfehl\n ungsbund-Profil* Mittlr: Umstellung des Geschäftsmodells\\n\\nErgebnisse d\n es Gehaltsbenchmarks 2020 mit Jobwert.info\\n\\n* Während der jährlichen D\n atenerhebungsphase vom 1. Januar bis 31. März konnten teilnehmende Unter\n nehmen ihre Gehälter und Benefit-Leistungen einreichen und sich regional\n  benchmarken lassen. In unserer Benchmarkauswertung präsentieren wir Ihn\n en aktuelle Zahlen zu Gehältern und Benefits auf regionalem Niveau. \\n\\n\n Fachvortrag: Stellenoptimierung 2.0 \\n\\n* Momentan entwickeln wir mit Jo\n blytics einen Service\\, der es Ihnen erlaubt Ihre Stellenanzeigen auf Su\n chmaschinenauffindbarkeit zu prüfen. Insb. Stellenbörsensuchmaschinen sp\n ielen hier eine herausragende Rolle. Wir haben damit die Möglichkeit gro\n ße Mengen an Stellenanzeigen statistisch auszuwerten\\, deren Ergebnisse \n wir in einem Fachvortrag präsentieren werden. Unser Ziel ist es objektiv\n e Erfolgsfaktoren für eine optimierte Stellenanzeige herauszustellen.  \\\n n\\nGastvortrag: Wie angle ich einen Projektleiter? Funktion entscheidet\\\n , Haltung verführt! \\n* Wir freuen uns\\, Annett Schlotte\\, langjährige P\n rojektleiterin und Unternehmensberaterin mit Fokus auf Projektmanagement\n \\, für diesen Gastvortrag gewinnen zu können. Aus der Perspektive eines \n Projektleiters berichtet uns Frau Schlotte\\, welche Funktionen für einen\n  Projektleiter attraktive Bewerbungsgründe sind. Zudem gibt Sie Ausblick\n  in die Haltung eines Projektleiters und dessen Wünsche an eine Organisa\n tion. Authentische Rollenprofile für einen Projektmanager\\, die integrie\n rt in eine passende Unternehmenskultur dargestellt sind\\, ist ein Schlüs\n selelement für eine Einladung in einen neuen Lebensabschnitt mit Leitung\n sfunktion.\\n\\n\\n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/45\nSUMMARY:Online Expertenforum Personalmanagement 2020\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/45\nATTACH:https://www.empfehlungsbund.de/events/45\nLOCATION:pludoni GmbH\\, WebEx\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eTrotz der gegenwärtigen Ausna\n hmesituation möchten wir unser alljährliches Expertenforum Personalmanag\n ement austragen. Dieses Jahr findet das Expertenforum Personalmanagement\n  als Online-Veranstaltung statt. Es gibt vier identische Sessions zu unt\n erschiedlichen Zeiten zu denen Sie sich anmelden können. Die Teilnehmerz\n ahl pro Session ist auf 30-40 Personen begrenzt. \u003cbr\u003e\u003cbr\u003eIm Rahmen des j\n ährlichen Expertentreffens stellt der Empfehlungsbund regelmäßig aktuell\n e Entwicklungen und Studien in den Bereichen Employer Branding, Personal\n marketing und Personalauswahl vor. Das offene Expertenforum Personalmana\n gement richtet sich speziell an Personalmanager und Führungskräfte regio\n naler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfol\n gen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönliche\n n Austausch zu Fragen der Personalgewinnung und wir informieren sie über\n  technische Innovationen für eine erfolgreichere Personalbedarfsdeckung.\n \u0026nbsp; \u003cbr\u003e\u003cbr\u003eDie Agenda des Expertenforums dieses Jahres beinhaltet, n\n eben der regulären Auswertung des Gehaltsbenchmarks 2020 und den technis\n chen Updates, einen besonderen Fokus auf Stellenanzeigen: Einerseits füh\n ren wir eine statistische Auswertung durch, welche Suchmaschinenkriterie\n n eine erfolgreiche Stellenanzeige erfüllt. Ferner erfahren wir aus von \n der langjährigen Projektleiterin und Unternehmensberaterin Anette Schlot\n te, was es bei der Suche nach Projektleitern zu beachten gilt.\u0026nbsp; \u003cbr\n \u003e\u003cbr\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur F\n reischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und t\n echnische Hinweise zur Teilnahme erhalten Sie ein 3-4 Tage vor dem Begin\n n per E-Mail. Sie benötigen Internetzugang, Browser und wenn möglich ein\n  Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Emp\n fehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung\n  durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eAktuelle Kennzahlen zum\n  Empfehlungsbund und technische Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuig\n keiten des Empfehlungsbundes - Information zu technischen Entwicklungen\u003c\n /li\u003e\u003cli\u003eNeugestaltung der Fachkräfteportale, Services und am Empfehlungs\n bund-Profil\u003c/li\u003e\u003cli\u003eMittlr: Umstellung des Geschäftsmodells\u003c/li\u003e\u003c/ul\u003e\u003cdi\n v\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eErgebnisse des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c/\n h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase vom\n  1. Januar bis 31. März konnten teilnehmende Unternehmen ihre Gehälter u\n nd Benefit-Leistungen einreichen und sich regional benchmarken lassen. I\n n unserer Benchmarkauswertung präsentieren wir Ihnen aktuelle Zahlen zu \n Gehältern und Benefits auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/\n div\u003e\u003ch1\u003eFachvortrag: Stellenoptimierung 2.0\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\n \u003e\u003cli\u003eMomentan entwickeln wir mit Joblytics einen Service, der es Ihnen e\n rlaubt Ihre Stellenanzeigen auf Suchmaschinenauffindbarkeit zu prüfen. I\n nsb. Stellenbörsensuchmaschinen spielen hier eine herausragende Rolle. W\n ir haben damit die Möglichkeit große Mengen an Stellenanzeigen statistis\n ch auszuwerten, deren Ergebnisse wir in einem Fachvortrag präsentieren w\n erden. Unser Ziel ist es objektive Erfolgsfaktoren für eine optimierte S\n tellenanzeige herauszustellen. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eGastvo\n rtrag: Wie angle ich einen Projektleiter? \u003cstrong\u003eFunktion\u003c/strong\u003e ents\n cheidet, \u003cstrong\u003eHaltung\u003c/strong\u003e verführt!\u003c/h1\u003e\u003cdiv\u003e\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\n \u003eWir freuen uns, Annett Schlotte, langjährige Projektleiterin und Untern\n ehmensberaterin mit Fokus auf Projektmanagement, für diesen Gastvortrag \n gewinnen zu können. Aus der Perspektive eines Projektleiters berichtet u\n ns Frau Schlotte, welche Funktionen für einen Projektleiter attraktive B\n ewerbungsgründe sind. Zudem gibt Sie Ausblick in die Haltung eines Proje\n ktleiters und dessen Wünsche an eine Organisation. Authentische Rollenpr\n ofile für einen Projektmanager, die integriert in eine passende Unterneh\n menskultur dargestellt sind, ist ein Schlüsselelement für eine Einladung\n  in einen neuen Lebensabschnitt mit Leitungsfunktion.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\n \u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":112,"display_line":"27.05.2020 - 09 bis 12:00 Uhr WebEx - Empfehlungsbund Online Treffen - Session 3 - Gastgeber: pludoni GmbH","subtitle":"Empfehlungsbund Online Treffen - Session 3","city":"WebEx","start":"2020-05-27T09:00:15.000+02:00","finish":"2020-05-27T12:00:15.000+02:00","address":"WebEx","event_host":"pludoni GmbH","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200527T120015\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200527T090015\nCATEGORIES:BUSINESS\nDESCRIPTION:Trotz der gegenwärtigen Ausnahmesituation möchten wir unser a\n lljährliches Expertenforum Personalmanagement austragen. Dieses Jahr fin\n det das Expertenforum Personalmanagement als Online-Veranstaltung statt.\n  Es gibt vier identische Sessions zu unterschiedlichen Zeiten zu denen S\n ie sich anmelden können. Die Teilnehmerzahl pro Session ist auf 30-40 Pe\n rsonen begrenzt. \\n\\nIm Rahmen des jährlichen Expertentreffens stellt de\n r Empfehlungsbund regelmäßig aktuelle Entwicklungen und Studien in den B\n ereichen Employer Branding\\, Personalmarketing und Personalauswahl vor. \n Das offene Expertenforum Personalmanagement richtet sich speziell an Per\n sonalmanager und Führungskräfte regionaler Unternehmen mit Fachkräftebed\n arf. Mit unserem Expertenforum verfolgen wir zwei Ziele: Wir bieten Pers\n onaler eine Plattform zum persönlichen Austausch zu Fragen der Personalg\n ewinnung und wir informieren sie über technische Innovationen für eine e\n rfolgreichere Personalbedarfsdeckung.  \\n\\nDie Agenda des Expertenforums\n  dieses Jahres beinhaltet\\, neben der regulären Auswertung des Gehaltsbe\n nchmarks 2020 und den technischen Updates\\, einen besonderen Fokus auf S\n tellenanzeigen: Einerseits führen wir eine statistische Auswertung durch\n \\, welche Suchmaschinenkriterien eine erfolgreiche Stellenanzeige erfüll\n t. Ferner erfahren wir aus von der langjährigen Projektleiterin und Unte\n rnehmensberaterin Anette Schlotte\\, was es bei der Suche nach Projektlei\n tern zu beachten gilt.  \\n\\nDie Teilnahme ist kostenfrei. Jedoch ist ein\n e kurze Anmeldung zur Freischaltung aus organisatorischen Gründen nötig.\n  Die Zugangsdaten und technische Hinweise zur Teilnahme erhalten Sie ein\n  3-4 Tage vor dem Beginn per E-Mail. Sie benötigen Internetzugang\\, Brow\n ser und wenn möglich ein Headset.\\nDer Empfehlungsbund ist das führende \n Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutsch\n land.\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\\\n n\\n* Neuigkeiten des Empfehlungsbundes - Information zu technischen Entw\n icklungen* Neugestaltung der Fachkräfteportale\\, Services und am Empfehl\n ungsbund-Profil* Mittlr: Umstellung des Geschäftsmodells\\n\\nErgebnisse d\n es Gehaltsbenchmarks 2020 mit Jobwert.info\\n\\n* Während der jährlichen D\n atenerhebungsphase vom 1. Januar bis 31. März konnten teilnehmende Unter\n nehmen ihre Gehälter und Benefit-Leistungen einreichen und sich regional\n  benchmarken lassen. In unserer Benchmarkauswertung präsentieren wir Ihn\n en aktuelle Zahlen zu Gehältern und Benefits auf regionalem Niveau. \\n\\n\n Fachvortrag: Stellenoptimierung 2.0 \\n\\n* Momentan entwickeln wir mit Jo\n blytics einen Service\\, der es Ihnen erlaubt Ihre Stellenanzeigen auf Su\n chmaschinenauffindbarkeit zu prüfen. Insb. Stellenbörsensuchmaschinen sp\n ielen hier eine herausragende Rolle. Wir haben damit die Möglichkeit gro\n ße Mengen an Stellenanzeigen statistisch auszuwerten\\, deren Ergebnisse \n wir in einem Fachvortrag präsentieren werden. Unser Ziel ist es objektiv\n e Erfolgsfaktoren für eine optimierte Stellenanzeige herauszustellen.  \\\n n\\nGastvortrag: Wie angle ich einen Projektleiter? Funktion entscheidet\\\n , Haltung verführt! \\n* Wir freuen uns\\, Annett Schlotte\\, langjährige P\n rojektleiterin und Unternehmensberaterin mit Fokus auf Projektmanagement\n \\, für diesen Gastvortrag gewinnen zu können. Aus der Perspektive eines \n Projektleiters berichtet uns Frau Schlotte\\, welche Funktionen für einen\n  Projektleiter attraktive Bewerbungsgründe sind. Zudem gibt Sie Ausblick\n  in die Haltung eines Projektleiters und dessen Wünsche an eine Organisa\n tion. Authentische Rollenprofile für einen Projektmanager\\, die integrie\n rt in eine passende Unternehmenskultur dargestellt sind\\, ist ein Schlüs\n selelement für eine Einladung in einen neuen Lebensabschnitt mit Leitung\n sfunktion.\\n\\n\\n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/45\nSUMMARY:Online Expertenforum Personalmanagement 2020\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/45\nATTACH:https://www.empfehlungsbund.de/events/45\nLOCATION:pludoni GmbH\\, WebEx\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eTrotz der gegenwärtigen Ausna\n hmesituation möchten wir unser alljährliches Expertenforum Personalmanag\n ement austragen. Dieses Jahr findet das Expertenforum Personalmanagement\n  als Online-Veranstaltung statt. Es gibt vier identische Sessions zu unt\n erschiedlichen Zeiten zu denen Sie sich anmelden können. Die Teilnehmerz\n ahl pro Session ist auf 30-40 Personen begrenzt. \u003cbr\u003e\u003cbr\u003eIm Rahmen des j\n ährlichen Expertentreffens stellt der Empfehlungsbund regelmäßig aktuell\n e Entwicklungen und Studien in den Bereichen Employer Branding, Personal\n marketing und Personalauswahl vor. Das offene Expertenforum Personalmana\n gement richtet sich speziell an Personalmanager und Führungskräfte regio\n naler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfol\n gen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönliche\n n Austausch zu Fragen der Personalgewinnung und wir informieren sie über\n  technische Innovationen für eine erfolgreichere Personalbedarfsdeckung.\n \u0026nbsp; \u003cbr\u003e\u003cbr\u003eDie Agenda des Expertenforums dieses Jahres beinhaltet, n\n eben der regulären Auswertung des Gehaltsbenchmarks 2020 und den technis\n chen Updates, einen besonderen Fokus auf Stellenanzeigen: Einerseits füh\n ren wir eine statistische Auswertung durch, welche Suchmaschinenkriterie\n n eine erfolgreiche Stellenanzeige erfüllt. Ferner erfahren wir aus von \n der langjährigen Projektleiterin und Unternehmensberaterin Anette Schlot\n te, was es bei der Suche nach Projektleitern zu beachten gilt.\u0026nbsp; \u003cbr\n \u003e\u003cbr\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur F\n reischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und t\n echnische Hinweise zur Teilnahme erhalten Sie ein 3-4 Tage vor dem Begin\n n per E-Mail. Sie benötigen Internetzugang, Browser und wenn möglich ein\n  Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Emp\n fehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung\n  durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eAktuelle Kennzahlen zum\n  Empfehlungsbund und technische Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuig\n keiten des Empfehlungsbundes - Information zu technischen Entwicklungen\u003c\n /li\u003e\u003cli\u003eNeugestaltung der Fachkräfteportale, Services und am Empfehlungs\n bund-Profil\u003c/li\u003e\u003cli\u003eMittlr: Umstellung des Geschäftsmodells\u003c/li\u003e\u003c/ul\u003e\u003cdi\n v\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eErgebnisse des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c/\n h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase vom\n  1. Januar bis 31. März konnten teilnehmende Unternehmen ihre Gehälter u\n nd Benefit-Leistungen einreichen und sich regional benchmarken lassen. I\n n unserer Benchmarkauswertung präsentieren wir Ihnen aktuelle Zahlen zu \n Gehältern und Benefits auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/\n div\u003e\u003ch1\u003eFachvortrag: Stellenoptimierung 2.0\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\n \u003e\u003cli\u003eMomentan entwickeln wir mit Joblytics einen Service, der es Ihnen e\n rlaubt Ihre Stellenanzeigen auf Suchmaschinenauffindbarkeit zu prüfen. I\n nsb. Stellenbörsensuchmaschinen spielen hier eine herausragende Rolle. W\n ir haben damit die Möglichkeit große Mengen an Stellenanzeigen statistis\n ch auszuwerten, deren Ergebnisse wir in einem Fachvortrag präsentieren w\n erden. Unser Ziel ist es objektive Erfolgsfaktoren für eine optimierte S\n tellenanzeige herauszustellen. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eGastvo\n rtrag: Wie angle ich einen Projektleiter? \u003cstrong\u003eFunktion\u003c/strong\u003e ents\n cheidet, \u003cstrong\u003eHaltung\u003c/strong\u003e verführt!\u003c/h1\u003e\u003cdiv\u003e\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\n \u003eWir freuen uns, Annett Schlotte, langjährige Projektleiterin und Untern\n ehmensberaterin mit Fokus auf Projektmanagement, für diesen Gastvortrag \n gewinnen zu können. Aus der Perspektive eines Projektleiters berichtet u\n ns Frau Schlotte, welche Funktionen für einen Projektleiter attraktive B\n ewerbungsgründe sind. Zudem gibt Sie Ausblick in die Haltung eines Proje\n ktleiters und dessen Wünsche an eine Organisation. Authentische Rollenpr\n ofile für einen Projektmanager, die integriert in eine passende Unterneh\n menskultur dargestellt sind, ist ein Schlüsselelement für eine Einladung\n  in einen neuen Lebensabschnitt mit Leitungsfunktion.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\n \u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":113,"display_line":"27.05.2020 - 14 bis 17:00 Uhr WebEx - Empfehlungsbund Online Treffen - Session 4 - Gastgeber: pludoni GmbH","subtitle":"Empfehlungsbund Online Treffen - Session 4","city":"WebEx","start":"2020-05-27T14:00:22.000+02:00","finish":"2020-05-27T17:00:22.000+02:00","address":"WebEx","event_host":"pludoni GmbH","lat":33.5871,"lon":-84.4694,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20200329T020000\nRDATE:20200329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200527T170022\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200527T140022\nCATEGORIES:BUSINESS\nDESCRIPTION:Trotz der gegenwärtigen Ausnahmesituation möchten wir unser a\n lljährliches Expertenforum Personalmanagement austragen. Dieses Jahr fin\n det das Expertenforum Personalmanagement als Online-Veranstaltung statt.\n  Es gibt vier identische Sessions zu unterschiedlichen Zeiten zu denen S\n ie sich anmelden können. Die Teilnehmerzahl pro Session ist auf 30-40 Pe\n rsonen begrenzt. \\n\\nIm Rahmen des jährlichen Expertentreffens stellt de\n r Empfehlungsbund regelmäßig aktuelle Entwicklungen und Studien in den B\n ereichen Employer Branding\\, Personalmarketing und Personalauswahl vor. \n Das offene Expertenforum Personalmanagement richtet sich speziell an Per\n sonalmanager und Führungskräfte regionaler Unternehmen mit Fachkräftebed\n arf. Mit unserem Expertenforum verfolgen wir zwei Ziele: Wir bieten Pers\n onaler eine Plattform zum persönlichen Austausch zu Fragen der Personalg\n ewinnung und wir informieren sie über technische Innovationen für eine e\n rfolgreichere Personalbedarfsdeckung.  \\n\\nDie Agenda des Expertenforums\n  dieses Jahres beinhaltet\\, neben der regulären Auswertung des Gehaltsbe\n nchmarks 2020 und den technischen Updates\\, einen besonderen Fokus auf S\n tellenanzeigen: Einerseits führen wir eine statistische Auswertung durch\n \\, welche Suchmaschinenkriterien eine erfolgreiche Stellenanzeige erfüll\n t. Ferner erfahren wir aus von der langjährigen Projektleiterin und Unte\n rnehmensberaterin Anette Schlotte\\, was es bei der Suche nach Projektlei\n tern zu beachten gilt.  \\n\\nDie Teilnahme ist kostenfrei. Jedoch ist ein\n e kurze Anmeldung zur Freischaltung aus organisatorischen Gründen nötig.\n  Die Zugangsdaten und technische Hinweise zur Teilnahme erhalten Sie ein\n  3-4 Tage vor dem Beginn per E-Mail. Sie benötigen Internetzugang\\, Brow\n ser und wenn möglich ein Headset.\\nDer Empfehlungsbund ist das führende \n Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutsch\n land.\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\\\n n\\n* Neuigkeiten des Empfehlungsbundes - Information zu technischen Entw\n icklungen* Neugestaltung der Fachkräfteportale\\, Services und am Empfehl\n ungsbund-Profil* Mittlr: Umstellung des Geschäftsmodells\\n\\nErgebnisse d\n es Gehaltsbenchmarks 2020 mit Jobwert.info\\n\\n* Während der jährlichen D\n atenerhebungsphase vom 1. Januar bis 31. März konnten teilnehmende Unter\n nehmen ihre Gehälter und Benefit-Leistungen einreichen und sich regional\n  benchmarken lassen. In unserer Benchmarkauswertung präsentieren wir Ihn\n en aktuelle Zahlen zu Gehältern und Benefits auf regionalem Niveau. \\n\\n\n Fachvortrag: Stellenoptimierung 2.0 \\n\\n* Momentan entwickeln wir mit Jo\n blytics einen Service\\, der es Ihnen erlaubt Ihre Stellenanzeigen auf Su\n chmaschinenauffindbarkeit zu prüfen. Insb. Stellenbörsensuchmaschinen sp\n ielen hier eine herausragende Rolle. Wir haben damit die Möglichkeit gro\n ße Mengen an Stellenanzeigen statistisch auszuwerten\\, deren Ergebnisse \n wir in einem Fachvortrag präsentieren werden. Unser Ziel ist es objektiv\n e Erfolgsfaktoren für eine optimierte Stellenanzeige herauszustellen.  \\\n n\\nGastvortrag: Wie angle ich einen Projektleiter? Funktion entscheidet\\\n , Haltung verführt! \\n* Wir freuen uns\\, Annett Schlotte\\, langjährige P\n rojektleiterin und Unternehmensberaterin mit Fokus auf Projektmanagement\n \\, für diesen Gastvortrag gewinnen zu können. Aus der Perspektive eines \n Projektleiters berichtet uns Frau Schlotte\\, welche Funktionen für einen\n  Projektleiter attraktive Bewerbungsgründe sind. Zudem gibt Sie Ausblick\n  in die Haltung eines Projektleiters und dessen Wünsche an eine Organisa\n tion. Authentische Rollenprofile für einen Projektmanager\\, die integrie\n rt in eine passende Unternehmenskultur dargestellt sind\\, ist ein Schlüs\n selelement für eine Einladung in einen neuen Lebensabschnitt mit Leitung\n sfunktion.\\n\\n\\n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/45\nSUMMARY:Online Expertenforum Personalmanagement 2020\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/45\nATTACH:https://www.empfehlungsbund.de/events/45\nLOCATION:pludoni GmbH\\, WebEx\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eTrotz der gegenwärtigen Ausna\n hmesituation möchten wir unser alljährliches Expertenforum Personalmanag\n ement austragen. Dieses Jahr findet das Expertenforum Personalmanagement\n  als Online-Veranstaltung statt. Es gibt vier identische Sessions zu unt\n erschiedlichen Zeiten zu denen Sie sich anmelden können. Die Teilnehmerz\n ahl pro Session ist auf 30-40 Personen begrenzt. \u003cbr\u003e\u003cbr\u003eIm Rahmen des j\n ährlichen Expertentreffens stellt der Empfehlungsbund regelmäßig aktuell\n e Entwicklungen und Studien in den Bereichen Employer Branding, Personal\n marketing und Personalauswahl vor. Das offene Expertenforum Personalmana\n gement richtet sich speziell an Personalmanager und Führungskräfte regio\n naler Unternehmen mit Fachkräftebedarf. Mit unserem Expertenforum verfol\n gen wir zwei Ziele: Wir bieten Personaler eine Plattform zum persönliche\n n Austausch zu Fragen der Personalgewinnung und wir informieren sie über\n  technische Innovationen für eine erfolgreichere Personalbedarfsdeckung.\n \u0026nbsp; \u003cbr\u003e\u003cbr\u003eDie Agenda des Expertenforums dieses Jahres beinhaltet, n\n eben der regulären Auswertung des Gehaltsbenchmarks 2020 und den technis\n chen Updates, einen besonderen Fokus auf Stellenanzeigen: Einerseits füh\n ren wir eine statistische Auswertung durch, welche Suchmaschinenkriterie\n n eine erfolgreiche Stellenanzeige erfüllt. Ferner erfahren wir aus von \n der langjährigen Projektleiterin und Unternehmensberaterin Anette Schlot\n te, was es bei der Suche nach Projektleitern zu beachten gilt.\u0026nbsp; \u003cbr\n \u003e\u003cbr\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur F\n reischaltung aus organisatorischen Gründen nötig. Die Zugangsdaten und t\n echnische Hinweise zur Teilnahme erhalten Sie ein 3-4 Tage vor dem Begin\n n per E-Mail. Sie benötigen Internetzugang, Browser und wenn möglich ein\n  Headset.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Emp\n fehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung\n  durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eAktuelle Kennzahlen zum\n  Empfehlungsbund und technische Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuig\n keiten des Empfehlungsbundes - Information zu technischen Entwicklungen\u003c\n /li\u003e\u003cli\u003eNeugestaltung der Fachkräfteportale, Services und am Empfehlungs\n bund-Profil\u003c/li\u003e\u003cli\u003eMittlr: Umstellung des Geschäftsmodells\u003c/li\u003e\u003c/ul\u003e\u003cdi\n v\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eErgebnisse des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c/\n h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase vom\n  1. Januar bis 31. März konnten teilnehmende Unternehmen ihre Gehälter u\n nd Benefit-Leistungen einreichen und sich regional benchmarken lassen. I\n n unserer Benchmarkauswertung präsentieren wir Ihnen aktuelle Zahlen zu \n Gehältern und Benefits auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/\n div\u003e\u003ch1\u003eFachvortrag: Stellenoptimierung 2.0\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\n \u003e\u003cli\u003eMomentan entwickeln wir mit Joblytics einen Service, der es Ihnen e\n rlaubt Ihre Stellenanzeigen auf Suchmaschinenauffindbarkeit zu prüfen. I\n nsb. Stellenbörsensuchmaschinen spielen hier eine herausragende Rolle. W\n ir haben damit die Möglichkeit große Mengen an Stellenanzeigen statistis\n ch auszuwerten, deren Ergebnisse wir in einem Fachvortrag präsentieren w\n erden. Unser Ziel ist es objektive Erfolgsfaktoren für eine optimierte S\n tellenanzeige herauszustellen. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eGastvo\n rtrag: Wie angle ich einen Projektleiter? \u003cstrong\u003eFunktion\u003c/strong\u003e ents\n cheidet, \u003cstrong\u003eHaltung\u003c/strong\u003e verführt!\u003c/h1\u003e\u003cdiv\u003e\u0026nbsp;\u003c/div\u003e\u003cul\u003e\u003cli\n \u003eWir freuen uns, Annett Schlotte, langjährige Projektleiterin und Untern\n ehmensberaterin mit Fokus auf Projektmanagement, für diesen Gastvortrag \n gewinnen zu können. Aus der Perspektive eines Projektleiters berichtet u\n ns Frau Schlotte, welche Funktionen für einen Projektleiter attraktive B\n ewerbungsgründe sind. Zudem gibt Sie Ausblick in die Haltung eines Proje\n ktleiters und dessen Wünsche an eine Organisation. Authentische Rollenpr\n ofile für einen Projektmanager, die integriert in eine passende Unterneh\n menskultur dargestellt sind, ist ein Schlüsselelement für eine Einladung\n  in einen neuen Lebensabschnitt mit Leitungsfunktion.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\n \u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":44,"name":"ebcw_202001","hashtag":"ebcw","title":"Empfehlungsbund Community Workshop in Dresden, Leipzig, Berlin und München","teaser":"Die Agenda unseres Januar-Workshops beinhaltet, neben der Ankündigung zum Gehaltsbenchmarks 2020 und den technischen Updates, zwei besondere Fachvorträge. In unserem ersten Vortrag erläutern wir Ihnen die Methodik, wie Gehaltsbenchmarks erhoben werden und was es hierbei zu beachten gilt. Der zweite Vortrag behandelt das Thema KPIs im Recruiting. Hier wollen wir Ihnen Einblicke liefern, wie diese sinnvoll ermittelt werden und welche Aussagekraft hinter weitläufig bekannten KPIs steckt. ","teaser_hrfilter":"Start der Empfehlungsbund Community Workshops am 28. und 29. Januar 2020. Unsere Hauptthemen: (1) Wie lassen sich KPIs von Recruitingkanälen zielführend interpretieren? Und (2) die Methodik hinter Gehaltsbenchmarks - Wie aussagekräftig sind eigentlich Gehaltsvergleiche? Details zur kostenfreien Anmeldung finden Sie in den Eventdetails. ","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003e\u003cstrong\u003eInformation: Unsere Veranstaltung in Berlin wird aufgrund der grassierenden Grippewelle in Berlin nicht\u0026nbsp; zum geplanten Termin\u003c/strong\u003e \u003cstrong\u003estattfinden. Weitere Informationen dazu erhalten Sie telefonisch unter 0351/28792370 bzw. via Mail unter info@pludoni.de.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eMit unseren regionalen Community Workshops des Empfehlungsbundes bieten wir speziell für Personalexperten und Führungskräfte eine Plattform zum persönlichen Austausch zu Fragen der Personalgewinnung. Hier stellen wir unseren Mitgliedern die neuesten Entwicklungen des Empfehlungsbundes und seinen Empfehlungscommunitys vor. Mithilfe des Feedbacks unserer Mitglieder vor Ort treiben wir unser Konzept der Fachkräftesuche in der Gemeinschaft weiter voran.\u003cbr\u003e\u003cbr\u003eDie Agenda unseres Januar-Treffens beinhaltet, neben der Ankündigung zum Gehaltsbenchmarks 2020 und den technischen Updates, zwei besondere Fachvorträge. Einerseits erläutern wir Ihnen die Methoden, wie Gehaltsbenchmarks erhoben werden und was es hierbei zu beachten gilt. In unserem zweiten Vortrag sprechen wir über KPIs im Recruiting. Hier wollen wir Ihnen Einblicke liefern, wie diese sinnvoll ermittelt werden und welche Aussagekraft hinter weitläufig bekannten KPIs wirklich steckt. \u003cbr\u003e\u003cbr\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e","agenda":"\u003ch1\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuigkeiten des Empfehlungsbundes - Information zu technischen Entwicklungen und Community Updates in Ihrem EB-Profil Dashboard\u003c/li\u003e\u003cli\u003eUnsere Vision Jobwert-Reverse -\u0026nbsp; Gehälter für ein spezifisches Berufsprofil gezielt abrufen\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eAnkündigung: Start des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase von 1. Januar bis 31. März können Sie die Gehälter und Benefit-Leistungen Ihres Unternehmens einreichen. Der Benchmark aller teilnehmenden Unternehmen liefert Ihnen einen aktuellen und exakten Gehalts- und Benefitvergleich auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortrag: Kennzahlen von Recruitingkanälen sinnvoll interpretieren\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir bekommen immer häufiger zu hören, Angebote wie Jobbörsen, E-Recruiting-Lösungen oder Recruitingveranstaltungen seien Recruitingkanäle. Und die Leistung dieser Kanäle ließe sich anhand von Performance-Indikatoren, wie Klickzahlen und Nutzerzahlen messen. Diese Sicht ist falsch. Wir werden ihnen in unserem Fachvortrag erläutern, aus welchen Elementen sich ein Recruitingkanal zusammensetzt und welche Indikatoren benötigt werden, um eine qualifiziertes Urteil über die Leistung eines Recruitingkanals zu treffen.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortrag: Gehälter vergleichen - Methodik und Praxis\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir geben Ihnen Einblicke in die Erstellung eines Gehaltsvergleiches.\u0026nbsp; Hier werden wir Ihnen kurz die nötigen Berechnungsverfahren vorstellen und auf die Schwierigkeiten bei der Datenerhebung eingehen. Außerdem wollen wir die üblichen Fehler, die beim Vergleichen von Gehältern auftauchen können, genauer erläutern. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eAnforderungsworkshop: Digitale Personalakte\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDie Feedbacks unserer EBMS-Nutzer brachten uns auf die Idee das Bewerbermanagementsystem um die Funktion einer digitalen Personalakte zu erweitern. In diesem Treffen möchten wir von unseren Workshop-Teilnehmern Inputs einholen, welche Kritierien sie an einer funktionierenden Personalakte stellen.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e","start":"2020-01-28T15:00:26.000+01:00","finish":"2020-01-29T18:00:30.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/44/wide_full_2017-05-23_20170523_162358.jpg","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/44/wide_EBCW_Banner_HRfilter.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/44/block_image_Community_Workshop_Blog.jpg","register_url":"https://www.empfehlungsbund.de/events/44/register","show_url":"https://www.empfehlungsbund.de/events/44","events":[{"id":104,"display_line":"29.01.2020 - 15 bis 18:00 Uhr Leipzig - Empfehlungsbund Community Workshop in Leipzig - Gastgeber: BI Business Intelligence GmbH","subtitle":"Empfehlungsbund Community Workshop in Leipzig","city":"Leipzig","start":"2020-01-29T15:00:14.000+01:00","finish":"2020-01-29T18:00:14.000+01:00","address":"Simildenstraße 20, 04277 Leipzig","event_host":"BI Business Intelligence GmbH","lat":51.3083,"lon":12.3715,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20191027T030000\nRDATE:20191027T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200129T180014\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200129T150014\nCATEGORIES:BUSINESS\nDESCRIPTION:Information: Unsere Veranstaltung in Berlin wird aufgrund der\n  grassierenden Grippewelle in Berlin nicht  zum geplanten Termin stattfi\n nden. Weitere Informationen dazu erhalten Sie telefonisch unter 0351/287\n 92370 bzw. via Mail unter info@pludoni.de.\\n\\nMit unseren regionalen Com\n munity Workshops des Empfehlungsbundes bieten wir speziell für Personale\n xperten und Führungskräfte eine Plattform zum persönlichen Austausch zu \n Fragen der Personalgewinnung. Hier stellen wir unseren Mitgliedern die n\n euesten Entwicklungen des Empfehlungsbundes und seinen Empfehlungscommun\n itys vor. Mithilfe des Feedbacks unserer Mitglieder vor Ort treiben wir \n unser Konzept der Fachkräftesuche in der Gemeinschaft weiter voran.\\n\\nD\n ie Agenda unseres Januar-Treffens beinhaltet\\, neben der Ankündigung zum\n  Gehaltsbenchmarks 2020 und den technischen Updates\\, zwei besondere Fac\n hvorträge. Einerseits erläutern wir Ihnen die Methoden\\, wie Gehaltsbenc\n hmarks erhoben werden und was es hierbei zu beachten gilt. In unserem zw\n eiten Vortrag sprechen wir über KPIs im Recruiting. Hier wollen wir Ihne\n n Einblicke liefern\\, wie diese sinnvoll ermittelt werden und welche Aus\n sagekraft hinter weitläufig bekannten KPIs wirklich steckt. \\n\\nDie Teil\n nahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung \n aus organisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das\n  führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen \n in Deutschland.\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technisch\n e Updates\\n\\n* Neuigkeiten des Empfehlungsbundes - Information zu techni\n schen Entwicklungen und Community Updates in Ihrem EB-Profil Dashboard* \n Unsere Vision Jobwert-Reverse -  Gehälter für ein spezifisches Berufspro\n fil gezielt abrufen\\n\\nAnkündigung: Start des Gehaltsbenchmarks 2020 mit\n  Jobwert.info\\n\\n* Während der jährlichen Datenerhebungsphase von 1. Jan\n uar bis 31. März können Sie die Gehälter und Benefit-Leistungen Ihres Un\n ternehmens einreichen. Der Benchmark aller teilnehmenden Unternehmen lie\n fert Ihnen einen aktuellen und exakten Gehalts- und Benefitvergleich auf\n  regionalem Niveau. \\n\\nFachvortrag: Kennzahlen von Recruitingkanälen si\n nnvoll interpretieren\\n\\n* Wir bekommen immer häufiger zu hören\\, Angebo\n te wie Jobbörsen\\, E-Recruiting-Lösungen oder Recruitingveranstaltungen \n seien Recruitingkanäle. Und die Leistung dieser Kanäle ließe sich anhand\n  von Performance-Indikatoren\\, wie Klickzahlen und Nutzerzahlen messen. \n Diese Sicht ist falsch. Wir werden ihnen in unserem Fachvortrag erläuter\n n\\, aus welchen Elementen sich ein Recruitingkanal zusammensetzt und wel\n che Indikatoren benötigt werden\\, um eine qualifiziertes Urteil über die\n  Leistung eines Recruitingkanals zu treffen.\\n\\nFachvortrag: Gehälter ve\n rgleichen - Methodik und Praxis\\n\\n* Wir geben Ihnen Einblicke in die Er\n stellung eines Gehaltsvergleiches.  Hier werden wir Ihnen kurz die nötig\n en Berechnungsverfahren vorstellen und auf die Schwierigkeiten bei der D\n atenerhebung eingehen. Außerdem wollen wir die üblichen Fehler\\, die bei\n m Vergleichen von Gehältern auftauchen können\\, genauer erläutern.  \\n\\n\n Anforderungsworkshop: Digitale Personalakte\\n\\n* Die Feedbacks unserer E\n BMS-Nutzer brachten uns auf die Idee das Bewerbermanagementsystem um die\n  Funktion einer digitalen Personalakte zu erweitern. In diesem Treffen m\n öchten wir von unseren Workshop-Teilnehmern Inputs einholen\\, welche Kri\n tierien sie an einer funktionierenden Personalakte stellen. \nURL:https://www.empfehlungsbund.de/events/44\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, Berlin \n und München\nORGANIZER;CN=BI Business Intelligence GmbH / Empfehlungsbund.de:https://w\n ww.empfehlungsbund.de/events/44\nATTACH:https://www.empfehlungsbund.de/events/44\nLOCATION:BI Business Intelligence GmbH\\, Simildenstraße 20\\, 04277 Leipzi\n g\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eInformation: Unsere V\n eranstaltung in Berlin wird aufgrund der grassierenden Grippewelle in Be\n rlin nicht\u0026nbsp; zum geplanten Termin\u003c/strong\u003e \u003cstrong\u003estattfinden. Weit\n ere Informationen dazu erhalten Sie telefonisch unter 0351/28792370 bzw.\n  via Mail unter info@pludoni.de.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eMit unseren regionalen \n Community Workshops des Empfehlungsbundes bieten wir speziell für Person\n alexperten und Führungskräfte eine Plattform zum persönlichen Austausch \n zu Fragen der Personalgewinnung. Hier stellen wir unseren Mitgliedern di\n e neuesten Entwicklungen des Empfehlungsbundes und seinen Empfehlungscom\n munitys vor. Mithilfe des Feedbacks unserer Mitglieder vor Ort treiben w\n ir unser Konzept der Fachkräftesuche in der Gemeinschaft weiter voran.\u003cb\n r\u003e\u003cbr\u003eDie Agenda unseres Januar-Treffens beinhaltet, neben der Ankündigu\n ng zum Gehaltsbenchmarks 2020 und den technischen Updates, zwei besonder\n e Fachvorträge. Einerseits erläutern wir Ihnen die Methoden, wie Gehalts\n benchmarks erhoben werden und was es hierbei zu beachten gilt. In unsere\n m zweiten Vortrag sprechen wir über KPIs im Recruiting. Hier wollen wir \n Ihnen Einblicke liefern, wie diese sinnvoll ermittelt werden und welche \n Aussagekraft hinter weitläufig bekannten KPIs wirklich steckt. \u003cbr\u003e\u003cbr\u003eD\n ie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freisch\n altung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://w\n ww.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende N\n etzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschl\n and.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische\n  Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuigkeiten des Empfehlungsbundes - \n Information zu technischen Entwicklungen und Community Updates in Ihrem \n EB-Profil Dashboard\u003c/li\u003e\u003cli\u003eUnsere Vision Jobwert-Reverse -\u0026nbsp; Gehält\n er für ein spezifisches Berufsprofil gezielt abrufen\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c\n /div\u003e\u003ch1\u003eAnkündigung: Start des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c\n /h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase vo\n n 1. Januar bis 31. März können Sie die Gehälter und Benefit-Leistungen \n Ihres Unternehmens einreichen. Der Benchmark aller teilnehmenden Unterne\n hmen liefert Ihnen einen aktuellen und exakten Gehalts- und Benefitvergl\n eich auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortra\n g: Kennzahlen von Recruitingkanälen sinnvoll interpretieren\u003c/h1\u003e\u003cdiv\u003e\u003cbr\n \u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir bekommen immer häufiger zu hören, Angebote wie Jobbör\n sen, E-Recruiting-Lösungen oder Recruitingveranstaltungen seien Recruiti\n ngkanäle. Und die Leistung dieser Kanäle ließe sich anhand von Performan\n ce-Indikatoren, wie Klickzahlen und Nutzerzahlen messen. Diese Sicht ist\n  falsch. Wir werden ihnen in unserem Fachvortrag erläutern, aus welchen \n Elementen sich ein Recruitingkanal zusammensetzt und welche Indikatoren \n benötigt werden, um eine qualifiziertes Urteil über die Leistung eines R\n ecruitingkanals zu treffen.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortrag: Geh\n älter vergleichen - Methodik und Praxis\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir g\n eben Ihnen Einblicke in die Erstellung eines Gehaltsvergleiches.\u0026nbsp; H\n ier werden wir Ihnen kurz die nötigen Berechnungsverfahren vorstellen un\n d auf die Schwierigkeiten bei der Datenerhebung eingehen. Außerdem wolle\n n wir die üblichen Fehler, die beim Vergleichen von Gehältern auftauchen\n  können, genauer erläutern. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eAnforderu\n ngsworkshop: Digitale Personalakte\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDie Feedba\n cks unserer EBMS-Nutzer brachten uns auf die Idee das Bewerbermanagement\n system um die Funktion einer digitalen Personalakte zu erweitern. In die\n sem Treffen möchten wir von unseren Workshop-Teilnehmern Inputs einholen\n , welche Kritierien sie an einer funktionierenden Personalakte stellen.\u0026\n nbsp;\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210127,"Bezeichnung":"BI Business Intelligence GmbH","Kommentar":"ab 12_2020: abu","Typ":10,"Nutzername":"bileipzig","Website":"https://www.bi-web.de:443/de/karriere/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:37.000+02:00"}},{"id":107,"display_line":"28.01.2020 - 15 bis 18:00 Uhr Dresden - Empfehlungsbund Community Workshop in Dresden - Gastgeber: AIS Automation Dresden GmbH","subtitle":"Empfehlungsbund Community Workshop in Dresden","city":"Dresden","start":"2020-01-28T15:00:41.000+01:00","finish":"2020-01-28T18:00:41.000+01:00","address":"Otto-Mohr-Straße 6, 01237 Dresden","event_host":"AIS Automation Dresden GmbH","lat":51.014,"lon":13.7926,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20191027T030000\nRDATE:20191027T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200128T180041\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200128T150041\nCATEGORIES:BUSINESS\nDESCRIPTION:Information: Unsere Veranstaltung in Berlin wird aufgrund der\n  grassierenden Grippewelle in Berlin nicht  zum geplanten Termin stattfi\n nden. Weitere Informationen dazu erhalten Sie telefonisch unter 0351/287\n 92370 bzw. via Mail unter info@pludoni.de.\\n\\nMit unseren regionalen Com\n munity Workshops des Empfehlungsbundes bieten wir speziell für Personale\n xperten und Führungskräfte eine Plattform zum persönlichen Austausch zu \n Fragen der Personalgewinnung. Hier stellen wir unseren Mitgliedern die n\n euesten Entwicklungen des Empfehlungsbundes und seinen Empfehlungscommun\n itys vor. Mithilfe des Feedbacks unserer Mitglieder vor Ort treiben wir \n unser Konzept der Fachkräftesuche in der Gemeinschaft weiter voran.\\n\\nD\n ie Agenda unseres Januar-Treffens beinhaltet\\, neben der Ankündigung zum\n  Gehaltsbenchmarks 2020 und den technischen Updates\\, zwei besondere Fac\n hvorträge. Einerseits erläutern wir Ihnen die Methoden\\, wie Gehaltsbenc\n hmarks erhoben werden und was es hierbei zu beachten gilt. In unserem zw\n eiten Vortrag sprechen wir über KPIs im Recruiting. Hier wollen wir Ihne\n n Einblicke liefern\\, wie diese sinnvoll ermittelt werden und welche Aus\n sagekraft hinter weitläufig bekannten KPIs wirklich steckt. \\n\\nDie Teil\n nahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung \n aus organisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das\n  führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen \n in Deutschland.\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technisch\n e Updates\\n\\n* Neuigkeiten des Empfehlungsbundes - Information zu techni\n schen Entwicklungen und Community Updates in Ihrem EB-Profil Dashboard* \n Unsere Vision Jobwert-Reverse -  Gehälter für ein spezifisches Berufspro\n fil gezielt abrufen\\n\\nAnkündigung: Start des Gehaltsbenchmarks 2020 mit\n  Jobwert.info\\n\\n* Während der jährlichen Datenerhebungsphase von 1. Jan\n uar bis 31. März können Sie die Gehälter und Benefit-Leistungen Ihres Un\n ternehmens einreichen. Der Benchmark aller teilnehmenden Unternehmen lie\n fert Ihnen einen aktuellen und exakten Gehalts- und Benefitvergleich auf\n  regionalem Niveau. \\n\\nFachvortrag: Kennzahlen von Recruitingkanälen si\n nnvoll interpretieren\\n\\n* Wir bekommen immer häufiger zu hören\\, Angebo\n te wie Jobbörsen\\, E-Recruiting-Lösungen oder Recruitingveranstaltungen \n seien Recruitingkanäle. Und die Leistung dieser Kanäle ließe sich anhand\n  von Performance-Indikatoren\\, wie Klickzahlen und Nutzerzahlen messen. \n Diese Sicht ist falsch. Wir werden ihnen in unserem Fachvortrag erläuter\n n\\, aus welchen Elementen sich ein Recruitingkanal zusammensetzt und wel\n che Indikatoren benötigt werden\\, um eine qualifiziertes Urteil über die\n  Leistung eines Recruitingkanals zu treffen.\\n\\nFachvortrag: Gehälter ve\n rgleichen - Methodik und Praxis\\n\\n* Wir geben Ihnen Einblicke in die Er\n stellung eines Gehaltsvergleiches.  Hier werden wir Ihnen kurz die nötig\n en Berechnungsverfahren vorstellen und auf die Schwierigkeiten bei der D\n atenerhebung eingehen. Außerdem wollen wir die üblichen Fehler\\, die bei\n m Vergleichen von Gehältern auftauchen können\\, genauer erläutern.  \\n\\n\n Anforderungsworkshop: Digitale Personalakte\\n\\n* Die Feedbacks unserer E\n BMS-Nutzer brachten uns auf die Idee das Bewerbermanagementsystem um die\n  Funktion einer digitalen Personalakte zu erweitern. In diesem Treffen m\n öchten wir von unseren Workshop-Teilnehmern Inputs einholen\\, welche Kri\n tierien sie an einer funktionierenden Personalakte stellen. \nURL:https://www.empfehlungsbund.de/events/44\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, Berlin \n und München\nORGANIZER;CN=AIS Automation Dresden GmbH / Empfehlungsbund.de:https://www\n .empfehlungsbund.de/events/44\nATTACH:https://www.empfehlungsbund.de/events/44\nLOCATION:AIS Automation Dresden GmbH\\, Otto-Mohr-Straße 6\\, 01237 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eInformation: Unsere V\n eranstaltung in Berlin wird aufgrund der grassierenden Grippewelle in Be\n rlin nicht\u0026nbsp; zum geplanten Termin\u003c/strong\u003e \u003cstrong\u003estattfinden. Weit\n ere Informationen dazu erhalten Sie telefonisch unter 0351/28792370 bzw.\n  via Mail unter info@pludoni.de.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eMit unseren regionalen \n Community Workshops des Empfehlungsbundes bieten wir speziell für Person\n alexperten und Führungskräfte eine Plattform zum persönlichen Austausch \n zu Fragen der Personalgewinnung. Hier stellen wir unseren Mitgliedern di\n e neuesten Entwicklungen des Empfehlungsbundes und seinen Empfehlungscom\n munitys vor. Mithilfe des Feedbacks unserer Mitglieder vor Ort treiben w\n ir unser Konzept der Fachkräftesuche in der Gemeinschaft weiter voran.\u003cb\n r\u003e\u003cbr\u003eDie Agenda unseres Januar-Treffens beinhaltet, neben der Ankündigu\n ng zum Gehaltsbenchmarks 2020 und den technischen Updates, zwei besonder\n e Fachvorträge. Einerseits erläutern wir Ihnen die Methoden, wie Gehalts\n benchmarks erhoben werden und was es hierbei zu beachten gilt. In unsere\n m zweiten Vortrag sprechen wir über KPIs im Recruiting. Hier wollen wir \n Ihnen Einblicke liefern, wie diese sinnvoll ermittelt werden und welche \n Aussagekraft hinter weitläufig bekannten KPIs wirklich steckt. \u003cbr\u003e\u003cbr\u003eD\n ie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freisch\n altung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://w\n ww.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende N\n etzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschl\n and.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische\n  Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuigkeiten des Empfehlungsbundes - \n Information zu technischen Entwicklungen und Community Updates in Ihrem \n EB-Profil Dashboard\u003c/li\u003e\u003cli\u003eUnsere Vision Jobwert-Reverse -\u0026nbsp; Gehält\n er für ein spezifisches Berufsprofil gezielt abrufen\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c\n /div\u003e\u003ch1\u003eAnkündigung: Start des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c\n /h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase vo\n n 1. Januar bis 31. März können Sie die Gehälter und Benefit-Leistungen \n Ihres Unternehmens einreichen. Der Benchmark aller teilnehmenden Unterne\n hmen liefert Ihnen einen aktuellen und exakten Gehalts- und Benefitvergl\n eich auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortra\n g: Kennzahlen von Recruitingkanälen sinnvoll interpretieren\u003c/h1\u003e\u003cdiv\u003e\u003cbr\n \u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir bekommen immer häufiger zu hören, Angebote wie Jobbör\n sen, E-Recruiting-Lösungen oder Recruitingveranstaltungen seien Recruiti\n ngkanäle. Und die Leistung dieser Kanäle ließe sich anhand von Performan\n ce-Indikatoren, wie Klickzahlen und Nutzerzahlen messen. Diese Sicht ist\n  falsch. Wir werden ihnen in unserem Fachvortrag erläutern, aus welchen \n Elementen sich ein Recruitingkanal zusammensetzt und welche Indikatoren \n benötigt werden, um eine qualifiziertes Urteil über die Leistung eines R\n ecruitingkanals zu treffen.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortrag: Geh\n älter vergleichen - Methodik und Praxis\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir g\n eben Ihnen Einblicke in die Erstellung eines Gehaltsvergleiches.\u0026nbsp; H\n ier werden wir Ihnen kurz die nötigen Berechnungsverfahren vorstellen un\n d auf die Schwierigkeiten bei der Datenerhebung eingehen. Außerdem wolle\n n wir die üblichen Fehler, die beim Vergleichen von Gehältern auftauchen\n  können, genauer erläutern. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eAnforderu\n ngsworkshop: Digitale Personalakte\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDie Feedba\n cks unserer EBMS-Nutzer brachten uns auf die Idee das Bewerbermanagement\n system um die Funktion einer digitalen Personalakte zu erweitern. In die\n sem Treffen möchten wir von unseren Workshop-Teilnehmern Inputs einholen\n , welche Kritierien sie an einer funktionierenden Personalakte stellen.\u0026\n nbsp;\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210512,"Bezeichnung":"Kontron AIS GmbH","Kommentar":"früher diese hompage hinterlegt : http://www.roth-rau.de\r\n\r\nUpdate 20.02.2020: Umfirmierung der AIS Automation Dresden GmbH zu Kontron AIS GmbH","Typ":10,"Nutzername":"ais_automation_dresden","Website":"https://karriere.kontron-ais.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-08-31T11:25:43.000+02:00"}},{"id":108,"display_line":"29.01.2020 - 15 bis 18:00 Uhr Berlin - Empfehlungsbund Community Workshop in Berlin - fällt krankheitsbedingt aus! - Gastgeber: ","subtitle":"Empfehlungsbund Community Workshop in Berlin - fällt krankheitsbedingt aus!","city":"Berlin","start":"2020-01-29T15:00:30.000+01:00","finish":"2020-01-29T18:00:30.000+01:00","address":"fällt aus wegen krankheitsbedingten Gründen","event_host":"","lat":52.5098,"lon":13.4074,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20191027T030000\nRDATE:20191027T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200129T180030\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200129T150030\nCATEGORIES:BUSINESS\nDESCRIPTION:Information: Unsere Veranstaltung in Berlin wird aufgrund der\n  grassierenden Grippewelle in Berlin nicht  zum geplanten Termin stattfi\n nden. Weitere Informationen dazu erhalten Sie telefonisch unter 0351/287\n 92370 bzw. via Mail unter info@pludoni.de.\\n\\nMit unseren regionalen Com\n munity Workshops des Empfehlungsbundes bieten wir speziell für Personale\n xperten und Führungskräfte eine Plattform zum persönlichen Austausch zu \n Fragen der Personalgewinnung. Hier stellen wir unseren Mitgliedern die n\n euesten Entwicklungen des Empfehlungsbundes und seinen Empfehlungscommun\n itys vor. Mithilfe des Feedbacks unserer Mitglieder vor Ort treiben wir \n unser Konzept der Fachkräftesuche in der Gemeinschaft weiter voran.\\n\\nD\n ie Agenda unseres Januar-Treffens beinhaltet\\, neben der Ankündigung zum\n  Gehaltsbenchmarks 2020 und den technischen Updates\\, zwei besondere Fac\n hvorträge. Einerseits erläutern wir Ihnen die Methoden\\, wie Gehaltsbenc\n hmarks erhoben werden und was es hierbei zu beachten gilt. In unserem zw\n eiten Vortrag sprechen wir über KPIs im Recruiting. Hier wollen wir Ihne\n n Einblicke liefern\\, wie diese sinnvoll ermittelt werden und welche Aus\n sagekraft hinter weitläufig bekannten KPIs wirklich steckt. \\n\\nDie Teil\n nahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung \n aus organisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das\n  führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen \n in Deutschland.\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technisch\n e Updates\\n\\n* Neuigkeiten des Empfehlungsbundes - Information zu techni\n schen Entwicklungen und Community Updates in Ihrem EB-Profil Dashboard* \n Unsere Vision Jobwert-Reverse -  Gehälter für ein spezifisches Berufspro\n fil gezielt abrufen\\n\\nAnkündigung: Start des Gehaltsbenchmarks 2020 mit\n  Jobwert.info\\n\\n* Während der jährlichen Datenerhebungsphase von 1. Jan\n uar bis 31. März können Sie die Gehälter und Benefit-Leistungen Ihres Un\n ternehmens einreichen. Der Benchmark aller teilnehmenden Unternehmen lie\n fert Ihnen einen aktuellen und exakten Gehalts- und Benefitvergleich auf\n  regionalem Niveau. \\n\\nFachvortrag: Kennzahlen von Recruitingkanälen si\n nnvoll interpretieren\\n\\n* Wir bekommen immer häufiger zu hören\\, Angebo\n te wie Jobbörsen\\, E-Recruiting-Lösungen oder Recruitingveranstaltungen \n seien Recruitingkanäle. Und die Leistung dieser Kanäle ließe sich anhand\n  von Performance-Indikatoren\\, wie Klickzahlen und Nutzerzahlen messen. \n Diese Sicht ist falsch. Wir werden ihnen in unserem Fachvortrag erläuter\n n\\, aus welchen Elementen sich ein Recruitingkanal zusammensetzt und wel\n che Indikatoren benötigt werden\\, um eine qualifiziertes Urteil über die\n  Leistung eines Recruitingkanals zu treffen.\\n\\nFachvortrag: Gehälter ve\n rgleichen - Methodik und Praxis\\n\\n* Wir geben Ihnen Einblicke in die Er\n stellung eines Gehaltsvergleiches.  Hier werden wir Ihnen kurz die nötig\n en Berechnungsverfahren vorstellen und auf die Schwierigkeiten bei der D\n atenerhebung eingehen. Außerdem wollen wir die üblichen Fehler\\, die bei\n m Vergleichen von Gehältern auftauchen können\\, genauer erläutern.  \\n\\n\n Anforderungsworkshop: Digitale Personalakte\\n\\n* Die Feedbacks unserer E\n BMS-Nutzer brachten uns auf die Idee das Bewerbermanagementsystem um die\n  Funktion einer digitalen Personalakte zu erweitern. In diesem Treffen m\n öchten wir von unseren Workshop-Teilnehmern Inputs einholen\\, welche Kri\n tierien sie an einer funktionierenden Personalakte stellen. \nURL:https://www.empfehlungsbund.de/events/44\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, Berlin \n und München\nORGANIZER;CN= / Empfehlungsbund.de:https://www.empfehlungsbund.de/events/\n 44\nATTACH:https://www.empfehlungsbund.de/events/44\nLOCATION:fällt aus wegen krankheitsbedingten Gründen\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eInformation: Unsere V\n eranstaltung in Berlin wird aufgrund der grassierenden Grippewelle in Be\n rlin nicht\u0026nbsp; zum geplanten Termin\u003c/strong\u003e \u003cstrong\u003estattfinden. Weit\n ere Informationen dazu erhalten Sie telefonisch unter 0351/28792370 bzw.\n  via Mail unter info@pludoni.de.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eMit unseren regionalen \n Community Workshops des Empfehlungsbundes bieten wir speziell für Person\n alexperten und Führungskräfte eine Plattform zum persönlichen Austausch \n zu Fragen der Personalgewinnung. Hier stellen wir unseren Mitgliedern di\n e neuesten Entwicklungen des Empfehlungsbundes und seinen Empfehlungscom\n munitys vor. Mithilfe des Feedbacks unserer Mitglieder vor Ort treiben w\n ir unser Konzept der Fachkräftesuche in der Gemeinschaft weiter voran.\u003cb\n r\u003e\u003cbr\u003eDie Agenda unseres Januar-Treffens beinhaltet, neben der Ankündigu\n ng zum Gehaltsbenchmarks 2020 und den technischen Updates, zwei besonder\n e Fachvorträge. Einerseits erläutern wir Ihnen die Methoden, wie Gehalts\n benchmarks erhoben werden und was es hierbei zu beachten gilt. In unsere\n m zweiten Vortrag sprechen wir über KPIs im Recruiting. Hier wollen wir \n Ihnen Einblicke liefern, wie diese sinnvoll ermittelt werden und welche \n Aussagekraft hinter weitläufig bekannten KPIs wirklich steckt. \u003cbr\u003e\u003cbr\u003eD\n ie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freisch\n altung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://w\n ww.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende N\n etzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschl\n and.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische\n  Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuigkeiten des Empfehlungsbundes - \n Information zu technischen Entwicklungen und Community Updates in Ihrem \n EB-Profil Dashboard\u003c/li\u003e\u003cli\u003eUnsere Vision Jobwert-Reverse -\u0026nbsp; Gehält\n er für ein spezifisches Berufsprofil gezielt abrufen\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c\n /div\u003e\u003ch1\u003eAnkündigung: Start des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c\n /h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase vo\n n 1. Januar bis 31. März können Sie die Gehälter und Benefit-Leistungen \n Ihres Unternehmens einreichen. Der Benchmark aller teilnehmenden Unterne\n hmen liefert Ihnen einen aktuellen und exakten Gehalts- und Benefitvergl\n eich auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortra\n g: Kennzahlen von Recruitingkanälen sinnvoll interpretieren\u003c/h1\u003e\u003cdiv\u003e\u003cbr\n \u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir bekommen immer häufiger zu hören, Angebote wie Jobbör\n sen, E-Recruiting-Lösungen oder Recruitingveranstaltungen seien Recruiti\n ngkanäle. Und die Leistung dieser Kanäle ließe sich anhand von Performan\n ce-Indikatoren, wie Klickzahlen und Nutzerzahlen messen. Diese Sicht ist\n  falsch. Wir werden ihnen in unserem Fachvortrag erläutern, aus welchen \n Elementen sich ein Recruitingkanal zusammensetzt und welche Indikatoren \n benötigt werden, um eine qualifiziertes Urteil über die Leistung eines R\n ecruitingkanals zu treffen.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortrag: Geh\n älter vergleichen - Methodik und Praxis\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir g\n eben Ihnen Einblicke in die Erstellung eines Gehaltsvergleiches.\u0026nbsp; H\n ier werden wir Ihnen kurz die nötigen Berechnungsverfahren vorstellen un\n d auf die Schwierigkeiten bei der Datenerhebung eingehen. Außerdem wolle\n n wir die üblichen Fehler, die beim Vergleichen von Gehältern auftauchen\n  können, genauer erläutern. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eAnforderu\n ngsworkshop: Digitale Personalakte\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDie Feedba\n cks unserer EBMS-Nutzer brachten uns auf die Idee das Bewerbermanagement\n system um die Funktion einer digitalen Personalakte zu erweitern. In die\n sem Treffen möchten wir von unseren Workshop-Teilnehmern Inputs einholen\n , welche Kritierien sie an einer funktionierenden Personalakte stellen.\u0026\n nbsp;\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9211118,"Bezeichnung":"proventis GmbH","Kommentar":"","Typ":10,"Nutzername":"proventis","Website":"https://www.proventis.net/de/karriere","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:54.000+02:00"}},{"id":109,"display_line":"28.01.2020 - 15 bis 18:00 Uhr München - Empfehlungsbund Community Workshop in München - Gastgeber: mgm technology partners GmbH","subtitle":"Empfehlungsbund Community Workshop in München","city":"München","start":"2020-01-28T15:00:26.000+01:00","finish":"2020-01-28T18:00:26.000+01:00","address":"Frankfurter Ring 105a, 80807 München","event_host":"mgm technology partners GmbH","lat":48.1882,"lon":11.5851,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20191027T030000\nRDATE:20191027T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20200128T180026\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20200128T150026\nCATEGORIES:BUSINESS\nDESCRIPTION:Information: Unsere Veranstaltung in Berlin wird aufgrund der\n  grassierenden Grippewelle in Berlin nicht  zum geplanten Termin stattfi\n nden. Weitere Informationen dazu erhalten Sie telefonisch unter 0351/287\n 92370 bzw. via Mail unter info@pludoni.de.\\n\\nMit unseren regionalen Com\n munity Workshops des Empfehlungsbundes bieten wir speziell für Personale\n xperten und Führungskräfte eine Plattform zum persönlichen Austausch zu \n Fragen der Personalgewinnung. Hier stellen wir unseren Mitgliedern die n\n euesten Entwicklungen des Empfehlungsbundes und seinen Empfehlungscommun\n itys vor. Mithilfe des Feedbacks unserer Mitglieder vor Ort treiben wir \n unser Konzept der Fachkräftesuche in der Gemeinschaft weiter voran.\\n\\nD\n ie Agenda unseres Januar-Treffens beinhaltet\\, neben der Ankündigung zum\n  Gehaltsbenchmarks 2020 und den technischen Updates\\, zwei besondere Fac\n hvorträge. Einerseits erläutern wir Ihnen die Methoden\\, wie Gehaltsbenc\n hmarks erhoben werden und was es hierbei zu beachten gilt. In unserem zw\n eiten Vortrag sprechen wir über KPIs im Recruiting. Hier wollen wir Ihne\n n Einblicke liefern\\, wie diese sinnvoll ermittelt werden und welche Aus\n sagekraft hinter weitläufig bekannten KPIs wirklich steckt. \\n\\nDie Teil\n nahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung \n aus organisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das\n  führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen \n in Deutschland.\\n\\nAktuelle Kennzahlen zum Empfehlungsbund und technisch\n e Updates\\n\\n* Neuigkeiten des Empfehlungsbundes - Information zu techni\n schen Entwicklungen und Community Updates in Ihrem EB-Profil Dashboard* \n Unsere Vision Jobwert-Reverse -  Gehälter für ein spezifisches Berufspro\n fil gezielt abrufen\\n\\nAnkündigung: Start des Gehaltsbenchmarks 2020 mit\n  Jobwert.info\\n\\n* Während der jährlichen Datenerhebungsphase von 1. Jan\n uar bis 31. März können Sie die Gehälter und Benefit-Leistungen Ihres Un\n ternehmens einreichen. Der Benchmark aller teilnehmenden Unternehmen lie\n fert Ihnen einen aktuellen und exakten Gehalts- und Benefitvergleich auf\n  regionalem Niveau. \\n\\nFachvortrag: Kennzahlen von Recruitingkanälen si\n nnvoll interpretieren\\n\\n* Wir bekommen immer häufiger zu hören\\, Angebo\n te wie Jobbörsen\\, E-Recruiting-Lösungen oder Recruitingveranstaltungen \n seien Recruitingkanäle. Und die Leistung dieser Kanäle ließe sich anhand\n  von Performance-Indikatoren\\, wie Klickzahlen und Nutzerzahlen messen. \n Diese Sicht ist falsch. Wir werden ihnen in unserem Fachvortrag erläuter\n n\\, aus welchen Elementen sich ein Recruitingkanal zusammensetzt und wel\n che Indikatoren benötigt werden\\, um eine qualifiziertes Urteil über die\n  Leistung eines Recruitingkanals zu treffen.\\n\\nFachvortrag: Gehälter ve\n rgleichen - Methodik und Praxis\\n\\n* Wir geben Ihnen Einblicke in die Er\n stellung eines Gehaltsvergleiches.  Hier werden wir Ihnen kurz die nötig\n en Berechnungsverfahren vorstellen und auf die Schwierigkeiten bei der D\n atenerhebung eingehen. Außerdem wollen wir die üblichen Fehler\\, die bei\n m Vergleichen von Gehältern auftauchen können\\, genauer erläutern.  \\n\\n\n Anforderungsworkshop: Digitale Personalakte\\n\\n* Die Feedbacks unserer E\n BMS-Nutzer brachten uns auf die Idee das Bewerbermanagementsystem um die\n  Funktion einer digitalen Personalakte zu erweitern. In diesem Treffen m\n öchten wir von unseren Workshop-Teilnehmern Inputs einholen\\, welche Kri\n tierien sie an einer funktionierenden Personalakte stellen. \nURL:https://www.empfehlungsbund.de/events/44\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, Berlin \n und München\nORGANIZER;CN=mgm technology partners GmbH / Empfehlungsbund.de:https://ww\n w.empfehlungsbund.de/events/44\nATTACH:https://www.empfehlungsbund.de/events/44\nLOCATION:mgm technology partners GmbH\\, Frankfurter Ring 105a\\, 80807 Mün\n chen\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eInformation: Unsere V\n eranstaltung in Berlin wird aufgrund der grassierenden Grippewelle in Be\n rlin nicht\u0026nbsp; zum geplanten Termin\u003c/strong\u003e \u003cstrong\u003estattfinden. Weit\n ere Informationen dazu erhalten Sie telefonisch unter 0351/28792370 bzw.\n  via Mail unter info@pludoni.de.\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eMit unseren regionalen \n Community Workshops des Empfehlungsbundes bieten wir speziell für Person\n alexperten und Führungskräfte eine Plattform zum persönlichen Austausch \n zu Fragen der Personalgewinnung. Hier stellen wir unseren Mitgliedern di\n e neuesten Entwicklungen des Empfehlungsbundes und seinen Empfehlungscom\n munitys vor. Mithilfe des Feedbacks unserer Mitglieder vor Ort treiben w\n ir unser Konzept der Fachkräftesuche in der Gemeinschaft weiter voran.\u003cb\n r\u003e\u003cbr\u003eDie Agenda unseres Januar-Treffens beinhaltet, neben der Ankündigu\n ng zum Gehaltsbenchmarks 2020 und den technischen Updates, zwei besonder\n e Fachvorträge. Einerseits erläutern wir Ihnen die Methoden, wie Gehalts\n benchmarks erhoben werden und was es hierbei zu beachten gilt. In unsere\n m zweiten Vortrag sprechen wir über KPIs im Recruiting. Hier wollen wir \n Ihnen Einblicke liefern, wie diese sinnvoll ermittelt werden und welche \n Aussagekraft hinter weitläufig bekannten KPIs wirklich steckt. \u003cbr\u003e\u003cbr\u003eD\n ie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freisch\n altung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://w\n ww.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende N\n etzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschl\n and.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eAktuelle Kennzahlen zum Empfehlungsbund und technische\n  Updates\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eNeuigkeiten des Empfehlungsbundes - \n Information zu technischen Entwicklungen und Community Updates in Ihrem \n EB-Profil Dashboard\u003c/li\u003e\u003cli\u003eUnsere Vision Jobwert-Reverse -\u0026nbsp; Gehält\n er für ein spezifisches Berufsprofil gezielt abrufen\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c\n /div\u003e\u003ch1\u003eAnkündigung: Start des Gehaltsbenchmarks 2020 mit Jobwert.info\u003c\n /h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWährend der jährlichen Datenerhebungsphase vo\n n 1. Januar bis 31. März können Sie die Gehälter und Benefit-Leistungen \n Ihres Unternehmens einreichen. Der Benchmark aller teilnehmenden Unterne\n hmen liefert Ihnen einen aktuellen und exakten Gehalts- und Benefitvergl\n eich auf regionalem Niveau.\u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortra\n g: Kennzahlen von Recruitingkanälen sinnvoll interpretieren\u003c/h1\u003e\u003cdiv\u003e\u003cbr\n \u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir bekommen immer häufiger zu hören, Angebote wie Jobbör\n sen, E-Recruiting-Lösungen oder Recruitingveranstaltungen seien Recruiti\n ngkanäle. Und die Leistung dieser Kanäle ließe sich anhand von Performan\n ce-Indikatoren, wie Klickzahlen und Nutzerzahlen messen. Diese Sicht ist\n  falsch. Wir werden ihnen in unserem Fachvortrag erläutern, aus welchen \n Elementen sich ein Recruitingkanal zusammensetzt und welche Indikatoren \n benötigt werden, um eine qualifiziertes Urteil über die Leistung eines R\n ecruitingkanals zu treffen.\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eFachvortrag: Geh\n älter vergleichen - Methodik und Praxis\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eWir g\n eben Ihnen Einblicke in die Erstellung eines Gehaltsvergleiches.\u0026nbsp; H\n ier werden wir Ihnen kurz die nötigen Berechnungsverfahren vorstellen un\n d auf die Schwierigkeiten bei der Datenerhebung eingehen. Außerdem wolle\n n wir die üblichen Fehler, die beim Vergleichen von Gehältern auftauchen\n  können, genauer erläutern. \u0026nbsp;\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eAnforderu\n ngsworkshop: Digitale Personalakte\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eDie Feedba\n cks unserer EBMS-Nutzer brachten uns auf die Idee das Bewerbermanagement\n system um die Funktion einer digitalen Personalakte zu erweitern. In die\n sem Treffen möchten wir von unseren Workshop-Teilnehmern Inputs einholen\n , welche Kritierien sie an einer funktionierenden Personalakte stellen.\u0026\n nbsp;\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210011,"Bezeichnung":"mgm technology partners GmbH","Kommentar":"Kontakte zu Internetzeitungen: Leipziger Internet Zeitung, Herr Ralf Julke, Herr Robert Dobschütz, r.dobschuetz@l-iz.de !!! Umfirmierung: der Software \u0026 Firends GmbH zu mgm technology partners GmbH !!!","Typ":10,"Nutzername":"mgm-tp","Website":"https://career.mgm-tp.com/de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:34.000+02:00"}}]},{"id":43,"name":"ebcw_201909","hashtag":"ebcw","title":"Empfehlungsbund Community Workshop in Dresden, Leipzig und Berlin","teaser":"Freuen Sie sich in unserem September-Workshop auf die Ergebnisse unserer Coworkr Studie 2019! Auf Basis unserer Umfrage im Mai erklären wir Ihnen, welche Voraussetzungen Arbeitgeber schaffen müssten, damit Mitarbeiter an automatisierten Mitarbeiterempfehlungsprogrammen in Social Media teilnehmen. Außerdem zeigen wir Ihnen, wie Sie die Arbeitgeberbewertungen Ihrer favorisierten Bewertungsplattformen in einen einzigen Meta-Score bündeln können. Darüber hinaus stellen wir ihnen unsere kostenlose Personalmarketing Wissensplattform EB-Academy in neuem Design und mit neuem Inhalten im Detail vor. Anschließend werden wir gemeinsam mit Ihnen in unserem Anforderungsworkshop in co-innovativer Manier die Grundzüge einer neuen mobilen App für Mitarbeiterempfehlungen besprechen.   ","teaser_hrfilter":"Der Empfehlungsbund Community Workshop im September: So bündeln Sie die Arbeitgebewertungen Ihrer favorisierten Bewertungsplattformen in einen einzigen Meta-Score. Außerdem: Unternehmens-Botschafter für Ihr Recruiting aktivieren - was sollten Sie beachten? Diese und weitere spannende Themen warten auf dem EBCW - Jetzt anmelden!    ","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eWie lassen sich Personalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mit Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinschaft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFreuen Sie sich in unserem September-Workshop auf die Ergebnisse unserer Coworkr Studie 2019! Auf Basis unserer Umfrage im Mai erklären wir Ihnen, welche Voraussetzungen Arbeitgeber schaffen müssten, damit Mitarbeiter an automatisierten Mitarbeiterempfehlungsprogrammen in Social Media teilnehmen. Außerdem zeigen wir Ihnen, wie Sie die Arbeitgeberbewertungen Ihrer favorisierten Bewertungsplattformen in einen einzigen Meta-Score bündeln können. Darüber hinaus stellen wir ihnen unsere kostenlose Personalmarketing Wissensplattform EB-Academy in neuem Design und mit neuem Inhalten im Detail vor. Anschließend werden wir gemeinsam mit Ihnen in unserem Anforderungsworkshop in co-innovativer Manier die Grundzüge einer neuen mobilen App für Mitarbeiterempfehlungen besprechen.\u0026nbsp; \u0026nbsp;\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e","agenda":"\u003ch1\u003eFaire-Karriere: Neues Feature - Arbeitgeberimage-Metascore\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eArbeitgeberbewertungen haben Konjunktur. Services wie Glassdoor, Kununu und nicht zuletzt unser Faire-Karriere geben potentiellen neuen Mitarbeitern einen Vorausblick, ob die Arbeitswelt eines Unternehmens den individuellen Maßstäben entspricht. Allerdings wächst die Summe an Bewertungsplattformen stetig an und damit die verstreuen sich die Bewertungen auf verschiedenste Anbieter. Wäre es nicht schön, wenn Arbeitgeber eine übersichtliche Zusammenfassung aller Bewertungsplattformen auf ihrer Karriereseite präsentieren könnten? Solch ein Metascoring haben wir für Sie entwickelt.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eCoworkr-Studie: \"Automatisierte Mitarbeiterempfehlung in Social Media - Potenziale und Barrieren\"\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWährend des zweiten Quartals 2019 baten wir unseren Ansprechpartnern einen Umfragebogen an ihre Mitarbeiter zu senden. Die Umfrage diente dem Zweck potentielle Unternehmens-Botschafter zu identifizieren, die sich bereit erklären Stellenangebote ihres Unternehmens automatisiert innerhalb ihrer sozialen Netzwerke zu teilen. Wir bedanken uns hierbei für die rege Teilnahme! Auf Basis der Menge an Datensätze können wir Ihnen detailliertere Studienergebnisse präsentieren. Schwerpunkte der Studie sind: Welche Voraussetzungen muss ein Arbeitgeber schaffen, damit Mitarbeiter an automatisierten Mitarbeiterempfehlungsprogrammen in Social Media teilnehmen? Welche Barrieren haben Mitarbeiter, solche Services nicht zu nutzen?\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eEB-Academy: v2.0 unseres Personalmarketing-Wissensreservoirs \u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eMit EB-Academy verfolgen wir die Vision den Weg unserer Mitglieder zur Exzellenz in der Personalgewinnung stetig voranzubringen. Neben unseren regelmäßigen und persönlichen Beratungsgesprächen vor Ort stellen wir unser Wissen in Sachen Personalmarketing, sowie unser Know-How im erfolgsversprechenden Gebrauch unserer Services auch digital in Form von Leitfäden, Graphiken und Beratungsvideos für unsere Mitglieder zur Verfügung. Seit seiner Einführung 2018 hat die EB-Academy an Inhalten zugenommen und große Designverbesserungen erfahren.\u0026nbsp; \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003c/div\u003e\u003ch1\u003eAnforderungsworkshop: Mitarbeiter-wirbt-Mitarbeiter mobile App\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir sehen die Zukunft für elektronische Mitarbeiter-werben-Mitarbeiter Programme im mobilen Bereich. Unsere Vision sieht die Entwicklung einer App vor, mit deren Hilfe Mitarbeiter Stellenangebote, Employer Branding-Inhalte, sowie Employee Branding-Inhalte in ihren sozialen Netzwerken teilen können, die sowohl vom Unternehmen als auch von der Kollegenschaft erstellt und bereitgestellt wird. Aber dies ist nur eine Vision. Welche realen Anforderungen solch eine App erfüllen muss, um für Arbeitgeber als auch für Mitarbeiter ein sinnvolles Werkzeug zur Personalgewinnung und -bindung zu sein, das möchten wir mit Ihnen in unserem Anforderungsworkshop diskutieren. \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2019-09-24T15:00:19.000+02:00","finish":"2019-09-25T18:00:52.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/43/wide_RIMG0765.JPG","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/43/wide_EBCW_Banner_HRfilter.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/43/Community_Workshop_Blog.jpg","register_url":"https://www.empfehlungsbund.de/events/43/register","show_url":"https://www.empfehlungsbund.de/events/43","events":[{"id":103,"display_line":"24.09.2019 - 15 bis 18:00 Uhr Dresden - Empfehlungsbund Community Workshop in Dresden - Gastgeber: TraceTronic GmbH","subtitle":"Empfehlungsbund Community Workshop in Dresden","city":"Dresden","start":"2019-09-24T15:00:19.000+02:00","finish":"2019-09-24T18:00:20.000+02:00","address":"Stuttgarter Straße 3, 01189 Dresden","event_host":"TraceTronic GmbH","lat":51.0089,"lon":13.6932,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190924T180020\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190924T150019\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen Sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nFreuen Sie\n  sich in unserem September-Workshop auf die Ergebnisse unserer Coworkr S\n tudie 2019! Auf Basis unserer Umfrage im Mai erklären wir Ihnen\\, welche\n  Voraussetzungen Arbeitgeber schaffen müssten\\, damit Mitarbeiter an aut\n omatisierten Mitarbeiterempfehlungsprogrammen in Social Media teilnehmen\n . Außerdem zeigen wir Ihnen\\, wie Sie die Arbeitgeberbewertungen Ihrer f\n avorisierten Bewertungsplattformen in einen einzigen Meta-Score bündeln \n können. Darüber hinaus stellen wir ihnen unsere kostenlose Personalmarke\n ting Wissensplattform EB-Academy in neuem Design und mit neuem Inhalten \n im Detail vor. Anschließend werden wir gemeinsam mit Ihnen in unserem An\n forderungsworkshop in co-innovativer Manier die Grundzüge einer neuen mo\n bilen App für Mitarbeiterempfehlungen besprechen.   \\n\\nDie Teilnahme is\n t kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus orga\n nisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\\n\\nFaire-Karriere: Neues Feature - Arbeitgeberimage-Metascore\\nA\n rbeitgeberbewertungen haben Konjunktur. Services wie Glassdoor\\, Kununu \n und nicht zuletzt unser Faire-Karriere geben potentiellen neuen Mitarbei\n tern einen Vorausblick\\, ob die Arbeitswelt eines Unternehmens den indiv\n iduellen Maßstäben entspricht. Allerdings wächst die Summe an Bewertungs\n plattformen stetig an und damit die verstreuen sich die Bewertungen auf \n verschiedenste Anbieter. Wäre es nicht schön\\, wenn Arbeitgeber eine übe\n rsichtliche Zusammenfassung aller Bewertungsplattformen auf ihrer Karrie\n reseite präsentieren könnten? Solch ein Metascoring haben wir für Sie en\n twickelt.\\n\\n\\n\\nCoworkr-Studie: \"Automatisierte Mitarbeiterempfehlung i\n n Social Media - Potenziale und Barrieren\"\\nWährend des zweiten Quartals\n  2019 baten wir unseren Ansprechpartnern einen Umfragebogen an ihre Mita\n rbeiter zu senden. Die Umfrage diente dem Zweck potentielle Unternehmens\n -Botschafter zu identifizieren\\, die sich bereit erklären Stellenangebot\n e ihres Unternehmens automatisiert innerhalb ihrer sozialen Netzwerke zu\n  teilen. Wir bedanken uns hierbei für die rege Teilnahme! Auf Basis der \n Menge an Datensätze können wir Ihnen detailliertere Studienergebnisse pr\n äsentieren. Schwerpunkte der Studie sind: Welche Voraussetzungen muss ei\n n Arbeitgeber schaffen\\, damit Mitarbeiter an automatisierten Mitarbeite\n rempfehlungsprogrammen in Social Media teilnehmen? Welche Barrieren habe\n n Mitarbeiter\\, solche Services nicht zu nutzen? \\n\\n\\nEB-Academy: v2.0 \n unseres Personalmarketing-Wissensreservoirs  \\n\\nMit EB-Academy verfolge\n n wir die Vision den Weg unserer Mitglieder zur Exzellenz in der Persona\n lgewinnung stetig voranzubringen. Neben unseren regelmäßigen und persönl\n ichen Beratungsgesprächen vor Ort stellen wir unser Wissen in Sachen Per\n sonalmarketing\\, sowie unser Know-How im erfolgsversprechenden Gebrauch \n unserer Services auch digital in Form von Leitfäden\\, Graphiken und Bera\n tungsvideos für unsere Mitglieder zur Verfügung. Seit seiner Einführung \n 2018 hat die EB-Academy an Inhalten zugenommen und große Designverbesser\n ungen erfahren.   \\n\\n \\nAnforderungsworkshop: Mitarbeiter-wirbt-Mitarbe\n iter mobile App \\nWir sehen die Zukunft für elektronische Mitarbeiter-we\n rben-Mitarbeiter Programme im mobilen Bereich. Unsere Vision sieht die E\n ntwicklung einer App vor\\, mit deren Hilfe Mitarbeiter Stellenangebote\\,\n  Employer Branding-Inhalte\\, sowie Employee Branding-Inhalte in ihren so\n zialen Netzwerken teilen können\\, die sowohl vom Unternehmen als auch vo\n n der Kollegenschaft erstellt und bereitgestellt wird. Aber dies ist nur\n  eine Vision. Welche realen Anforderungen solch eine App erfüllen muss\\,\n  um für Arbeitgeber als auch für Mitarbeiter ein sinnvolles Werkzeug zur\n  Personalgewinnung und -bindung zu sein\\, das möchten wir mit Ihnen in u\n nserem Anforderungsworkshop diskutieren.  \\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/43\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig und Berli\n n\nORGANIZER;CN=TraceTronic GmbH / Empfehlungsbund.de:https://www.empfehlung\n sbund.de/events/43\nATTACH:https://www.empfehlungsbund.de/events/43\nLOCATION:TraceTronic GmbH\\, Stuttgarter Straße 3\\, 01189 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eWie lassen sich Personalgewin\n nungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo\n  und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech über\n haupt einen Nutzen für die Personalarbeit? In den Community Workshops de\n s Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte re\n gionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgve\n rsprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mi\n t Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die \n Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinsch\n aft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFreuen Sie sich in unserem September-W\n orkshop auf die Ergebnisse unserer Coworkr Studie 2019! Auf Basis unsere\n r Umfrage im Mai erklären wir Ihnen, welche Voraussetzungen Arbeitgeber \n schaffen müssten, damit Mitarbeiter an automatisierten Mitarbeiterempfeh\n lungsprogrammen in Social Media teilnehmen. Außerdem zeigen wir Ihnen, w\n ie Sie die Arbeitgeberbewertungen Ihrer favorisierten Bewertungsplattfor\n men in einen einzigen Meta-Score bündeln können. Darüber hinaus stellen \n wir ihnen unsere kostenlose Personalmarketing Wissensplattform EB-Academ\n y in neuem Design und mit neuem Inhalten im Detail vor. Anschließend wer\n den wir gemeinsam mit Ihnen in unserem Anforderungsworkshop in co-innova\n tiver Manier die Grundzüge einer neuen mobilen App für Mitarbeiterempfeh\n lungen besprechen.\u0026nbsp; \u0026nbsp;\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Teilnahme ist kosten\n frei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatori\n schen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/m\n ediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten\n  Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eFaire\n -Karriere: Neues Feature - Arbeitgeberimage-Metascore\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eArbei\n tgeberbewertungen haben Konjunktur. Services wie Glassdoor, Kununu und n\n icht zuletzt unser Faire-Karriere geben potentiellen neuen Mitarbeitern \n einen Vorausblick, ob die Arbeitswelt eines Unternehmens den individuell\n en Maßstäben entspricht. Allerdings wächst die Summe an Bewertungsplattf\n ormen stetig an und damit die verstreuen sich die Bewertungen auf versch\n iedenste Anbieter. Wäre es nicht schön, wenn Arbeitgeber eine übersichtl\n iche Zusammenfassung aller Bewertungsplattformen auf ihrer Karriereseite\n  präsentieren könnten? Solch ein Metascoring haben wir für Sie entwickel\n t.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eCoworkr-Studie: \"Automatisierte Mitarbeiterempfe\n hlung in Social Media - Potenziale und Barrieren\"\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWährend d\n es zweiten Quartals 2019 baten wir unseren Ansprechpartnern einen Umfrag\n ebogen an ihre Mitarbeiter zu senden. Die Umfrage diente dem Zweck poten\n tielle Unternehmens-Botschafter zu identifizieren, die sich bereit erklä\n ren Stellenangebote ihres Unternehmens automatisiert innerhalb ihrer soz\n ialen Netzwerke zu teilen. Wir bedanken uns hierbei für die rege Teilnah\n me! Auf Basis der Menge an Datensätze können wir Ihnen detailliertere St\n udienergebnisse präsentieren. Schwerpunkte der Studie sind: Welche Vorau\n ssetzungen muss ein Arbeitgeber schaffen, damit Mitarbeiter an automatis\n ierten Mitarbeiterempfehlungsprogrammen in Social Media teilnehmen? Welc\n he Barrieren haben Mitarbeiter, solche Services nicht zu nutzen?\u0026nbsp;\u003cb\n r\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eEB-Academy: v2.0 unseres Personalmarketing-Wissensreserv\n oirs \u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eMit EB-Academy verfolgen wir die Vis\n ion den Weg unserer Mitglieder zur Exzellenz in der Personalgewinnung st\n etig voranzubringen. Neben unseren regelmäßigen und persönlichen Beratun\n gsgesprächen vor Ort stellen wir unser Wissen in Sachen Personalmarketin\n g, sowie unser Know-How im erfolgsversprechenden Gebrauch unserer Servic\n es auch digital in Form von Leitfäden, Graphiken und Beratungsvideos für\n  unsere Mitglieder zur Verfügung. Seit seiner Einführung 2018 hat die EB\n -Academy an Inhalten zugenommen und große Designverbesserungen erfahren.\n \u0026nbsp; \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003c/div\u003e\u003ch1\u003eAnforderungsworkshop: Mitarb\n eiter-wirbt-Mitarbeiter mobile App\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir sehen die Zuku\n nft für elektronische Mitarbeiter-werben-Mitarbeiter Programme im mobile\n n Bereich. Unsere Vision sieht die Entwicklung einer App vor, mit deren \n Hilfe Mitarbeiter Stellenangebote, Employer Branding-Inhalte, sowie Empl\n oyee Branding-Inhalte in ihren sozialen Netzwerken teilen können, die so\n wohl vom Unternehmen als auch von der Kollegenschaft erstellt und bereit\n gestellt wird. Aber dies ist nur eine Vision. Welche realen Anforderunge\n n solch eine App erfüllen muss, um für Arbeitgeber als auch für Mitarbei\n ter ein sinnvolles Werkzeug zur Personalgewinnung und -bindung zu sein, \n das möchten wir mit Ihnen in unserem Anforderungsworkshop diskutieren. \u0026\n nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210073,"Bezeichnung":"TraceTronic GmbH","Kommentar":"Haben keinen eigenen Münchner Standort, sind bei BMW, deshalb hier nicht erfasst.","Typ":10,"Nutzername":"tracetronic","Website":"http://www.tracetronic.de/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:36.000+02:00"}},{"id":105,"display_line":"25.09.2019 - 15 bis 18:00 Uhr Leipzig - Empfehlungsbund Community Workshop in Leipzig - Gastgeber: ALVARA Cash Management Group AG","subtitle":"Empfehlungsbund Community Workshop in Leipzig","city":"Leipzig","start":"2019-09-25T15:00:52.000+02:00","finish":"2019-09-25T18:00:52.000+02:00","address":"Querstr. 18, 04103 Leipzig","event_host":"ALVARA Cash Management Group AG","lat":51.3406,"lon":12.3858,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190925T180052\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190925T150052\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen Sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nFreuen Sie\n  sich in unserem September-Workshop auf die Ergebnisse unserer Coworkr S\n tudie 2019! Auf Basis unserer Umfrage im Mai erklären wir Ihnen\\, welche\n  Voraussetzungen Arbeitgeber schaffen müssten\\, damit Mitarbeiter an aut\n omatisierten Mitarbeiterempfehlungsprogrammen in Social Media teilnehmen\n . Außerdem zeigen wir Ihnen\\, wie Sie die Arbeitgeberbewertungen Ihrer f\n avorisierten Bewertungsplattformen in einen einzigen Meta-Score bündeln \n können. Darüber hinaus stellen wir ihnen unsere kostenlose Personalmarke\n ting Wissensplattform EB-Academy in neuem Design und mit neuem Inhalten \n im Detail vor. Anschließend werden wir gemeinsam mit Ihnen in unserem An\n forderungsworkshop in co-innovativer Manier die Grundzüge einer neuen mo\n bilen App für Mitarbeiterempfehlungen besprechen.   \\n\\nDie Teilnahme is\n t kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus orga\n nisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\\n\\nFaire-Karriere: Neues Feature - Arbeitgeberimage-Metascore\\nA\n rbeitgeberbewertungen haben Konjunktur. Services wie Glassdoor\\, Kununu \n und nicht zuletzt unser Faire-Karriere geben potentiellen neuen Mitarbei\n tern einen Vorausblick\\, ob die Arbeitswelt eines Unternehmens den indiv\n iduellen Maßstäben entspricht. Allerdings wächst die Summe an Bewertungs\n plattformen stetig an und damit die verstreuen sich die Bewertungen auf \n verschiedenste Anbieter. Wäre es nicht schön\\, wenn Arbeitgeber eine übe\n rsichtliche Zusammenfassung aller Bewertungsplattformen auf ihrer Karrie\n reseite präsentieren könnten? Solch ein Metascoring haben wir für Sie en\n twickelt.\\n\\n\\n\\nCoworkr-Studie: \"Automatisierte Mitarbeiterempfehlung i\n n Social Media - Potenziale und Barrieren\"\\nWährend des zweiten Quartals\n  2019 baten wir unseren Ansprechpartnern einen Umfragebogen an ihre Mita\n rbeiter zu senden. Die Umfrage diente dem Zweck potentielle Unternehmens\n -Botschafter zu identifizieren\\, die sich bereit erklären Stellenangebot\n e ihres Unternehmens automatisiert innerhalb ihrer sozialen Netzwerke zu\n  teilen. Wir bedanken uns hierbei für die rege Teilnahme! Auf Basis der \n Menge an Datensätze können wir Ihnen detailliertere Studienergebnisse pr\n äsentieren. Schwerpunkte der Studie sind: Welche Voraussetzungen muss ei\n n Arbeitgeber schaffen\\, damit Mitarbeiter an automatisierten Mitarbeite\n rempfehlungsprogrammen in Social Media teilnehmen? Welche Barrieren habe\n n Mitarbeiter\\, solche Services nicht zu nutzen? \\n\\n\\nEB-Academy: v2.0 \n unseres Personalmarketing-Wissensreservoirs  \\n\\nMit EB-Academy verfolge\n n wir die Vision den Weg unserer Mitglieder zur Exzellenz in der Persona\n lgewinnung stetig voranzubringen. Neben unseren regelmäßigen und persönl\n ichen Beratungsgesprächen vor Ort stellen wir unser Wissen in Sachen Per\n sonalmarketing\\, sowie unser Know-How im erfolgsversprechenden Gebrauch \n unserer Services auch digital in Form von Leitfäden\\, Graphiken und Bera\n tungsvideos für unsere Mitglieder zur Verfügung. Seit seiner Einführung \n 2018 hat die EB-Academy an Inhalten zugenommen und große Designverbesser\n ungen erfahren.   \\n\\n \\nAnforderungsworkshop: Mitarbeiter-wirbt-Mitarbe\n iter mobile App \\nWir sehen die Zukunft für elektronische Mitarbeiter-we\n rben-Mitarbeiter Programme im mobilen Bereich. Unsere Vision sieht die E\n ntwicklung einer App vor\\, mit deren Hilfe Mitarbeiter Stellenangebote\\,\n  Employer Branding-Inhalte\\, sowie Employee Branding-Inhalte in ihren so\n zialen Netzwerken teilen können\\, die sowohl vom Unternehmen als auch vo\n n der Kollegenschaft erstellt und bereitgestellt wird. Aber dies ist nur\n  eine Vision. Welche realen Anforderungen solch eine App erfüllen muss\\,\n  um für Arbeitgeber als auch für Mitarbeiter ein sinnvolles Werkzeug zur\n  Personalgewinnung und -bindung zu sein\\, das möchten wir mit Ihnen in u\n nserem Anforderungsworkshop diskutieren.  \\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/43\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig und Berli\n n\nORGANIZER;CN=ALVARA Cash Management Group AG / Empfehlungsbund.de:https:/\n /www.empfehlungsbund.de/events/43\nATTACH:https://www.empfehlungsbund.de/events/43\nLOCATION:ALVARA Cash Management Group AG\\, Querstr. 18\\, 04103 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eWie lassen sich Personalgewin\n nungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo\n  und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech über\n haupt einen Nutzen für die Personalarbeit? In den Community Workshops de\n s Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte re\n gionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgve\n rsprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mi\n t Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die \n Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinsch\n aft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFreuen Sie sich in unserem September-W\n orkshop auf die Ergebnisse unserer Coworkr Studie 2019! Auf Basis unsere\n r Umfrage im Mai erklären wir Ihnen, welche Voraussetzungen Arbeitgeber \n schaffen müssten, damit Mitarbeiter an automatisierten Mitarbeiterempfeh\n lungsprogrammen in Social Media teilnehmen. Außerdem zeigen wir Ihnen, w\n ie Sie die Arbeitgeberbewertungen Ihrer favorisierten Bewertungsplattfor\n men in einen einzigen Meta-Score bündeln können. Darüber hinaus stellen \n wir ihnen unsere kostenlose Personalmarketing Wissensplattform EB-Academ\n y in neuem Design und mit neuem Inhalten im Detail vor. Anschließend wer\n den wir gemeinsam mit Ihnen in unserem Anforderungsworkshop in co-innova\n tiver Manier die Grundzüge einer neuen mobilen App für Mitarbeiterempfeh\n lungen besprechen.\u0026nbsp; \u0026nbsp;\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Teilnahme ist kosten\n frei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatori\n schen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/m\n ediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten\n  Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eFaire\n -Karriere: Neues Feature - Arbeitgeberimage-Metascore\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eArbei\n tgeberbewertungen haben Konjunktur. Services wie Glassdoor, Kununu und n\n icht zuletzt unser Faire-Karriere geben potentiellen neuen Mitarbeitern \n einen Vorausblick, ob die Arbeitswelt eines Unternehmens den individuell\n en Maßstäben entspricht. Allerdings wächst die Summe an Bewertungsplattf\n ormen stetig an und damit die verstreuen sich die Bewertungen auf versch\n iedenste Anbieter. Wäre es nicht schön, wenn Arbeitgeber eine übersichtl\n iche Zusammenfassung aller Bewertungsplattformen auf ihrer Karriereseite\n  präsentieren könnten? Solch ein Metascoring haben wir für Sie entwickel\n t.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eCoworkr-Studie: \"Automatisierte Mitarbeiterempfe\n hlung in Social Media - Potenziale und Barrieren\"\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWährend d\n es zweiten Quartals 2019 baten wir unseren Ansprechpartnern einen Umfrag\n ebogen an ihre Mitarbeiter zu senden. Die Umfrage diente dem Zweck poten\n tielle Unternehmens-Botschafter zu identifizieren, die sich bereit erklä\n ren Stellenangebote ihres Unternehmens automatisiert innerhalb ihrer soz\n ialen Netzwerke zu teilen. Wir bedanken uns hierbei für die rege Teilnah\n me! Auf Basis der Menge an Datensätze können wir Ihnen detailliertere St\n udienergebnisse präsentieren. Schwerpunkte der Studie sind: Welche Vorau\n ssetzungen muss ein Arbeitgeber schaffen, damit Mitarbeiter an automatis\n ierten Mitarbeiterempfehlungsprogrammen in Social Media teilnehmen? Welc\n he Barrieren haben Mitarbeiter, solche Services nicht zu nutzen?\u0026nbsp;\u003cb\n r\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eEB-Academy: v2.0 unseres Personalmarketing-Wissensreserv\n oirs \u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eMit EB-Academy verfolgen wir die Vis\n ion den Weg unserer Mitglieder zur Exzellenz in der Personalgewinnung st\n etig voranzubringen. Neben unseren regelmäßigen und persönlichen Beratun\n gsgesprächen vor Ort stellen wir unser Wissen in Sachen Personalmarketin\n g, sowie unser Know-How im erfolgsversprechenden Gebrauch unserer Servic\n es auch digital in Form von Leitfäden, Graphiken und Beratungsvideos für\n  unsere Mitglieder zur Verfügung. Seit seiner Einführung 2018 hat die EB\n -Academy an Inhalten zugenommen und große Designverbesserungen erfahren.\n \u0026nbsp; \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003c/div\u003e\u003ch1\u003eAnforderungsworkshop: Mitarb\n eiter-wirbt-Mitarbeiter mobile App\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir sehen die Zuku\n nft für elektronische Mitarbeiter-werben-Mitarbeiter Programme im mobile\n n Bereich. Unsere Vision sieht die Entwicklung einer App vor, mit deren \n Hilfe Mitarbeiter Stellenangebote, Employer Branding-Inhalte, sowie Empl\n oyee Branding-Inhalte in ihren sozialen Netzwerken teilen können, die so\n wohl vom Unternehmen als auch von der Kollegenschaft erstellt und bereit\n gestellt wird. Aber dies ist nur eine Vision. Welche realen Anforderunge\n n solch eine App erfüllen muss, um für Arbeitgeber als auch für Mitarbei\n ter ein sinnvolles Werkzeug zur Personalgewinnung und -bindung zu sein, \n das möchten wir mit Ihnen in unserem Anforderungsworkshop diskutieren. \u0026\n nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9212263,"Bezeichnung":"ALVARA Cash Management Group AG","Kommentar":"ab 11_2020: jkl","Typ":10,"Nutzername":"alvara","Website":"https://www.alvara.de/jobs-praktika.html","created_at":"2015-08-05T15:03:26.000+02:00","updated_at":"2021-06-18T10:59:15.000+02:00"}},{"id":106,"display_line":"25.09.2019 - 15 bis 18:00 Uhr Berlin - Empfehlungsbund Community Workshop in Berlin - Gastgeber: Offerista Group GmbH","subtitle":"Empfehlungsbund Community Workshop in Berlin","city":"Berlin","start":"2019-09-25T15:00:51.000+02:00","finish":"2019-09-25T18:00:51.000+02:00","address":"Waldemarstraße 33a, 10999 Berlin","event_host":"Offerista Group GmbH","lat":52.5038,"lon":13.4194,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190925T180051\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190925T150051\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen Sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nFreuen Sie\n  sich in unserem September-Workshop auf die Ergebnisse unserer Coworkr S\n tudie 2019! Auf Basis unserer Umfrage im Mai erklären wir Ihnen\\, welche\n  Voraussetzungen Arbeitgeber schaffen müssten\\, damit Mitarbeiter an aut\n omatisierten Mitarbeiterempfehlungsprogrammen in Social Media teilnehmen\n . Außerdem zeigen wir Ihnen\\, wie Sie die Arbeitgeberbewertungen Ihrer f\n avorisierten Bewertungsplattformen in einen einzigen Meta-Score bündeln \n können. Darüber hinaus stellen wir ihnen unsere kostenlose Personalmarke\n ting Wissensplattform EB-Academy in neuem Design und mit neuem Inhalten \n im Detail vor. Anschließend werden wir gemeinsam mit Ihnen in unserem An\n forderungsworkshop in co-innovativer Manier die Grundzüge einer neuen mo\n bilen App für Mitarbeiterempfehlungen besprechen.   \\n\\nDie Teilnahme is\n t kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus orga\n nisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\\n\\nFaire-Karriere: Neues Feature - Arbeitgeberimage-Metascore\\nA\n rbeitgeberbewertungen haben Konjunktur. Services wie Glassdoor\\, Kununu \n und nicht zuletzt unser Faire-Karriere geben potentiellen neuen Mitarbei\n tern einen Vorausblick\\, ob die Arbeitswelt eines Unternehmens den indiv\n iduellen Maßstäben entspricht. Allerdings wächst die Summe an Bewertungs\n plattformen stetig an und damit die verstreuen sich die Bewertungen auf \n verschiedenste Anbieter. Wäre es nicht schön\\, wenn Arbeitgeber eine übe\n rsichtliche Zusammenfassung aller Bewertungsplattformen auf ihrer Karrie\n reseite präsentieren könnten? Solch ein Metascoring haben wir für Sie en\n twickelt.\\n\\n\\n\\nCoworkr-Studie: \"Automatisierte Mitarbeiterempfehlung i\n n Social Media - Potenziale und Barrieren\"\\nWährend des zweiten Quartals\n  2019 baten wir unseren Ansprechpartnern einen Umfragebogen an ihre Mita\n rbeiter zu senden. Die Umfrage diente dem Zweck potentielle Unternehmens\n -Botschafter zu identifizieren\\, die sich bereit erklären Stellenangebot\n e ihres Unternehmens automatisiert innerhalb ihrer sozialen Netzwerke zu\n  teilen. Wir bedanken uns hierbei für die rege Teilnahme! Auf Basis der \n Menge an Datensätze können wir Ihnen detailliertere Studienergebnisse pr\n äsentieren. Schwerpunkte der Studie sind: Welche Voraussetzungen muss ei\n n Arbeitgeber schaffen\\, damit Mitarbeiter an automatisierten Mitarbeite\n rempfehlungsprogrammen in Social Media teilnehmen? Welche Barrieren habe\n n Mitarbeiter\\, solche Services nicht zu nutzen? \\n\\n\\nEB-Academy: v2.0 \n unseres Personalmarketing-Wissensreservoirs  \\n\\nMit EB-Academy verfolge\n n wir die Vision den Weg unserer Mitglieder zur Exzellenz in der Persona\n lgewinnung stetig voranzubringen. Neben unseren regelmäßigen und persönl\n ichen Beratungsgesprächen vor Ort stellen wir unser Wissen in Sachen Per\n sonalmarketing\\, sowie unser Know-How im erfolgsversprechenden Gebrauch \n unserer Services auch digital in Form von Leitfäden\\, Graphiken und Bera\n tungsvideos für unsere Mitglieder zur Verfügung. Seit seiner Einführung \n 2018 hat die EB-Academy an Inhalten zugenommen und große Designverbesser\n ungen erfahren.   \\n\\n \\nAnforderungsworkshop: Mitarbeiter-wirbt-Mitarbe\n iter mobile App \\nWir sehen die Zukunft für elektronische Mitarbeiter-we\n rben-Mitarbeiter Programme im mobilen Bereich. Unsere Vision sieht die E\n ntwicklung einer App vor\\, mit deren Hilfe Mitarbeiter Stellenangebote\\,\n  Employer Branding-Inhalte\\, sowie Employee Branding-Inhalte in ihren so\n zialen Netzwerken teilen können\\, die sowohl vom Unternehmen als auch vo\n n der Kollegenschaft erstellt und bereitgestellt wird. Aber dies ist nur\n  eine Vision. Welche realen Anforderungen solch eine App erfüllen muss\\,\n  um für Arbeitgeber als auch für Mitarbeiter ein sinnvolles Werkzeug zur\n  Personalgewinnung und -bindung zu sein\\, das möchten wir mit Ihnen in u\n nserem Anforderungsworkshop diskutieren.  \\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/43\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig und Berli\n n\nORGANIZER;CN=Offerista Group GmbH / Empfehlungsbund.de:https://www.empfeh\n lungsbund.de/events/43\nATTACH:https://www.empfehlungsbund.de/events/43\nLOCATION:Offerista Group GmbH\\, Waldemarstraße 33a\\, 10999 Berlin\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eWie lassen sich Personalgewin\n nungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo\n  und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech über\n haupt einen Nutzen für die Personalarbeit? In den Community Workshops de\n s Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte re\n gionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgve\n rsprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mi\n t Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die \n Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinsch\n aft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFreuen Sie sich in unserem September-W\n orkshop auf die Ergebnisse unserer Coworkr Studie 2019! Auf Basis unsere\n r Umfrage im Mai erklären wir Ihnen, welche Voraussetzungen Arbeitgeber \n schaffen müssten, damit Mitarbeiter an automatisierten Mitarbeiterempfeh\n lungsprogrammen in Social Media teilnehmen. Außerdem zeigen wir Ihnen, w\n ie Sie die Arbeitgeberbewertungen Ihrer favorisierten Bewertungsplattfor\n men in einen einzigen Meta-Score bündeln können. Darüber hinaus stellen \n wir ihnen unsere kostenlose Personalmarketing Wissensplattform EB-Academ\n y in neuem Design und mit neuem Inhalten im Detail vor. Anschließend wer\n den wir gemeinsam mit Ihnen in unserem Anforderungsworkshop in co-innova\n tiver Manier die Grundzüge einer neuen mobilen App für Mitarbeiterempfeh\n lungen besprechen.\u0026nbsp; \u0026nbsp;\u003c/strong\u003e\u003cbr\u003e\u003cbr\u003eDie Teilnahme ist kosten\n frei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatori\n schen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/m\n ediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten\n  Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eFaire\n -Karriere: Neues Feature - Arbeitgeberimage-Metascore\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eArbei\n tgeberbewertungen haben Konjunktur. Services wie Glassdoor, Kununu und n\n icht zuletzt unser Faire-Karriere geben potentiellen neuen Mitarbeitern \n einen Vorausblick, ob die Arbeitswelt eines Unternehmens den individuell\n en Maßstäben entspricht. Allerdings wächst die Summe an Bewertungsplattf\n ormen stetig an und damit die verstreuen sich die Bewertungen auf versch\n iedenste Anbieter. Wäre es nicht schön, wenn Arbeitgeber eine übersichtl\n iche Zusammenfassung aller Bewertungsplattformen auf ihrer Karriereseite\n  präsentieren könnten? Solch ein Metascoring haben wir für Sie entwickel\n t.\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eCoworkr-Studie: \"Automatisierte Mitarbeiterempfe\n hlung in Social Media - Potenziale und Barrieren\"\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWährend d\n es zweiten Quartals 2019 baten wir unseren Ansprechpartnern einen Umfrag\n ebogen an ihre Mitarbeiter zu senden. Die Umfrage diente dem Zweck poten\n tielle Unternehmens-Botschafter zu identifizieren, die sich bereit erklä\n ren Stellenangebote ihres Unternehmens automatisiert innerhalb ihrer soz\n ialen Netzwerke zu teilen. Wir bedanken uns hierbei für die rege Teilnah\n me! Auf Basis der Menge an Datensätze können wir Ihnen detailliertere St\n udienergebnisse präsentieren. Schwerpunkte der Studie sind: Welche Vorau\n ssetzungen muss ein Arbeitgeber schaffen, damit Mitarbeiter an automatis\n ierten Mitarbeiterempfehlungsprogrammen in Social Media teilnehmen? Welc\n he Barrieren haben Mitarbeiter, solche Services nicht zu nutzen?\u0026nbsp;\u003cb\n r\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eEB-Academy: v2.0 unseres Personalmarketing-Wissensreserv\n oirs \u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eMit EB-Academy verfolgen wir die Vis\n ion den Weg unserer Mitglieder zur Exzellenz in der Personalgewinnung st\n etig voranzubringen. Neben unseren regelmäßigen und persönlichen Beratun\n gsgesprächen vor Ort stellen wir unser Wissen in Sachen Personalmarketin\n g, sowie unser Know-How im erfolgsversprechenden Gebrauch unserer Servic\n es auch digital in Form von Leitfäden, Graphiken und Beratungsvideos für\n  unsere Mitglieder zur Verfügung. Seit seiner Einführung 2018 hat die EB\n -Academy an Inhalten zugenommen und große Designverbesserungen erfahren.\n \u0026nbsp; \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u0026nbsp;\u003c/div\u003e\u003ch1\u003eAnforderungsworkshop: Mitarb\n eiter-wirbt-Mitarbeiter mobile App\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir sehen die Zuku\n nft für elektronische Mitarbeiter-werben-Mitarbeiter Programme im mobile\n n Bereich. Unsere Vision sieht die Entwicklung einer App vor, mit deren \n Hilfe Mitarbeiter Stellenangebote, Employer Branding-Inhalte, sowie Empl\n oyee Branding-Inhalte in ihren sozialen Netzwerken teilen können, die so\n wohl vom Unternehmen als auch von der Kollegenschaft erstellt und bereit\n gestellt wird. Aber dies ist nur eine Vision. Welche realen Anforderunge\n n solch eine App erfüllen muss, um für Arbeitgeber als auch für Mitarbei\n ter ein sinnvolles Werkzeug zur Personalgewinnung und -bindung zu sein, \n das möchten wir mit Ihnen in unserem Anforderungsworkshop diskutieren. \u0026\n nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210133,"Bezeichnung":"Offerista Group GmbH","Kommentar":"ehemals Marktjagd\r\n\r\nRechnungsemail ist falsch und muss berichtigt werden!!","Typ":10,"Nutzername":"offerista","Website":"https://www.offerista.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:37.000+02:00"}}]},{"id":42,"name":"ebcw_spezial_augsburg","hashtag":"ebcw","title":"Empfehlungsbund Community Workshop Spezial in Augsburg","teaser":"Mit dem Empfehlungsbund Community Workshop Spezial in Augsburg wollen wir gezielt Arbeitgeber in der Region um Augsburg ansprechen. Am 24.09.2019 zeigen wir Ihnen vor Ort bei der SII Technologies GmbH, wie genau die Fachkräftesuche in einer regionalen, branchenspezifischen Unternehmensgemeinschaft funktioniert. Darüber hinaus präsentieren wir Ihnen die Meta-Studie Alternative Wege der Fachkräftegewinnung den aktuellen Forschungsstand, welche Kanäle potentielle Bewerber zu ihren nächsten Arbeitgeber führen. \r\n\r\nDie Teilnahme ist kostenfrei. Allerdings ist eine kurze Anmeldung aus organisatorischen Gründen nötig.","teaser_hrfilter":"Mit dem Empfehlungsbund Community Workshop Spezial in Augsburg wollen wir gezielt Arbeitgeber in der Region um Augsburg ansprechen. Am 24.09.2019 zeigen wir Ihnen vor Ort bei der SII Technologies GmbH, wie genau die Fachkräftesuche in einer regionalen, branchenspezifischen Unternehmensgemeinschaft funktioniert. Darüber hinaus präsentieren wir Ihnen die Meta-Studie Alternative Wege der Fachkräftegewinnung den aktuellen Forschungsstand, welche Kanäle potentielle Bewerber zu ihren nächsten Arbeitgeber führen. ","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Personalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personalarbeit?\u003c/strong\u003e In den Community Workshops des Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. Unsere Teilnehmer bringen sich hier mit Ihren Ideen ein. Dank ihren Beiträgen treiben wir die Weiterentwicklung unseres Konzeptes zur Fachkräftegewinnung in der Gemeinschaft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eTermin für das EBCW Augsburg ist der 24. September 2019. Die\u003c/strong\u003e \u003cstrong\u003eAgenda beinhaltet eine offene Gesprächsrunde mit unseren Teilnehmern über ihre effektivsten Personalgewinnungsmaßnahmen. Ergänzend stellen wir Ihnen in einer Meta-Studie den aktuellen Forschungsstand im Bereich Personalmarketing vor. Zu guter Letzt möchten wir allen Interessierten in der Region um Augsburg den Empfehlungsbund und sein Modell der Fachkräftegewinnung in der Unternehmensgemeinschaft in Detail vorstellen. Wir freuen uns auf Sie! \u003c/strong\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e","agenda":"\u003ch1\u003eVorstellungsrunde und Austausch\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWährend des Workshops setzen wir auf einen intensiven Expertenaustausch zwischen Personalern und Geschäftsführern regionaler Unternehmen. In einer offenen Gesprächsrunde werden wir gemeinsam über die Personalgewinnungsmaßnahmen unserer Teilnehmer sprechen. Welche haben sich als besonders effektiv herausgestellt und wie wurden sie im einzelnen umgesetzt? Unser Ziel ist es, dass unsere Workshop-Teilnehmer voneinander neue Impulse und Anwendungsmöglichkeiten für ihr Recruiting mitnehmen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003eAktuelle Studie zu den Trends in der Personalgewinnung „Alternative Wege der Fachkräftegewinnung“\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eMit der Meta-Studie \"Alternative Wege der Fachkräftegewinnung\" stellen wir Ihnen den aktuellen Forschungsstand im Bereich Personalgewinnung vor. Hierzu wurden Studien der letzten 3 Jahre ausgewertet. Auf Basis des Materials präsentiert die Meta-Studie ein Kategoriensystem aus dem sich 8 allgemeine Typen von Recruitingkanälen ergeben. Diese Recruitingkanäle korrelieren mit dem Mediennutzungsverhalten von Bewerbern, die wir durch eine Dauerumfrage mit ca 20000 Feedbacks ermittelt haben. Wir zeigen Ihnen welcher Typ Recruitingkanal auf das jeweilige Mediennutzungsverhalten korrespondiert.\u0026nbsp;\u003cbr\u003e\u0026nbsp;\u003c/div\u003e\u003ch1\u003eVorstellung Empfehlungsbund\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eMit der Gründung der Empfehlungscommunitys ITbavaria.de und OFFICEbavaria.de konnten wir insbesondere in den Regionen um München und Nürnberg branchenspezifische Fachkräftemärkte etablieren. Als nächstes möchten wir Unternehmen mit ähnlichen Fachkräftebedarf aus dem Augsburger Raum für das Konzept der Fachkräftesuche in der Gemeinschaft begeistern. Hierfür stellen wir unseren Workshop-Teilnehmen den Empfehlungsbund vor. Empfehlungsbund-Partner bauen einen eigenen regionalen, branchenspezifischen Fachkräftemarkt auf, indem sie ihre abgesagten Bewerber auf das gemeinsame Stellenangebot hinweisen. Die Vorstellung des Empfehlungsbundes beinhaltet außerdem wichtige Kennzahlen über den Entwicklungsstand der wachsenden Community, Informationen zu den inklusiven Personalmarketing-Services und des Bewerbermanagementsystems des Empfehlungsbundes.\u003c/div\u003e","start":"2019-09-24T15:00:56.000+02:00","finish":"2019-09-24T17:00:56.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/42/wide_Bild_fuer_Social_Media_SII_Empfehlungsbund_Community-Workshop.jpg","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/42/wide_HRfilter_Banner.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/42/Empfehlungsbund_Community_Workshop.png","register_url":"https://www.empfehlungsbund.de/events/42/register","show_url":"https://www.empfehlungsbund.de/events/42","events":[{"id":102,"display_line":"24.09.2019 - 15 bis 17:00 Uhr Augsburg - Empfehlungsbund Community Workshop in Augsburg - Gastgeber: SII Technologies GmbH","subtitle":"Empfehlungsbund Community Workshop in Augsburg","city":"Augsburg","start":"2019-09-24T15:00:56.000+02:00","finish":"2019-09-24T17:00:56.000+02:00","address":"Am Mittleren Moos 53, 86167 Augsburg","event_host":"SII Technologies GmbH","lat":48.4004,"lon":10.9318,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190924T170056\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190924T150056\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n Unsere Teilnehmer bringen sich hier mit Ihren Ideen ein. Dank ihren Beit\n rägen treiben wir die Weiterentwicklung unseres Konzeptes zur Fachkräfte\n gewinnung in der Gemeinschaft weiter voran. \\n\\nTermin für das EBCW Augs\n burg ist der 24. September 2019. Die Agenda beinhaltet eine offene Gespr\n ächsrunde mit unseren Teilnehmern über ihre effektivsten Personalgewinnu\n ngsmaßnahmen. Ergänzend stellen wir Ihnen in einer Meta-Studie den aktue\n llen Forschungsstand im Bereich Personalmarketing vor. Zu guter Letzt mö\n chten wir allen Interessierten in der Region um Augsburg den Empfehlungs\n bund und sein Modell der Fachkräftegewinnung in der Unternehmensgemeinsc\n haft in Detail vorstellen. Wir freuen uns auf Sie! \\n\\n\\nDie Teilnahme i\n st kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus org\n anisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führen\n de Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deut\n schland.\\n\\nVorstellungsrunde und Austausch \\nWährend des Workshops setz\n en wir auf einen intensiven Expertenaustausch zwischen Personalern und G\n eschäftsführern regionaler Unternehmen. In einer offenen Gesprächsrunde \n werden wir gemeinsam über die Personalgewinnungsmaßnahmen unserer Teilne\n hmer sprechen. Welche haben sich als besonders effektiv herausgestellt u\n nd wie wurden sie im einzelnen umgesetzt? Unser Ziel ist es\\, dass unser\n e Workshop-Teilnehmer voneinander neue Impulse und Anwendungsmöglichkeit\n en für ihr Recruiting mitnehmen. \\n\\n\\nAktuelle Studie zu den Trends in \n der Personalgewinnung „Alternative Wege der Fachkräftegewinnung“ \\nMit d\n er Meta-Studie \"Alternative Wege der Fachkräftegewinnung\" stellen wir Ih\n nen den aktuellen Forschungsstand im Bereich Personalgewinnung vor. Hier\n zu wurden Studien der letzten 3 Jahre ausgewertet. Auf Basis des Materia\n ls präsentiert die Meta-Studie ein Kategoriensystem aus dem sich 8 allge\n meine Typen von Recruitingkanälen ergeben. Diese Recruitingkanäle korrel\n ieren mit dem Mediennutzungsverhalten von Bewerbern\\, die wir durch eine\n  Dauerumfrage mit ca 20000 Feedbacks ermittelt haben. Wir zeigen Ihnen w\n elcher Typ Recruitingkanal auf das jeweilige Mediennutzungsverhalten kor\n respondiert. \\n \\nVorstellung Empfehlungsbund\\nMit der Gründung der Empf\n ehlungscommunitys ITbavaria.de und OFFICEbavaria.de konnten wir insbeson\n dere in den Regionen um München und Nürnberg branchenspezifische Fachkrä\n ftemärkte etablieren. Als nächstes möchten wir Unternehmen mit ähnlichen\n  Fachkräftebedarf aus dem Augsburger Raum für das Konzept der Fachkräfte\n suche in der Gemeinschaft begeistern. Hierfür stellen wir unseren Worksh\n op-Teilnehmen den Empfehlungsbund vor. Empfehlungsbund-Partner bauen ein\n en eigenen regionalen\\, branchenspezifischen Fachkräftemarkt auf\\, indem\n  sie ihre abgesagten Bewerber auf das gemeinsame Stellenangebot hinweise\n n. Die Vorstellung des Empfehlungsbundes beinhaltet außerdem wichtige Ke\n nnzahlen über den Entwicklungsstand der wachsenden Community\\, Informati\n onen zu den inklusiven Personalmarketing-Services und des Bewerbermanage\n mentsystems des Empfehlungsbundes.\\n\nURL:https://www.empfehlungsbund.de/events/42\nSUMMARY:Empfehlungsbund Community Workshop Spezial in Augsburg\nORGANIZER;CN=SII Technologies GmbH / Empfehlungsbund.de:https://www.empfe\n hlungsbund.de/events/42\nATTACH:https://www.empfehlungsbund.de/events/42\nLOCATION:SII Technologies GmbH\\, Am Mittleren Moos 53\\, 86167 Augsburg\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-T\n ech überhaupt einen Nutzen für die Personalarbeit?\u003c/strong\u003e In den Commu\n nity Workshops des Empfehlungsbundes tauschen sich Personalexperten und \n Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen \n für eine erfolgversprechende Personalarbeit aus. Unsere Teilnehmer bring\n en sich hier mit Ihren Ideen ein. Dank ihren Beiträgen treiben wir die W\n eiterentwicklung unseres Konzeptes zur Fachkräftegewinnung in der Gemein\n schaft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eTermin für das EBCW Augsburg ist de\n r 24. September 2019. Die\u003c/strong\u003e \u003cstrong\u003eAgenda beinhaltet eine offene\n  Gesprächsrunde mit unseren Teilnehmern über ihre effektivsten Personalg\n ewinnungsmaßnahmen. Ergänzend stellen wir Ihnen in einer Meta-Studie den\n  aktuellen Forschungsstand im Bereich Personalmarketing vor. Zu guter Le\n tzt möchten wir allen Interessierten in der Region um Augsburg den Empfe\n hlungsbund und sein Modell der Fachkräftegewinnung in der Unternehmensge\n meinschaft in Detail vorstellen. Wir freuen uns auf Sie! \u003c/strong\u003e\u003cbr\u003e\u003cb\n r\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldu\n ng zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca h\n ref=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende\n  Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutsc\n hland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003eVorstellungsrunde und Austausch\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eW\n ährend des Workshops setzen wir auf einen intensiven Expertenaustausch z\n wischen Personalern und Geschäftsführern regionaler Unternehmen. In eine\n r offenen Gesprächsrunde werden wir gemeinsam über die Personalgewinnung\n smaßnahmen unserer Teilnehmer sprechen. Welche haben sich als besonders \n effektiv herausgestellt und wie wurden sie im einzelnen umgesetzt? Unser\n  Ziel ist es, dass unsere Workshop-Teilnehmer voneinander neue Impulse u\n nd Anwendungsmöglichkeiten für ihr Recruiting mitnehmen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/\n div\u003e\u003ch1\u003eAktuelle Studie zu den Trends in der Personalgewinnung „Alternat\n ive Wege der Fachkräftegewinnung“\u0026nbsp;\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eMit der Meta-Studie\n  \"Alternative Wege der Fachkräftegewinnung\" stellen wir Ihnen den aktuel\n len Forschungsstand im Bereich Personalgewinnung vor. Hierzu wurden Stud\n ien der letzten 3 Jahre ausgewertet. Auf Basis des Materials präsentiert\n  die Meta-Studie ein Kategoriensystem aus dem sich 8 allgemeine Typen vo\n n Recruitingkanälen ergeben. Diese Recruitingkanäle korrelieren mit dem \n Mediennutzungsverhalten von Bewerbern, die wir durch eine Dauerumfrage m\n it ca 20000 Feedbacks ermittelt haben. Wir zeigen Ihnen welcher Typ Recr\n uitingkanal auf das jeweilige Mediennutzungsverhalten korrespondiert.\u0026nb\n sp;\u003cbr\u003e\u0026nbsp;\u003c/div\u003e\u003ch1\u003eVorstellung Empfehlungsbund\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eMit der \n Gründung der Empfehlungscommunitys ITbavaria.de und OFFICEbavaria.de kon\n nten wir insbesondere in den Regionen um München und Nürnberg branchensp\n ezifische Fachkräftemärkte etablieren. Als nächstes möchten wir Unterneh\n men mit ähnlichen Fachkräftebedarf aus dem Augsburger Raum für das Konze\n pt der Fachkräftesuche in der Gemeinschaft begeistern. Hierfür stellen w\n ir unseren Workshop-Teilnehmen den Empfehlungsbund vor. Empfehlungsbund-\n Partner bauen einen eigenen regionalen, branchenspezifischen Fachkräftem\n arkt auf, indem sie ihre abgesagten Bewerber auf das gemeinsame Stellena\n ngebot hinweisen. Die Vorstellung des Empfehlungsbundes beinhaltet außer\n dem wichtige Kennzahlen über den Entwicklungsstand der wachsenden Commun\n ity, Informationen zu den inklusiven Personalmarketing-Services und des \n Bewerbermanagementsystems des Empfehlungsbundes.\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9211711,"Bezeichnung":"SII Technologies GmbH","Kommentar":"ist aber auch Personalvermittler\r\nWir haben ein Provisionsmodell vereinbart. Für jedes Mitglied, was die SII bringt, erhält sie: 20% von der Nettojahresmitgliedschaft mit dem nächsten Beitrag verrechnet. (geht nur bis Rechnungsbeitrag 0 ist; und dann im nächsten Jahr verrechnen). Wir zahlen kein Geld aus ;-)\r\n\r\n\"Leider müssen wir vorsorglich unsere Mitgliedschaft für 2021 kündigen. Diese muss zukünftig immer über unsere französische Mutter genehmigt werden und das muss zu gegebenem Zeitpunkt erst beantragt werden. Bitte bestätigen Sie uns die Kündigung.\" \r\n\r\n3 Monate vor Kündigungsschluss nochmal nachfragen, da Kündiung provisorisch war\r\n","Typ":10,"Nutzername":"sii","Website":"https://www.de.sii.group/karriere/","created_at":"2014-12-10T08:35:08.000+01:00","updated_at":"2021-06-18T10:59:05.000+02:00"}}]},{"id":40,"name":"oxfp_19","hashtag":"ofxp","title":"Offenes Expertenforum Personalmanagement in Dresden, München, Berlin und Leipzig","teaser":"Hallo und herzlich Willkommen zum Expertenforum Personalmanagement 2019 in Dresden, Berlin, Leipzig und München. Mit unserem jährlichen Treffen möchten wir Personalexperten und Führungskräfte regionaler Unternehmen zusammenführen, um gemeinsam mit Ihnen über künftige Herausforderung in gemeinschaftlicher Personalgewinnung zu diskutieren. Auf der diesjährigen Agenda steht u.a. die Auswertung des Gehaltsbenchmarks und der Benefit-Leistungen für 2019. Des Weiteren möchten wir Ihnen zeigen, wie Sie mit EB-Smartlinks Ihre Candidate Experience deutlich optimieren können. Für unseren Workshop wollen wir über aktuelle Trends im Personalmarketing diskutieren. Was treibt Sie momentan um und welche Themen sind Ihrer Meinung nach nicht mehr zeitgemäß? Wir freuen uns auf Ihre Teilnahme! ","teaser_hrfilter":"Zahlen Sie branchenübliche Gehälter? Das Offene Expertenforum Personalmanagement 2019 gibt Ihnen die Antwort. Neben dem aktuellen Gehaltsbenchmark 2019 warten noch viele weiteren spannende Themen auf Sie! Wir freuen uns, wenn auch Sie unserer Veranstaltung beiwohnen.","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eHerzlich Willkommen zum Expertenforum Personalmanagement 2019 in Dresden, Berlin, Leipzig und München. Hier finden Personalexperten und Führungskräfte regionaler Unternehmen zusammen, um neue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit zu besprechen. Wir ermutigen unsere Workshopteilnehmer, diese Ideen zu evaluieren und mit Ihren Beiträgen die Weiterentwicklung des Konzeptes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter anderem \u003cstrong\u003edie Auswertung des Gehaltsbenchmarks und Benefit-Leistungen für 2019\u003c/strong\u003e. Des Weiteren möchten wir Ihnen zeigen, \u003cstrong\u003ewie Sie mit EB-Smartlinks Ihre Candidate Experience deutlich optimieren können\u003c/strong\u003e. Für unseren Workshop wollen wir über Ihre aktuellen Trends im Personalmarketing diskutieren. Was treibt Sie momentan um und was ist nicht mehr zeitgemäß? Wir freuen uns auf Ihre Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e","agenda":"\u003ch1\u003e\u003cstrong\u003eDer aktuelle Gehaltsbenchmark + Benefitauswertung 2019\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eDer Empfehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\u003cbr\u003eIn unserer Auswertung erfahren Sie, wie sich das Lohnniveau für das Jahr 2019 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.info um eine weitere spannende Funktion erweitert.\u0026nbsp; Unternehmen können auf Jobwert.info ihre Benefit-Leistungen angeben. In unserem Expertenforum wollen wir Ihnen einen Branchenvergleich gezahlter Benefit-Leistungen nicht vorenthalten. \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eEB-SmartLinks: Mit diesen Links verbessern Sie Employer Branding und CandEx\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir haben die EB-Links, die unsere Partner für ihre Bewerberkommunikation verwenden, deutlich verbessert! Ihre Bewerber erhalten dank der neuen EB-Links strukturierte Informationen über alle\u0026nbsp; weiteren Schritte nach Erhalt eines Empfehlungscodes. Wie Sie SmartLinks nutzbringend für das Arbeitgeber-Image Ihres Unternehmens einsetzen, erfahren Sie vor Ort.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eWorkshop: Erfahrungsaustausch zu aktuellen Trends des Personalmarketings\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eIn einer offenen Gesprächsrunde möchte wir mit Ihnen gemeinsam erkunden, welche Trends des Personalmarketings für Ihre Personalarbeit aktuell Relevanz haben und welche Trends Ihnen höchstens ein müdes Gähnen abringen können. Da unser Metier in den Bereichen Employer Branding, E-Recruiting, Candidate Experience, und HR-Tech liegt, sind wir sehr gespannt, mit welchen Themen Sie sich aktuell und in den kommenden Jahren aktiv auseinandersetzen werden.\u0026nbsp; \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e","start":"2019-05-28T14:00:03.000+02:00","finish":"2019-05-29T18:00:38.000+02:00","visible":true,"is_open_network":true,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/40/wide_full_2017-05-23_20170523_162358.jpg","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/40/wide_full_CRM_Banner_HRFILTER_EBCW_DresdenLeipzigM_nchenBerlin.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/40/block_image_Expertenforum_blog.jpg","register_url":"https://www.empfehlungsbund.de/events/40/register","show_url":"https://www.empfehlungsbund.de/events/40","events":[{"id":96,"display_line":"28.05.2019 - 14 bis 18:00 Uhr Dresden - Offenes Expertenforum Personalmanagement in Dresden - Gastgeber: IBH IT-Service GmbH","subtitle":"Offenes Expertenforum Personalmanagement in Dresden","city":"Dresden","start":"2019-05-28T14:00:22.000+02:00","finish":"2019-05-28T18:00:22.000+02:00","address":"Heilbronner Straße 20, 01189 Dresden","event_host":"IBH IT-Service GmbH","lat":51.0089,"lon":13.7041,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190528T180022\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190528T140022\nCATEGORIES:BUSINESS\nDESCRIPTION:Herzlich Willkommen zum Expertenforum Personalmanagement 2019\n  in Dresden\\, Berlin\\, Leipzig und München. Hier finden Personalexperten\n  und Führungskräfte regionaler Unternehmen zusammen\\, um neue Entwicklun\n gen und Ideen für eine erfolgversprechende Personalarbeit zu besprechen.\n  Wir ermutigen unsere Workshopteilnehmer\\, diese Ideen zu evaluieren und\n  mit Ihren Beiträgen die Weiterentwicklung des Konzeptes der Fachkräftes\n uche in der Gemeinschaft voranzutreiben. \\n\\nAuf der Agenda steht unter \n anderem die Auswertung des Gehaltsbenchmarks und Benefit-Leistungen für \n 2019. Des Weiteren möchten wir Ihnen zeigen\\, wie Sie mit EB-Smartlinks \n Ihre Candidate Experience deutlich optimieren können. Für unseren Worksh\n op wollen wir über Ihre aktuellen Trends im Personalmarketing diskutiere\n n. Was treibt Sie momentan um und was ist nicht mehr zeitgemäß? Wir freu\n en uns auf Ihre Teilnahme! \\n\\n\\nDie Teilnahme ist kostenfrei. Jedoch is\n t eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen e\n rforderlich.\\nDer Empfehlungsbund ist das führende Netzwerk zur effizien\n ten Personalgewinnung durch Empfehlungen in Deutschland.\\n\\nDer aktuelle\n  Gehaltsbenchmark + Benefitauswertung 2019\\nDer Empfehlungsbund vergleic\n ht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­hä\n l­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\\nIn u\n nserer Auswertung erfahren Sie\\, wie sich das Lohnniveau für das Jahr 20\n 19 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.info u\n m eine weitere spannende Funktion erweitert.  Unternehmen können auf Job\n wert.info ihre Benefit-Leistungen angeben. In unserem Expertenforum woll\n en wir Ihnen einen Branchenvergleich gezahlter Benefit-Leistungen nicht \n vorenthalten.  \\n\\n\\n\\n\\nEB-SmartLinks: Mit diesen Links verbessern Sie \n Employer Branding und CandEx\\nWir haben die EB-Links\\, die unsere Partne\n r für ihre Bewerberkommunikation verwenden\\, deutlich verbessert! Ihre B\n ewerber erhalten dank der neuen EB-Links strukturierte Informationen übe\n r alle  weiteren Schritte nach Erhalt eines Empfehlungscodes. Wie Sie Sm\n artLinks nutzbringend für das Arbeitgeber-Image Ihres Unternehmens einse\n tzen\\, erfahren Sie vor Ort. \\n\\n\\n\\nWorkshop: Erfahrungsaustausch zu ak\n tuellen Trends des Personalmarketings\\nIn einer offenen Gesprächsrunde m\n öchte wir mit Ihnen gemeinsam erkunden\\, welche Trends des Personalmarke\n tings für Ihre Personalarbeit aktuell Relevanz haben und welche Trends I\n hnen höchstens ein müdes Gähnen abringen können. Da unser Metier in den \n Bereichen Employer Branding\\, E-Recruiting\\, Candidate Experience\\, und \n HR-Tech liegt\\, sind wir sehr gespannt\\, mit welchen Themen Sie sich akt\n uell und in den kommenden Jahren aktiv auseinandersetzen werden.   \\n\\n\\\n n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/40\nSUMMARY:Offenes Expertenforum Personalmanagement in Dresden\\, München\\, B\n erlin und Leipzig\nORGANIZER;CN=IBH IT-Service GmbH / Empfehlungsbund.de:https://www.empfehl\n ungsbund.de/events/40\nATTACH:https://www.empfehlungsbund.de/events/40\nLOCATION:IBH IT-Service GmbH\\, Heilbronner Straße 20\\, 01189 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eHerzlich Willkommen zum Exper\n tenforum Personalmanagement 2019 in Dresden, Berlin, Leipzig und München\n . Hier finden Personalexperten und Führungskräfte regionaler Unternehmen\n  zusammen, um neue Entwicklungen und Ideen für eine erfolgversprechende \n Personalarbeit zu besprechen. Wir ermutigen unsere Workshopteilnehmer, d\n iese Ideen zu evaluieren und mit Ihren Beiträgen die Weiterentwicklung d\n es Konzeptes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \u003cbr\n \u003e\u003cbr\u003eAuf der Agenda steht unter anderem \u003cstrong\u003edie Auswertung des Gehal\n tsbenchmarks und Benefit-Leistungen für 2019\u003c/strong\u003e. Des Weiteren möch\n ten wir Ihnen zeigen, \u003cstrong\u003ewie Sie mit EB-Smartlinks Ihre Candidate E\n xperience deutlich optimieren können\u003c/strong\u003e. Für unseren Workshop woll\n en wir über Ihre aktuellen Trends im Personalmarketing diskutieren. Was \n treibt Sie momentan um und was ist nicht mehr zeitgemäß? Wir freuen uns \n auf Ihre Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei\n . Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorische\n n Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer E\n mpfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnu\n ng durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eDer aktuelle \n Gehaltsbenchmark + Benefitauswertung 2019\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eDer Empf\n ehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­\n el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on\n  und Bran­che.\u003cbr\u003eIn unserer Auswertung erfahren Sie, wie sich das Lohnn\n iveau für das Jahr 2019 gestaltet. Außerdem haben wir den Gehaltsbenchma\n rk von Jobwert.info um eine weitere spannende Funktion erweitert.\u0026nbsp; \n Unternehmen können auf Jobwert.info ihre Benefit-Leistungen angeben. In \n unserem Expertenforum wollen wir Ihnen einen Branchenvergleich gezahlter\n  Benefit-Leistungen nicht vorenthalten. \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\n \u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eEB-SmartLinks: Mit diesen Links verbessern Sie Emp\n loyer Branding und CandEx\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir haben die EB-Links, \n die unsere Partner für ihre Bewerberkommunikation verwenden, deutlich ve\n rbessert! Ihre Bewerber erhalten dank der neuen EB-Links strukturierte I\n nformationen über alle\u0026nbsp; weiteren Schritte nach Erhalt eines Empfehl\n ungscodes. Wie Sie SmartLinks nutzbringend für das Arbeitgeber-Image Ihr\n es Unternehmens einsetzen, erfahren Sie vor Ort.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\n \u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eWorkshop: Erfahrungsaustausch zu aktuellen Trends des\n  Personalmarketings\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eIn einer offenen Gesprächsrund\n e möchte wir mit Ihnen gemeinsam erkunden, welche Trends des Personalmar\n ketings für Ihre Personalarbeit aktuell Relevanz haben und welche Trends\n  Ihnen höchstens ein müdes Gähnen abringen können. Da unser Metier in de\n n Bereichen Employer Branding, E-Recruiting, Candidate Experience, und H\n R-Tech liegt, sind wir sehr gespannt, mit welchen Themen Sie sich aktuel\n l und in den kommenden Jahren aktiv auseinandersetzen werden.\u0026nbsp; \u0026nbs\n p;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9211066,"Bezeichnung":"IBH IT-Service GmbH","Kommentar":"","Typ":10,"Nutzername":"ibh","Website":"https://www.ibh.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-06T12:25:25.000+02:00"}},{"id":97,"display_line":"29.05.2019 - 14 bis 18:00 Uhr Leipzig - Offenes Expertenforum Personalmanagement in Leipzig - Gastgeber: René Falk Management GmbH","subtitle":"Offenes Expertenforum Personalmanagement in Leipzig","city":"Leipzig","start":"2019-05-29T14:00:36.000+02:00","finish":"2019-05-29T18:00:36.000+02:00","address":"Nikolaistraße 12, 04109 Leipzig","event_host":"René Falk Management GmbH","lat":51.3413,"lon":12.3782,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190529T180036\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190529T140036\nCATEGORIES:BUSINESS\nDESCRIPTION:Herzlich Willkommen zum Expertenforum Personalmanagement 2019\n  in Dresden\\, Berlin\\, Leipzig und München. Hier finden Personalexperten\n  und Führungskräfte regionaler Unternehmen zusammen\\, um neue Entwicklun\n gen und Ideen für eine erfolgversprechende Personalarbeit zu besprechen.\n  Wir ermutigen unsere Workshopteilnehmer\\, diese Ideen zu evaluieren und\n  mit Ihren Beiträgen die Weiterentwicklung des Konzeptes der Fachkräftes\n uche in der Gemeinschaft voranzutreiben. \\n\\nAuf der Agenda steht unter \n anderem die Auswertung des Gehaltsbenchmarks und Benefit-Leistungen für \n 2019. Des Weiteren möchten wir Ihnen zeigen\\, wie Sie mit EB-Smartlinks \n Ihre Candidate Experience deutlich optimieren können. Für unseren Worksh\n op wollen wir über Ihre aktuellen Trends im Personalmarketing diskutiere\n n. Was treibt Sie momentan um und was ist nicht mehr zeitgemäß? Wir freu\n en uns auf Ihre Teilnahme! \\n\\n\\nDie Teilnahme ist kostenfrei. Jedoch is\n t eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen e\n rforderlich.\\nDer Empfehlungsbund ist das führende Netzwerk zur effizien\n ten Personalgewinnung durch Empfehlungen in Deutschland.\\n\\nDer aktuelle\n  Gehaltsbenchmark + Benefitauswertung 2019\\nDer Empfehlungsbund vergleic\n ht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­hä\n l­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\\nIn u\n nserer Auswertung erfahren Sie\\, wie sich das Lohnniveau für das Jahr 20\n 19 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.info u\n m eine weitere spannende Funktion erweitert.  Unternehmen können auf Job\n wert.info ihre Benefit-Leistungen angeben. In unserem Expertenforum woll\n en wir Ihnen einen Branchenvergleich gezahlter Benefit-Leistungen nicht \n vorenthalten.  \\n\\n\\n\\n\\nEB-SmartLinks: Mit diesen Links verbessern Sie \n Employer Branding und CandEx\\nWir haben die EB-Links\\, die unsere Partne\n r für ihre Bewerberkommunikation verwenden\\, deutlich verbessert! Ihre B\n ewerber erhalten dank der neuen EB-Links strukturierte Informationen übe\n r alle  weiteren Schritte nach Erhalt eines Empfehlungscodes. Wie Sie Sm\n artLinks nutzbringend für das Arbeitgeber-Image Ihres Unternehmens einse\n tzen\\, erfahren Sie vor Ort. \\n\\n\\n\\nWorkshop: Erfahrungsaustausch zu ak\n tuellen Trends des Personalmarketings\\nIn einer offenen Gesprächsrunde m\n öchte wir mit Ihnen gemeinsam erkunden\\, welche Trends des Personalmarke\n tings für Ihre Personalarbeit aktuell Relevanz haben und welche Trends I\n hnen höchstens ein müdes Gähnen abringen können. Da unser Metier in den \n Bereichen Employer Branding\\, E-Recruiting\\, Candidate Experience\\, und \n HR-Tech liegt\\, sind wir sehr gespannt\\, mit welchen Themen Sie sich akt\n uell und in den kommenden Jahren aktiv auseinandersetzen werden.   \\n\\n\\\n n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/40\nSUMMARY:Offenes Expertenforum Personalmanagement in Dresden\\, München\\, B\n erlin und Leipzig\nORGANIZER;CN=René Falk Management GmbH / Empfehlungsbund.de:https://www.e\n mpfehlungsbund.de/events/40\nATTACH:https://www.empfehlungsbund.de/events/40\nLOCATION:René Falk Management GmbH\\, Nikolaistraße 12\\, 04109 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eHerzlich Willkommen zum Exper\n tenforum Personalmanagement 2019 in Dresden, Berlin, Leipzig und München\n . Hier finden Personalexperten und Führungskräfte regionaler Unternehmen\n  zusammen, um neue Entwicklungen und Ideen für eine erfolgversprechende \n Personalarbeit zu besprechen. Wir ermutigen unsere Workshopteilnehmer, d\n iese Ideen zu evaluieren und mit Ihren Beiträgen die Weiterentwicklung d\n es Konzeptes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \u003cbr\n \u003e\u003cbr\u003eAuf der Agenda steht unter anderem \u003cstrong\u003edie Auswertung des Gehal\n tsbenchmarks und Benefit-Leistungen für 2019\u003c/strong\u003e. Des Weiteren möch\n ten wir Ihnen zeigen, \u003cstrong\u003ewie Sie mit EB-Smartlinks Ihre Candidate E\n xperience deutlich optimieren können\u003c/strong\u003e. Für unseren Workshop woll\n en wir über Ihre aktuellen Trends im Personalmarketing diskutieren. Was \n treibt Sie momentan um und was ist nicht mehr zeitgemäß? Wir freuen uns \n auf Ihre Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei\n . Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorische\n n Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer E\n mpfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnu\n ng durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eDer aktuelle \n Gehaltsbenchmark + Benefitauswertung 2019\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eDer Empf\n ehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­\n el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on\n  und Bran­che.\u003cbr\u003eIn unserer Auswertung erfahren Sie, wie sich das Lohnn\n iveau für das Jahr 2019 gestaltet. Außerdem haben wir den Gehaltsbenchma\n rk von Jobwert.info um eine weitere spannende Funktion erweitert.\u0026nbsp; \n Unternehmen können auf Jobwert.info ihre Benefit-Leistungen angeben. In \n unserem Expertenforum wollen wir Ihnen einen Branchenvergleich gezahlter\n  Benefit-Leistungen nicht vorenthalten. \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\n \u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eEB-SmartLinks: Mit diesen Links verbessern Sie Emp\n loyer Branding und CandEx\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir haben die EB-Links, \n die unsere Partner für ihre Bewerberkommunikation verwenden, deutlich ve\n rbessert! Ihre Bewerber erhalten dank der neuen EB-Links strukturierte I\n nformationen über alle\u0026nbsp; weiteren Schritte nach Erhalt eines Empfehl\n ungscodes. Wie Sie SmartLinks nutzbringend für das Arbeitgeber-Image Ihr\n es Unternehmens einsetzen, erfahren Sie vor Ort.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\n \u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eWorkshop: Erfahrungsaustausch zu aktuellen Trends des\n  Personalmarketings\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eIn einer offenen Gesprächsrund\n e möchte wir mit Ihnen gemeinsam erkunden, welche Trends des Personalmar\n ketings für Ihre Personalarbeit aktuell Relevanz haben und welche Trends\n  Ihnen höchstens ein müdes Gähnen abringen können. Da unser Metier in de\n n Bereichen Employer Branding, E-Recruiting, Candidate Experience, und H\n R-Tech liegt, sind wir sehr gespannt, mit welchen Themen Sie sich aktuel\n l und in den kommenden Jahren aktiv auseinandersetzen werden.\u0026nbsp; \u0026nbs\n p;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9213736,"Bezeichnung":"René Falk Management GmbH","Kommentar":"Verbindung zu Converneo\r\nOberbegriff der Firma ist jetzt Leanera","Typ":10,"Nutzername":"renefalk","Website":"https://www.renefalk.com/","created_at":"2018-10-09T08:47:57.000+02:00","updated_at":"2021-06-21T09:18:08.000+02:00"}},{"id":98,"display_line":"29.05.2019 - 14 bis 18:00 Uhr Berlin - Offenes Expertenforum Personalmanagement in Berlin - Gastgeber: Decada Consulting GmbH","subtitle":"Offenes Expertenforum Personalmanagement in Berlin","city":"Berlin","start":"2019-05-29T14:00:38.000+02:00","finish":"2019-05-29T18:00:38.000+02:00","address":"Ernst-Augustin-Str. 2, 12489 Berlin","event_host":"Decada Consulting GmbH","lat":52.4331,"lon":13.541,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190529T180038\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190529T140038\nCATEGORIES:BUSINESS\nDESCRIPTION:Herzlich Willkommen zum Expertenforum Personalmanagement 2019\n  in Dresden\\, Berlin\\, Leipzig und München. Hier finden Personalexperten\n  und Führungskräfte regionaler Unternehmen zusammen\\, um neue Entwicklun\n gen und Ideen für eine erfolgversprechende Personalarbeit zu besprechen.\n  Wir ermutigen unsere Workshopteilnehmer\\, diese Ideen zu evaluieren und\n  mit Ihren Beiträgen die Weiterentwicklung des Konzeptes der Fachkräftes\n uche in der Gemeinschaft voranzutreiben. \\n\\nAuf der Agenda steht unter \n anderem die Auswertung des Gehaltsbenchmarks und Benefit-Leistungen für \n 2019. Des Weiteren möchten wir Ihnen zeigen\\, wie Sie mit EB-Smartlinks \n Ihre Candidate Experience deutlich optimieren können. Für unseren Worksh\n op wollen wir über Ihre aktuellen Trends im Personalmarketing diskutiere\n n. Was treibt Sie momentan um und was ist nicht mehr zeitgemäß? Wir freu\n en uns auf Ihre Teilnahme! \\n\\n\\nDie Teilnahme ist kostenfrei. Jedoch is\n t eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen e\n rforderlich.\\nDer Empfehlungsbund ist das führende Netzwerk zur effizien\n ten Personalgewinnung durch Empfehlungen in Deutschland.\\n\\nDer aktuelle\n  Gehaltsbenchmark + Benefitauswertung 2019\\nDer Empfehlungsbund vergleic\n ht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­hä\n l­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\\nIn u\n nserer Auswertung erfahren Sie\\, wie sich das Lohnniveau für das Jahr 20\n 19 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.info u\n m eine weitere spannende Funktion erweitert.  Unternehmen können auf Job\n wert.info ihre Benefit-Leistungen angeben. In unserem Expertenforum woll\n en wir Ihnen einen Branchenvergleich gezahlter Benefit-Leistungen nicht \n vorenthalten.  \\n\\n\\n\\n\\nEB-SmartLinks: Mit diesen Links verbessern Sie \n Employer Branding und CandEx\\nWir haben die EB-Links\\, die unsere Partne\n r für ihre Bewerberkommunikation verwenden\\, deutlich verbessert! Ihre B\n ewerber erhalten dank der neuen EB-Links strukturierte Informationen übe\n r alle  weiteren Schritte nach Erhalt eines Empfehlungscodes. Wie Sie Sm\n artLinks nutzbringend für das Arbeitgeber-Image Ihres Unternehmens einse\n tzen\\, erfahren Sie vor Ort. \\n\\n\\n\\nWorkshop: Erfahrungsaustausch zu ak\n tuellen Trends des Personalmarketings\\nIn einer offenen Gesprächsrunde m\n öchte wir mit Ihnen gemeinsam erkunden\\, welche Trends des Personalmarke\n tings für Ihre Personalarbeit aktuell Relevanz haben und welche Trends I\n hnen höchstens ein müdes Gähnen abringen können. Da unser Metier in den \n Bereichen Employer Branding\\, E-Recruiting\\, Candidate Experience\\, und \n HR-Tech liegt\\, sind wir sehr gespannt\\, mit welchen Themen Sie sich akt\n uell und in den kommenden Jahren aktiv auseinandersetzen werden.   \\n\\n\\\n n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/40\nSUMMARY:Offenes Expertenforum Personalmanagement in Dresden\\, München\\, B\n erlin und Leipzig\nORGANIZER;CN=Decada Consulting GmbH / Empfehlungsbund.de:https://www.empf\n ehlungsbund.de/events/40\nATTACH:https://www.empfehlungsbund.de/events/40\nLOCATION:Decada Consulting GmbH\\, Ernst-Augustin-Str. 2\\, 12489 Berlin\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eHerzlich Willkommen zum Exper\n tenforum Personalmanagement 2019 in Dresden, Berlin, Leipzig und München\n . Hier finden Personalexperten und Führungskräfte regionaler Unternehmen\n  zusammen, um neue Entwicklungen und Ideen für eine erfolgversprechende \n Personalarbeit zu besprechen. Wir ermutigen unsere Workshopteilnehmer, d\n iese Ideen zu evaluieren und mit Ihren Beiträgen die Weiterentwicklung d\n es Konzeptes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \u003cbr\n \u003e\u003cbr\u003eAuf der Agenda steht unter anderem \u003cstrong\u003edie Auswertung des Gehal\n tsbenchmarks und Benefit-Leistungen für 2019\u003c/strong\u003e. Des Weiteren möch\n ten wir Ihnen zeigen, \u003cstrong\u003ewie Sie mit EB-Smartlinks Ihre Candidate E\n xperience deutlich optimieren können\u003c/strong\u003e. Für unseren Workshop woll\n en wir über Ihre aktuellen Trends im Personalmarketing diskutieren. Was \n treibt Sie momentan um und was ist nicht mehr zeitgemäß? Wir freuen uns \n auf Ihre Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei\n . Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorische\n n Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer E\n mpfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnu\n ng durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eDer aktuelle \n Gehaltsbenchmark + Benefitauswertung 2019\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eDer Empf\n ehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­\n el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on\n  und Bran­che.\u003cbr\u003eIn unserer Auswertung erfahren Sie, wie sich das Lohnn\n iveau für das Jahr 2019 gestaltet. Außerdem haben wir den Gehaltsbenchma\n rk von Jobwert.info um eine weitere spannende Funktion erweitert.\u0026nbsp; \n Unternehmen können auf Jobwert.info ihre Benefit-Leistungen angeben. In \n unserem Expertenforum wollen wir Ihnen einen Branchenvergleich gezahlter\n  Benefit-Leistungen nicht vorenthalten. \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\n \u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eEB-SmartLinks: Mit diesen Links verbessern Sie Emp\n loyer Branding und CandEx\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir haben die EB-Links, \n die unsere Partner für ihre Bewerberkommunikation verwenden, deutlich ve\n rbessert! Ihre Bewerber erhalten dank der neuen EB-Links strukturierte I\n nformationen über alle\u0026nbsp; weiteren Schritte nach Erhalt eines Empfehl\n ungscodes. Wie Sie SmartLinks nutzbringend für das Arbeitgeber-Image Ihr\n es Unternehmens einsetzen, erfahren Sie vor Ort.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\n \u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eWorkshop: Erfahrungsaustausch zu aktuellen Trends des\n  Personalmarketings\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eIn einer offenen Gesprächsrund\n e möchte wir mit Ihnen gemeinsam erkunden, welche Trends des Personalmar\n ketings für Ihre Personalarbeit aktuell Relevanz haben und welche Trends\n  Ihnen höchstens ein müdes Gähnen abringen können. Da unser Metier in de\n n Bereichen Employer Branding, E-Recruiting, Candidate Experience, und H\n R-Tech liegt, sind wir sehr gespannt, mit welchen Themen Sie sich aktuel\n l und in den kommenden Jahren aktiv auseinandersetzen werden.\u0026nbsp; \u0026nbs\n p;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9213097,"Bezeichnung":"Decada Consulting GmbH","Kommentar":"über Quadrio, Sascha Mieth empfohlen","Typ":10,"Nutzername":"decadaress","Website":"https://quadrio.de/impressum","created_at":"2017-03-01T19:34:10.000+01:00","updated_at":"2021-10-11T15:30:15.000+02:00"}},{"id":101,"display_line":"28.05.2019 - 14 bis 18:00 Uhr München - Offenes Expertenforum Personalmanagement in München - Gastgeber: CompuSafe Data Systems AG","subtitle":"Offenes Expertenforum Personalmanagement in München","city":"München","start":"2019-05-28T14:00:03.000+02:00","finish":"2019-05-28T18:00:03.000+02:00","address":"Oetztaler Straße 18, 81373 München","event_host":"CompuSafe Data Systems AG","lat":48.1197,"lon":11.5308,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190528T180003\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190528T140003\nCATEGORIES:BUSINESS\nDESCRIPTION:Herzlich Willkommen zum Expertenforum Personalmanagement 2019\n  in Dresden\\, Berlin\\, Leipzig und München. Hier finden Personalexperten\n  und Führungskräfte regionaler Unternehmen zusammen\\, um neue Entwicklun\n gen und Ideen für eine erfolgversprechende Personalarbeit zu besprechen.\n  Wir ermutigen unsere Workshopteilnehmer\\, diese Ideen zu evaluieren und\n  mit Ihren Beiträgen die Weiterentwicklung des Konzeptes der Fachkräftes\n uche in der Gemeinschaft voranzutreiben. \\n\\nAuf der Agenda steht unter \n anderem die Auswertung des Gehaltsbenchmarks und Benefit-Leistungen für \n 2019. Des Weiteren möchten wir Ihnen zeigen\\, wie Sie mit EB-Smartlinks \n Ihre Candidate Experience deutlich optimieren können. Für unseren Worksh\n op wollen wir über Ihre aktuellen Trends im Personalmarketing diskutiere\n n. Was treibt Sie momentan um und was ist nicht mehr zeitgemäß? Wir freu\n en uns auf Ihre Teilnahme! \\n\\n\\nDie Teilnahme ist kostenfrei. Jedoch is\n t eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen e\n rforderlich.\\nDer Empfehlungsbund ist das führende Netzwerk zur effizien\n ten Personalgewinnung durch Empfehlungen in Deutschland.\\n\\nDer aktuelle\n  Gehaltsbenchmark + Benefitauswertung 2019\\nDer Empfehlungsbund vergleic\n ht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­hä\n l­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\\nIn u\n nserer Auswertung erfahren Sie\\, wie sich das Lohnniveau für das Jahr 20\n 19 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.info u\n m eine weitere spannende Funktion erweitert.  Unternehmen können auf Job\n wert.info ihre Benefit-Leistungen angeben. In unserem Expertenforum woll\n en wir Ihnen einen Branchenvergleich gezahlter Benefit-Leistungen nicht \n vorenthalten.  \\n\\n\\n\\n\\nEB-SmartLinks: Mit diesen Links verbessern Sie \n Employer Branding und CandEx\\nWir haben die EB-Links\\, die unsere Partne\n r für ihre Bewerberkommunikation verwenden\\, deutlich verbessert! Ihre B\n ewerber erhalten dank der neuen EB-Links strukturierte Informationen übe\n r alle  weiteren Schritte nach Erhalt eines Empfehlungscodes. Wie Sie Sm\n artLinks nutzbringend für das Arbeitgeber-Image Ihres Unternehmens einse\n tzen\\, erfahren Sie vor Ort. \\n\\n\\n\\nWorkshop: Erfahrungsaustausch zu ak\n tuellen Trends des Personalmarketings\\nIn einer offenen Gesprächsrunde m\n öchte wir mit Ihnen gemeinsam erkunden\\, welche Trends des Personalmarke\n tings für Ihre Personalarbeit aktuell Relevanz haben und welche Trends I\n hnen höchstens ein müdes Gähnen abringen können. Da unser Metier in den \n Bereichen Employer Branding\\, E-Recruiting\\, Candidate Experience\\, und \n HR-Tech liegt\\, sind wir sehr gespannt\\, mit welchen Themen Sie sich akt\n uell und in den kommenden Jahren aktiv auseinandersetzen werden.   \\n\\n\\\n n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/40\nSUMMARY:Offenes Expertenforum Personalmanagement in Dresden\\, München\\, B\n erlin und Leipzig\nORGANIZER;CN=CompuSafe Data Systems AG / Empfehlungsbund.de:https://www.e\n mpfehlungsbund.de/events/40\nATTACH:https://www.empfehlungsbund.de/events/40\nLOCATION:CompuSafe Data Systems AG\\, Oetztaler Straße 18\\, 81373 München\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eHerzlich Willkommen zum Exper\n tenforum Personalmanagement 2019 in Dresden, Berlin, Leipzig und München\n . Hier finden Personalexperten und Führungskräfte regionaler Unternehmen\n  zusammen, um neue Entwicklungen und Ideen für eine erfolgversprechende \n Personalarbeit zu besprechen. Wir ermutigen unsere Workshopteilnehmer, d\n iese Ideen zu evaluieren und mit Ihren Beiträgen die Weiterentwicklung d\n es Konzeptes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \u003cbr\n \u003e\u003cbr\u003eAuf der Agenda steht unter anderem \u003cstrong\u003edie Auswertung des Gehal\n tsbenchmarks und Benefit-Leistungen für 2019\u003c/strong\u003e. Des Weiteren möch\n ten wir Ihnen zeigen, \u003cstrong\u003ewie Sie mit EB-Smartlinks Ihre Candidate E\n xperience deutlich optimieren können\u003c/strong\u003e. Für unseren Workshop woll\n en wir über Ihre aktuellen Trends im Personalmarketing diskutieren. Was \n treibt Sie momentan um und was ist nicht mehr zeitgemäß? Wir freuen uns \n auf Ihre Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei\n . Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorische\n n Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer E\n mpfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnu\n ng durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eDer aktuelle \n Gehaltsbenchmark + Benefitauswertung 2019\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eDer Empf\n ehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­\n el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on\n  und Bran­che.\u003cbr\u003eIn unserer Auswertung erfahren Sie, wie sich das Lohnn\n iveau für das Jahr 2019 gestaltet. Außerdem haben wir den Gehaltsbenchma\n rk von Jobwert.info um eine weitere spannende Funktion erweitert.\u0026nbsp; \n Unternehmen können auf Jobwert.info ihre Benefit-Leistungen angeben. In \n unserem Expertenforum wollen wir Ihnen einen Branchenvergleich gezahlter\n  Benefit-Leistungen nicht vorenthalten. \u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\n \u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eEB-SmartLinks: Mit diesen Links verbessern Sie Emp\n loyer Branding und CandEx\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir haben die EB-Links, \n die unsere Partner für ihre Bewerberkommunikation verwenden, deutlich ve\n rbessert! Ihre Bewerber erhalten dank der neuen EB-Links strukturierte I\n nformationen über alle\u0026nbsp; weiteren Schritte nach Erhalt eines Empfehl\n ungscodes. Wie Sie SmartLinks nutzbringend für das Arbeitgeber-Image Ihr\n es Unternehmens einsetzen, erfahren Sie vor Ort.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\n \u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eWorkshop: Erfahrungsaustausch zu aktuellen Trends des\n  Personalmarketings\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eIn einer offenen Gesprächsrund\n e möchte wir mit Ihnen gemeinsam erkunden, welche Trends des Personalmar\n ketings für Ihre Personalarbeit aktuell Relevanz haben und welche Trends\n  Ihnen höchstens ein müdes Gähnen abringen können. Da unser Metier in de\n n Bereichen Employer Branding, E-Recruiting, Candidate Experience, und H\n R-Tech liegt, sind wir sehr gespannt, mit welchen Themen Sie sich aktuel\n l und in den kommenden Jahren aktiv auseinandersetzen werden.\u0026nbsp; \u0026nbs\n p;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9212963,"Bezeichnung":"CompuSafe Data Systems AG","Kommentar":"","Typ":52,"Nutzername":"compusafe","Website":"https://www.compusafe.de/karriere/","created_at":"2016-06-14T20:57:11.000+02:00","updated_at":"2021-06-18T10:59:27.000+02:00"}}]},{"id":41,"name":"EB auf der Zukunft Personal","hashtag":"ebcw","title":"Der Empfehlungsbund auf der Zukunft Personal in Stuttgart","teaser":"Mit unserer Ausstellerschaft auf der Zukunft Personal Süd wollen wir neue Partner erschließen, die von der Wirtschaftlichkeit einer interbetrieblichen Zusammenarbeit zur effektiveren Personalgewinnung ebenso profitieren möchten, wie unsere 250 begeisterten Bestandskunden. Lernen Sie das Empfehlungsprinzip kennen und überzeugen Sie sich selbst von der Performance unserer Empfehlungscommunitys. Wir freuen uns auf Sie!\r\n","teaser_hrfilter":"Mit unserer Ausstellerschaft auf der Zukunft Personal Süd wollen wir neue Partner erschließen, die von der Wirtschaftlichkeit einer interbetrieblichen Zusammenarbeit zur effektiveren Personalgewinnung ebenso profitieren möchten, wie unsere 250 treuen Bestandskunden. Lernen Sie uns persönlich kennen! Hierfür verlosen wir 1-Tages-Besuchertickets. Bis bald in Stuttgart! ","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eSeit 10 Jahren bewähren sich unsere regionalen Empfehlungscommunitys als wichtige Quelle des Fach- und Führungskräftegewinns für unsere 250 Mitgliedsunternehmen. In Sachsen, Mitteldeutschland, Bayern, sowie Berlin und Brandenburg überzeugten wir erfolgreich Arbeitgeber mit ähnlichem Fachkräftebedarf zur gegenseitigen Zusammenarbeit in der Fachkräftegewinnung. Gemeinsam gründeten wir in diesen Regionen branchenspezifische Fachkräftemärkte für ITK-Berufe, für kaufmännische Berufe, sowie für Gesundheit- und Sozialberufe.\u003cbr\u003e\u0026nbsp;\u003cbr\u003eUnsere Mitgliedsunternehmen sind seitdem stetig gewachsen. Neue Standorte wurden überall in Deutschland eröffnet. Mit dem Wachstum seiner Mitglieder, wuchs auch der Empfehlungsbund. Die neuen Standorte unserer treuen Partner, insbesondere in Baden-Württemberg, Nordrhein-Westfalen und Hessen legen den Grundstein für neue Empfehlungscommunitys.\u0026nbsp;\u003cbr\u003e\u0026nbsp;\u003cbr\u003eUnsere branchenspezifischen Empfehlungscommunitys sind weder Datenbanken noch Talentpools. Sie sind auch keine Matchingalgorithmen. Unsere Communitys leben von ihren Mitgliedsunternehmen. Gemeinsam empfehlen sie ihre potenziellen Bewerber und abgesagten Kandidaten auf ein gemeinsames Stellenangebot. Mit einfacher Zusammenarbeit vermarkten unsere Mitglieder Ihren eigenen Stellenmarkt, geben Jobsuchenden wichtige Orientierung im Arbeitsmarkt und pflegen dabei ihr Unternehmensimage.\u003cbr\u003e\u0026nbsp;\u003cbr\u003eMit unserer Ausstellerschaft auf der Zukunft Personal Süd wollen wir neue Partner erschließen, die von der Wirtschaftlichkeit einer interbetrieblichen Zusammenarbeit zur effektiveren Personalgewinnung ebenso profitieren möchten, wie es unsere 250 treuen Partner bereits jetzt tun. Lernen Sie uns persönlich kennen, auf der Zukunft Personal Süd in Stuttgart. Wir freuen uns auf Sie!\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e","agenda":"\u003ch1\u003e\u003cstrong\u003eDas Empfehlungsprinzip\u0026nbsp;\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir verbinden einen respektvollen Umgang mit Jobsuchenden und eine Multichannel-Empfehlungsmarketing-Strategie zu einem erfolgreichen Organisationsmodell für regionale Arbeitgeber mit ähnlichem Fachkräftebedarf. Erfahren Sie von uns, was eine Empfehlung bewirken kann.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eUnsere Empfehlungscommunitys\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWir blicken auf 10 Jahre Erfahrung in der Gründung von Unternehmensgemeinschaften zurück. Die Zusammenarbeit unserer Empfehlungscommunitys mit ortsansässigen Hochschulen, Fachveranstaltungen und Verbänden katalysiert den regionalen Fachkräftemarkt noch weiter. Vor Ort verraten wir Ihnen, wie unsere Empfehlungscommunitys wirtschaftlich agieren. \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eDas Empfehlungsbund Bewerbermanagementsystem - EBMS\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eFür unsere Mitglieder entwickeln wir funktionale Personalsoftware, die für unsere Partner eine Prozesserleichterung in ihrer Recruiting-Maßnahmen darstellen. Dazu gehört unser EBMS - ein modernes, datenschutzkonformes Bewerbermanagementsystem, das unseren Mitgliedern bei der Umsetzung des Empfehlungsprinzips unterstützt. Lernen Sie die Vorteile unseres BMS kennen, das zeitgleich Ihr Arbeitgeberimage und Ihr Empfehlungsmarketing stärkt.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003ePersonalexpertise durch geteiltes Fachwissen\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eDie Mitgliedschaft in einer Empfehlungscommunity hat viele weitere Vorteile. Wir veranstalten Community Projekte mit dem klaren Ziel die Personalarbeit unserer Mitglieder durch Austausch relevanter Fachinformationen weiter zu optimieren. Erfahren Sie mehr über unsere konstruktiven Projekte:\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eregelmäßige Expertentreffen\u003c/li\u003e\u003cli\u003egemeinsamer Gehaltsbenchmark\u003c/li\u003e\u003cli\u003eRecruitingkanal-Abgleich\u003c/li\u003e\u003cli\u003eCandEx-Vergleich\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e","start":"2019-04-09T10:00:19.000+02:00","finish":"2019-04-10T17:00:06.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/41/wide_Zukunft-Pesronal-Sued_Newsletter_300x200.jpg","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/41/wide_csm_Zukunft-Personal-Sued_Signatur_Aussteller2_d38a0cd2f3.jpg","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/41/Zukunft-Pesronal-Sued_Newsletter_300x200.jpg","register_url":"https://www.empfehlungsbund.de/events/41/register","show_url":"https://www.empfehlungsbund.de/events/41","events":[{"id":99,"display_line":"09.04.2019 - 10 bis 17:00 Uhr Leinfelden-Echterdingen - Messe Stuttgart Messepiazza 1, 70629 Stuttgart - Gastgeber: pludoni GmbH","subtitle":"Messe Stuttgart Messepiazza 1, 70629 Stuttgart","city":"Leinfelden-Echterdingen","start":"2019-04-09T10:00:19.000+02:00","finish":"2019-04-09T17:00:19.000+02:00","address":"Messepiazza 1, 70629 Stuttgart","event_host":"pludoni GmbH","lat":48.6937,"lon":9.18688,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190409T170019\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190409T100019\nCATEGORIES:BUSINESS\nDESCRIPTION:Seit 10 Jahren bewähren sich unsere regionalen Empfehlungscom\n munitys als wichtige Quelle des Fach- und Führungskräftegewinns für unse\n re 250 Mitgliedsunternehmen. In Sachsen\\, Mitteldeutschland\\, Bayern\\, s\n owie Berlin und Brandenburg überzeugten wir erfolgreich Arbeitgeber mit \n ähnlichem Fachkräftebedarf zur gegenseitigen Zusammenarbeit in der Fachk\n räftegewinnung. Gemeinsam gründeten wir in diesen Regionen branchenspezi\n fische Fachkräftemärkte für ITK-Berufe\\, für kaufmännische Berufe\\, sowi\n e für Gesundheit- und Sozialberufe.\\n \\nUnsere Mitgliedsunternehmen sind\n  seitdem stetig gewachsen. Neue Standorte wurden überall in Deutschland \n eröffnet. Mit dem Wachstum seiner Mitglieder\\, wuchs auch der Empfehlung\n sbund. Die neuen Standorte unserer treuen Partner\\, insbesondere in Bade\n n-Württemberg\\, Nordrhein-Westfalen und Hessen legen den Grundstein für \n neue Empfehlungscommunitys. \\n \\nUnsere branchenspezifischen Empfehlungs\n communitys sind weder Datenbanken noch Talentpools. Sie sind auch keine \n Matchingalgorithmen. Unsere Communitys leben von ihren Mitgliedsunterneh\n men. Gemeinsam empfehlen sie ihre potenziellen Bewerber und abgesagten K\n andidaten auf ein gemeinsames Stellenangebot. Mit einfacher Zusammenarbe\n it vermarkten unsere Mitglieder Ihren eigenen Stellenmarkt\\, geben Jobsu\n chenden wichtige Orientierung im Arbeitsmarkt und pflegen dabei ihr Unte\n rnehmensimage.\\n \\nMit unserer Ausstellerschaft auf der Zukunft Personal\n  Süd wollen wir neue Partner erschließen\\, die von der Wirtschaftlichkei\n t einer interbetrieblichen Zusammenarbeit zur effektiveren Personalgewin\n nung ebenso profitieren möchten\\, wie es unsere 250 treuen Partner berei\n ts jetzt tun. Lernen Sie uns persönlich kennen\\, auf der Zukunft Persona\n l Süd in Stuttgart. Wir freuen uns auf Sie!\\n\\n\\n\\nDas Empfehlungsprinzi\n p \\nWir verbinden einen respektvollen Umgang mit Jobsuchenden und eine M\n ultichannel-Empfehlungsmarketing-Strategie zu einem erfolgreichen Organi\n sationsmodell für regionale Arbeitgeber mit ähnlichem Fachkräftebedarf. \n Erfahren Sie von uns\\, was eine Empfehlung bewirken kann.\\n\\n\\nUnsere Em\n pfehlungscommunitys\\n\\nWir blicken auf 10 Jahre Erfahrung in der Gründun\n g von Unternehmensgemeinschaften zurück. Die Zusammenarbeit unserer Empf\n ehlungscommunitys mit ortsansässigen Hochschulen\\, Fachveranstaltungen u\n nd Verbänden katalysiert den regionalen Fachkräftemarkt noch weiter. Vor\n  Ort verraten wir Ihnen\\, wie unsere Empfehlungscommunitys wirtschaftlic\n h agieren.  \\n\\n\\nDas Empfehlungsbund Bewerbermanagementsystem - EBMS\\nF\n ür unsere Mitglieder entwickeln wir funktionale Personalsoftware\\, die f\n ür unsere Partner eine Prozesserleichterung in ihrer Recruiting-Maßnahme\n n darstellen. Dazu gehört unser EBMS - ein modernes\\, datenschutzkonform\n es Bewerbermanagementsystem\\, das unseren Mitgliedern bei der Umsetzung \n des Empfehlungsprinzips unterstützt. Lernen Sie die Vorteile unseres BMS\n  kennen\\, das zeitgleich Ihr Arbeitgeberimage und Ihr Empfehlungsmarketi\n ng stärkt.\\n\\n\\nPersonalexpertise durch geteiltes Fachwissen\\nDie Mitgli\n edschaft in einer Empfehlungscommunity hat viele weitere Vorteile. Wir v\n eranstalten Community Projekte mit dem klaren Ziel die Personalarbeit un\n serer Mitglieder durch Austausch relevanter Fachinformationen weiter zu \n optimieren. Erfahren Sie mehr über unsere konstruktiven Projekte:\\n\\n\\n*\n  regelmäßige Expertentreffen* gemeinsamer Gehaltsbenchmark* Recruitingka\n nal-Abgleich* CandEx-Vergleich\\n\\n\nURL:https://www.empfehlungsbund.de/events/41\nSUMMARY:Der Empfehlungsbund auf der Zukunft Personal in Stuttgart\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/41\nATTACH:https://www.empfehlungsbund.de/events/41\nLOCATION:pludoni GmbH\\, Messepiazza 1\\, 70629 Stuttgart\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eSeit 10 Jahren bewähren sich \n unsere regionalen Empfehlungscommunitys als wichtige Quelle des Fach- un\n d Führungskräftegewinns für unsere 250 Mitgliedsunternehmen. In Sachsen,\n  Mitteldeutschland, Bayern, sowie Berlin und Brandenburg überzeugten wir\n  erfolgreich Arbeitgeber mit ähnlichem Fachkräftebedarf zur gegenseitige\n n Zusammenarbeit in der Fachkräftegewinnung. Gemeinsam gründeten wir in \n diesen Regionen branchenspezifische Fachkräftemärkte für ITK-Berufe, für\n  kaufmännische Berufe, sowie für Gesundheit- und Sozialberufe.\u003cbr\u003e\u0026nbsp;\n \u003cbr\u003eUnsere Mitgliedsunternehmen sind seitdem stetig gewachsen. Neue Stan\n dorte wurden überall in Deutschland eröffnet. Mit dem Wachstum seiner Mi\n tglieder, wuchs auch der Empfehlungsbund. Die neuen Standorte unserer tr\n euen Partner, insbesondere in Baden-Württemberg, Nordrhein-Westfalen und\n  Hessen legen den Grundstein für neue Empfehlungscommunitys.\u0026nbsp;\u003cbr\u003e\u0026n\n bsp;\u003cbr\u003eUnsere branchenspezifischen Empfehlungscommunitys sind weder Dat\n enbanken noch Talentpools. Sie sind auch keine Matchingalgorithmen. Unse\n re Communitys leben von ihren Mitgliedsunternehmen. Gemeinsam empfehlen \n sie ihre potenziellen Bewerber und abgesagten Kandidaten auf ein gemeins\n ames Stellenangebot. Mit einfacher Zusammenarbeit vermarkten unsere Mitg\n lieder Ihren eigenen Stellenmarkt, geben Jobsuchenden wichtige Orientier\n ung im Arbeitsmarkt und pflegen dabei ihr Unternehmensimage.\u003cbr\u003e\u0026nbsp;\u003cb\n r\u003eMit unserer Ausstellerschaft auf der Zukunft Personal Süd wollen wir n\n eue Partner erschließen, die von der Wirtschaftlichkeit einer interbetri\n eblichen Zusammenarbeit zur effektiveren Personalgewinnung ebenso profit\n ieren möchten, wie es unsere 250 treuen Partner bereits jetzt tun. Lerne\n n Sie uns persönlich kennen, auf der Zukunft Personal Süd in Stuttgart. \n Wir freuen uns auf Sie!\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eDas Empfehlungsprinzip\u0026\n nbsp;\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir verbinden einen respektvollen Umgang mit\n  Jobsuchenden und eine Multichannel-Empfehlungsmarketing-Strategie zu ei\n nem erfolgreichen Organisationsmodell für regionale Arbeitgeber mit ähnl\n ichem Fachkräftebedarf. Erfahren Sie von uns, was eine Empfehlung bewirk\n en kann.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eUnsere Empfehlungscommunitys\u003c/strong\u003e\u003c\n /h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWir blicken auf 10 Jahre Erfahrung in der Gründu\n ng von Unternehmensgemeinschaften zurück. Die Zusammenarbeit unserer Emp\n fehlungscommunitys mit ortsansässigen Hochschulen, Fachveranstaltungen u\n nd Verbänden katalysiert den regionalen Fachkräftemarkt noch weiter. Vor\n  Ort verraten wir Ihnen, wie unsere Empfehlungscommunitys wirtschaftlich\n  agieren. \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eDas Empfehlungsbund Bewerberma\n nagementsystem - EBMS\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eFür unsere Mitglieder entwic\n keln wir funktionale Personalsoftware, die für unsere Partner eine Proze\n sserleichterung in ihrer Recruiting-Maßnahmen darstellen. Dazu gehört un\n ser EBMS - ein modernes, datenschutzkonformes Bewerbermanagementsystem, \n das unseren Mitgliedern bei der Umsetzung des Empfehlungsprinzips unters\n tützt. Lernen Sie die Vorteile unseres BMS kennen, das zeitgleich Ihr Ar\n beitgeberimage und Ihr Empfehlungsmarketing stärkt.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cst\n rong\u003ePersonalexpertise durch geteiltes Fachwissen\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\n Die Mitgliedschaft in einer Empfehlungscommunity hat viele weitere Vorte\n ile. Wir veranstalten Community Projekte mit dem klaren Ziel die Persona\n larbeit unserer Mitglieder durch Austausch relevanter Fachinformationen \n weiter zu optimieren. Erfahren Sie mehr über unsere konstruktiven Projek\n te:\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eregelmäßige Expertentreffen\u003c/li\u003e\u003cli\u003egemeinsamer\n  Gehaltsbenchmark\u003c/li\u003e\u003cli\u003eRecruitingkanal-Abgleich\u003c/li\u003e\u003cli\u003eCandEx-Vergle\n ich\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}},{"id":100,"display_line":"10.04.2019 - 10 bis 17:00 Uhr Leinfelden-Echterdingen - Messe Stuttgart Messepiazza 1, 70629 Stuttgart - Gastgeber: pludoni GmbH","subtitle":"Messe Stuttgart Messepiazza 1, 70629 Stuttgart","city":"Leinfelden-Echterdingen","start":"2019-04-10T10:00:06.000+02:00","finish":"2019-04-10T17:00:06.000+02:00","address":"Messepiazza 1, 70629 Stuttgart","event_host":"pludoni GmbH","lat":48.6937,"lon":9.18688,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20190331T020000\nRDATE:20190331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190410T170006\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190410T100006\nCATEGORIES:BUSINESS\nDESCRIPTION:Seit 10 Jahren bewähren sich unsere regionalen Empfehlungscom\n munitys als wichtige Quelle des Fach- und Führungskräftegewinns für unse\n re 250 Mitgliedsunternehmen. In Sachsen\\, Mitteldeutschland\\, Bayern\\, s\n owie Berlin und Brandenburg überzeugten wir erfolgreich Arbeitgeber mit \n ähnlichem Fachkräftebedarf zur gegenseitigen Zusammenarbeit in der Fachk\n räftegewinnung. Gemeinsam gründeten wir in diesen Regionen branchenspezi\n fische Fachkräftemärkte für ITK-Berufe\\, für kaufmännische Berufe\\, sowi\n e für Gesundheit- und Sozialberufe.\\n \\nUnsere Mitgliedsunternehmen sind\n  seitdem stetig gewachsen. Neue Standorte wurden überall in Deutschland \n eröffnet. Mit dem Wachstum seiner Mitglieder\\, wuchs auch der Empfehlung\n sbund. Die neuen Standorte unserer treuen Partner\\, insbesondere in Bade\n n-Württemberg\\, Nordrhein-Westfalen und Hessen legen den Grundstein für \n neue Empfehlungscommunitys. \\n \\nUnsere branchenspezifischen Empfehlungs\n communitys sind weder Datenbanken noch Talentpools. Sie sind auch keine \n Matchingalgorithmen. Unsere Communitys leben von ihren Mitgliedsunterneh\n men. Gemeinsam empfehlen sie ihre potenziellen Bewerber und abgesagten K\n andidaten auf ein gemeinsames Stellenangebot. Mit einfacher Zusammenarbe\n it vermarkten unsere Mitglieder Ihren eigenen Stellenmarkt\\, geben Jobsu\n chenden wichtige Orientierung im Arbeitsmarkt und pflegen dabei ihr Unte\n rnehmensimage.\\n \\nMit unserer Ausstellerschaft auf der Zukunft Personal\n  Süd wollen wir neue Partner erschließen\\, die von der Wirtschaftlichkei\n t einer interbetrieblichen Zusammenarbeit zur effektiveren Personalgewin\n nung ebenso profitieren möchten\\, wie es unsere 250 treuen Partner berei\n ts jetzt tun. Lernen Sie uns persönlich kennen\\, auf der Zukunft Persona\n l Süd in Stuttgart. Wir freuen uns auf Sie!\\n\\n\\n\\nDas Empfehlungsprinzi\n p \\nWir verbinden einen respektvollen Umgang mit Jobsuchenden und eine M\n ultichannel-Empfehlungsmarketing-Strategie zu einem erfolgreichen Organi\n sationsmodell für regionale Arbeitgeber mit ähnlichem Fachkräftebedarf. \n Erfahren Sie von uns\\, was eine Empfehlung bewirken kann.\\n\\n\\nUnsere Em\n pfehlungscommunitys\\n\\nWir blicken auf 10 Jahre Erfahrung in der Gründun\n g von Unternehmensgemeinschaften zurück. Die Zusammenarbeit unserer Empf\n ehlungscommunitys mit ortsansässigen Hochschulen\\, Fachveranstaltungen u\n nd Verbänden katalysiert den regionalen Fachkräftemarkt noch weiter. Vor\n  Ort verraten wir Ihnen\\, wie unsere Empfehlungscommunitys wirtschaftlic\n h agieren.  \\n\\n\\nDas Empfehlungsbund Bewerbermanagementsystem - EBMS\\nF\n ür unsere Mitglieder entwickeln wir funktionale Personalsoftware\\, die f\n ür unsere Partner eine Prozesserleichterung in ihrer Recruiting-Maßnahme\n n darstellen. Dazu gehört unser EBMS - ein modernes\\, datenschutzkonform\n es Bewerbermanagementsystem\\, das unseren Mitgliedern bei der Umsetzung \n des Empfehlungsprinzips unterstützt. Lernen Sie die Vorteile unseres BMS\n  kennen\\, das zeitgleich Ihr Arbeitgeberimage und Ihr Empfehlungsmarketi\n ng stärkt.\\n\\n\\nPersonalexpertise durch geteiltes Fachwissen\\nDie Mitgli\n edschaft in einer Empfehlungscommunity hat viele weitere Vorteile. Wir v\n eranstalten Community Projekte mit dem klaren Ziel die Personalarbeit un\n serer Mitglieder durch Austausch relevanter Fachinformationen weiter zu \n optimieren. Erfahren Sie mehr über unsere konstruktiven Projekte:\\n\\n\\n*\n  regelmäßige Expertentreffen* gemeinsamer Gehaltsbenchmark* Recruitingka\n nal-Abgleich* CandEx-Vergleich\\n\\n\nURL:https://www.empfehlungsbund.de/events/41\nSUMMARY:Der Empfehlungsbund auf der Zukunft Personal in Stuttgart\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/41\nATTACH:https://www.empfehlungsbund.de/events/41\nLOCATION:pludoni GmbH\\, Messepiazza 1\\, 70629 Stuttgart\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eSeit 10 Jahren bewähren sich \n unsere regionalen Empfehlungscommunitys als wichtige Quelle des Fach- un\n d Führungskräftegewinns für unsere 250 Mitgliedsunternehmen. In Sachsen,\n  Mitteldeutschland, Bayern, sowie Berlin und Brandenburg überzeugten wir\n  erfolgreich Arbeitgeber mit ähnlichem Fachkräftebedarf zur gegenseitige\n n Zusammenarbeit in der Fachkräftegewinnung. Gemeinsam gründeten wir in \n diesen Regionen branchenspezifische Fachkräftemärkte für ITK-Berufe, für\n  kaufmännische Berufe, sowie für Gesundheit- und Sozialberufe.\u003cbr\u003e\u0026nbsp;\n \u003cbr\u003eUnsere Mitgliedsunternehmen sind seitdem stetig gewachsen. Neue Stan\n dorte wurden überall in Deutschland eröffnet. Mit dem Wachstum seiner Mi\n tglieder, wuchs auch der Empfehlungsbund. Die neuen Standorte unserer tr\n euen Partner, insbesondere in Baden-Württemberg, Nordrhein-Westfalen und\n  Hessen legen den Grundstein für neue Empfehlungscommunitys.\u0026nbsp;\u003cbr\u003e\u0026n\n bsp;\u003cbr\u003eUnsere branchenspezifischen Empfehlungscommunitys sind weder Dat\n enbanken noch Talentpools. Sie sind auch keine Matchingalgorithmen. Unse\n re Communitys leben von ihren Mitgliedsunternehmen. Gemeinsam empfehlen \n sie ihre potenziellen Bewerber und abgesagten Kandidaten auf ein gemeins\n ames Stellenangebot. Mit einfacher Zusammenarbeit vermarkten unsere Mitg\n lieder Ihren eigenen Stellenmarkt, geben Jobsuchenden wichtige Orientier\n ung im Arbeitsmarkt und pflegen dabei ihr Unternehmensimage.\u003cbr\u003e\u0026nbsp;\u003cb\n r\u003eMit unserer Ausstellerschaft auf der Zukunft Personal Süd wollen wir n\n eue Partner erschließen, die von der Wirtschaftlichkeit einer interbetri\n eblichen Zusammenarbeit zur effektiveren Personalgewinnung ebenso profit\n ieren möchten, wie es unsere 250 treuen Partner bereits jetzt tun. Lerne\n n Sie uns persönlich kennen, auf der Zukunft Personal Süd in Stuttgart. \n Wir freuen uns auf Sie!\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eDas Empfehlungsprinzip\u0026\n nbsp;\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eWir verbinden einen respektvollen Umgang mit\n  Jobsuchenden und eine Multichannel-Empfehlungsmarketing-Strategie zu ei\n nem erfolgreichen Organisationsmodell für regionale Arbeitgeber mit ähnl\n ichem Fachkräftebedarf. Erfahren Sie von uns, was eine Empfehlung bewirk\n en kann.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eUnsere Empfehlungscommunitys\u003c/strong\u003e\u003c\n /h1\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWir blicken auf 10 Jahre Erfahrung in der Gründu\n ng von Unternehmensgemeinschaften zurück. Die Zusammenarbeit unserer Emp\n fehlungscommunitys mit ortsansässigen Hochschulen, Fachveranstaltungen u\n nd Verbänden katalysiert den regionalen Fachkräftemarkt noch weiter. Vor\n  Ort verraten wir Ihnen, wie unsere Empfehlungscommunitys wirtschaftlich\n  agieren. \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cstrong\u003eDas Empfehlungsbund Bewerberma\n nagementsystem - EBMS\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003eFür unsere Mitglieder entwic\n keln wir funktionale Personalsoftware, die für unsere Partner eine Proze\n sserleichterung in ihrer Recruiting-Maßnahmen darstellen. Dazu gehört un\n ser EBMS - ein modernes, datenschutzkonformes Bewerbermanagementsystem, \n das unseren Mitgliedern bei der Umsetzung des Empfehlungsprinzips unters\n tützt. Lernen Sie die Vorteile unseres BMS kennen, das zeitgleich Ihr Ar\n beitgeberimage und Ihr Empfehlungsmarketing stärkt.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch1\u003e\u003cst\n rong\u003ePersonalexpertise durch geteiltes Fachwissen\u003c/strong\u003e\u003c/h1\u003e\u003cdiv\u003e\u003cbr\u003e\n Die Mitgliedschaft in einer Empfehlungscommunity hat viele weitere Vorte\n ile. Wir veranstalten Community Projekte mit dem klaren Ziel die Persona\n larbeit unserer Mitglieder durch Austausch relevanter Fachinformationen \n weiter zu optimieren. Erfahren Sie mehr über unsere konstruktiven Projek\n te:\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eregelmäßige Expertentreffen\u003c/li\u003e\u003cli\u003egemeinsamer\n  Gehaltsbenchmark\u003c/li\u003e\u003cli\u003eRecruitingkanal-Abgleich\u003c/li\u003e\u003cli\u003eCandEx-Vergle\n ich\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":39,"name":"ebcw_201901","hashtag":"ebcw","title":"Empfehlungsbund Community Workshop in Dresden, Leipzig, München und Berlin","teaser":"Freuen Sie sich in unserem Januar-Treffen auf die Ergebnisse unserer Kanaleo Candidate Experience Studie 2018! Wir haben reichlich Bewerberstimmen gesammelt, woraus wir für Sie Handlungsempfehlungen ableiten konnten, wie Sie am besten Ihre Bewerber zu Empfehlern für Ihr Unternehmen machen. Ferner gibt es einige technische Neuerungen an Coworkr und dem Empfehlungsbund Bewerbermanagementsystem zu berichten. Wir präsentieren einen aktuellen Stand zu unserer jüngsten Community SANOsax.de, deren Entwicklung wir mit umfassenden Analysen verfolgt haben. Wir beabsichtigen, diese Analysen künftig auch für andere Communitys einzusetzen. Außerdem wollen wir unsere Partner mehr in den Mittelpunkt rücken. In unserem Workshop möchten wir auf Basis unseres neuen Kundenfeedbacks die kommenden Entwicklungen des Empfehlungsbundes mit Ihnen gemeinsam priorisieren.","teaser_hrfilter":"Freuen Sie sich in unserem kommenden Community Workshop auf unsere Kanaleo Candidate Experience Studie 2018! Kanaleo hat über 1.000 umfassende Bewerberstimmen gesammelt, woraus wir Handlungsempfehlungen ableiten konnten, wie Sie am besten Ihre Bewerber zu Empfehler für Ihr Unternehmen machen. Diese und viele weitere interessante Einblicke erwarten Sie auf dem Empfehlungsbund Community Workshop im Januar! ","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eWie lassen sich Personalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mit Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinschaft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFreuen Sie sich in unserem Januar-Treffen auf die Ergebnisse unserer Kanaleo Candidate Experience Studie 2018! Wir haben reichlich Bewerberstimmen gesammelt, woraus wir für Sie Handlungsempfehlungen ableiten konnten, wie Sie am besten Ihre Bewerber zu Empfehler für Ihr Unternehmen machen.\u003c/strong\u003e Ferner gibt es einige technische Neuerungen an Coworkr und dem Empfehlungsbund Bewerbermanagementsystem zu berichten. Wir präsentieren einen aktuellen Stand zu unserer jüngsten Community SANOsax.de, deren Entwicklung wir mit umfassenden Analysen verfolgt haben. Wir beabsichtigen, diese Analysen künftig auch für andere Communitys einzusetzen. Außerdem wollen wir unsere Partner mehr in den Mittelpunkt rücken. In unserem Workshop möchten wir auf Basis unseres neuen Kundenfeedbacks die kommenden Entwicklungen des Empfehlungsbundes mit Ihnen gemeinsam priorisieren.\u0026nbsp; Wir freuen uns auf Sie! \u003cbr\u003e\u003cbr\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https://www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e","agenda":"\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eCandidate Experience: Ergebnisse der Kanaleo CandEx-Studie 2018\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWir haben im Laufe des Jahres 2017 Kanaleo um einen Candidate Experience Fragebogen erweitert. Dieser Fragebogen erreichte eine Vielzahl von Bewerbern kurz vor Abschluss ihres Bewerbungsprozesses und erlaubte es ihnen, ihre Bewerbungserfahrungen zu teilen. Seitdem erhielten wir weit über 1.000 Feedbacks. Genug um eine statistische Auswertung vorzubereiten. In unserem Community Workshop möchten wir Ihnen die Ergebnisse dieser Studie vorstellen. Kernpunkt sind Handlungsempfehlungen, die wir aus den Auswertungsergebnissen ableiten konnten.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eTechnische Updates: Optimiertes Coworkr-UI und EB-BMS Pilotphase\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eMit Coworkr bieten wir unseren Mitgliedern einen Service, sie bei der Durchführung ihrer Mitarbeiter-werben-Mitarbeiter-Programme zu unterstützen. Coworkr ermöglicht eine automatisierte Verteilung Ihres Stellenangebotes auf den Social Media-Profilen Ihrer Kollegen. Hier haben wir die Benutzeroberfläche deutlich verbessert. Außerdem reagierten wir auf Änderung der Nutzerbedingungen von Facebook, die eine automatische Verteilung auf privaten Nutzerprofilen nicht mehr ermöglicht.\u003cbr\u003eWeitere Verbesserungen wurden an unserem neuen Bewerbermanagementsystem EB-BMS vorgenommen, die wir Ihnen gerne vorstellen möchten. Die Änderungen basieren auf Erfahrungsberichten unserer EB-Pilotnutzer, die unter realen Bedingungen das EB-BMS einsetzen. \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eSANOsax.de: Der Entwicklungsstand der Empfehlungscommunity SANOsax.de\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eSANOsax.de wurde am 1. Februar 2018 offiziell gestartet. Im Verlauf dieses Jahres hat sich unsere jüngste Empfehlungscommunity zügig entwickelt. Sowohl der Anteil an teilnehmenden Einrichtungen als auch der regionale branchenspezifische Fachkräftemarkt, den wir gemeinsam mit unseren Partnern des Sozial- und Gesundheitswesens aufbauen möchten, wuchs trotz der üblichen Aktivitätsschwankungen des Arbeitsmarktes währnend der Sommerzeit weiter an. Wir werden Ihnen den Entwicklungsverlauf unseres Fachkräftemarktes für das Sozial- und Gesundheitswesen detailliert vorstellen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eWorkshop: Die Roadmap des Empfehlungsbundes auf Basis von Kundenfeedbacks \u0026nbsp;\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWohin soll die Reise gehen? Momentan arbeiten wir an einen Kundenzufriedenheitsfragebogen, der uns als Grundlage dienen soll, welche Projekte wir in Zukunft verwirklichen werden. Mit der ersten Version des Fragebogens im Januar werden wir unsere Bestandskunden um ein allgemeines Feedback bitten und dies für den Community Workshop auswerten. Für den Workshop möchten wir dann mit unseren Teilnehmern konkrete Schritte für unsere weiteren Entwicklungsplanung ableiten.\u0026nbsp;\u003c/div\u003e","start":"2019-01-29T15:00:12.000+01:00","finish":"2019-01-30T18:00:48.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/39/wide_CRM_Banner_EBCW_und_OXFP.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/39/wide_CRM_Banner_HRFILTER_EBCW_DresdenLeipzigM%C3%BCnchenBerlin.png","logo":null,"register_url":"https://www.empfehlungsbund.de/events/39/register","show_url":"https://www.empfehlungsbund.de/events/39","events":[{"id":92,"display_line":"29.01.2019 - 15 bis 18:00 Uhr Dresden - Empfehlungsbund Community Workshop in Dresden - Gastgeber: Communardo Software GmbH ","subtitle":"Empfehlungsbund Community Workshop in Dresden","city":"Dresden","start":"2019-01-29T15:00:12.000+01:00","finish":"2019-01-29T18:00:12.000+01:00","address":"Kleiststraße 10A, 01129 Dresden","event_host":"Communardo Software GmbH ","lat":51.0866,"lon":13.7283,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20181028T030000\nRDATE:20181028T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190129T180012\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190129T150012\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen Sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nFreuen Sie\n  sich in unserem Januar-Treffen auf die Ergebnisse unserer Kanaleo Candi\n date Experience Studie 2018! Wir haben reichlich Bewerberstimmen gesamme\n lt\\, woraus wir für Sie Handlungsempfehlungen ableiten konnten\\, wie Sie\n  am besten Ihre Bewerber zu Empfehler für Ihr Unternehmen machen. Ferner\n  gibt es einige technische Neuerungen an Coworkr und dem Empfehlungsbund\n  Bewerbermanagementsystem zu berichten. Wir präsentieren einen aktuellen\n  Stand zu unserer jüngsten Community SANOsax.de\\, deren Entwicklung wir \n mit umfassenden Analysen verfolgt haben. Wir beabsichtigen\\, diese Analy\n sen künftig auch für andere Communitys einzusetzen. Außerdem wollen wir \n unsere Partner mehr in den Mittelpunkt rücken. In unserem Workshop möcht\n en wir auf Basis unseres neuen Kundenfeedbacks die kommenden Entwicklung\n en des Empfehlungsbundes mit Ihnen gemeinsam priorisieren.  Wir freuen u\n ns auf Sie! \\n\\nDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anme\n ldung zur Freischaltung aus organisatorischen Gründen erforderlich.\\nDer\n  Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewin\n nung durch Empfehlungen in Deutschland.\\n\\n\\nCandidate Experience: Ergeb\n nisse der Kanaleo CandEx-Studie 2018\\n\\n\\nWir haben im Laufe des Jahres \n 2017 Kanaleo um einen Candidate Experience Fragebogen erweitert. Dieser \n Fragebogen erreichte eine Vielzahl von Bewerbern kurz vor Abschluss ihre\n s Bewerbungsprozesses und erlaubte es ihnen\\, ihre Bewerbungserfahrungen\n  zu teilen. Seitdem erhielten wir weit über 1.000 Feedbacks. Genug um ei\n ne statistische Auswertung vorzubereiten. In unserem Community Workshop \n möchten wir Ihnen die Ergebnisse dieser Studie vorstellen. Kernpunkt sin\n d Handlungsempfehlungen\\, die wir aus den Auswertungsergebnissen ableite\n n konnten. \\n\\n\\n\\nTechnische Updates: Optimiertes Coworkr-UI und EB-BMS\n  Pilotphase\\n\\n\\nMit Coworkr bieten wir unseren Mitgliedern einen Servic\n e\\, sie bei der Durchführung ihrer Mitarbeiter-werben-Mitarbeiter-Progra\n mme zu unterstützen. Coworkr ermöglicht eine automatisierte Verteilung I\n hres Stellenangebotes auf den Social Media-Profilen Ihrer Kollegen. Hier\n  haben wir die Benutzeroberfläche deutlich verbessert. Außerdem reagiert\n en wir auf Änderung der Nutzerbedingungen von Facebook\\, die eine automa\n tische Verteilung auf privaten Nutzerprofilen nicht mehr ermöglicht.\\nWe\n itere Verbesserungen wurden an unserem neuen Bewerbermanagementsystem EB\n -BMS vorgenommen\\, die wir Ihnen gerne vorstellen möchten. Die Änderunge\n n basieren auf Erfahrungsberichten unserer EB-Pilotnutzer\\, die unter re\n alen Bedingungen das EB-BMS einsetzen.  \\n\\n\\n\\nSANOsax.de: Der Entwickl\n ungsstand der Empfehlungscommunity SANOsax.de\\n\\n\\nSANOsax.de wurde am 1\n . Februar 2018 offiziell gestartet. Im Verlauf dieses Jahres hat sich un\n sere jüngste Empfehlungscommunity zügig entwickelt. Sowohl der Anteil an\n  teilnehmenden Einrichtungen als auch der regionale branchenspezifische \n Fachkräftemarkt\\, den wir gemeinsam mit unseren Partnern des Sozial- und\n  Gesundheitswesens aufbauen möchten\\, wuchs trotz der üblichen Aktivität\n sschwankungen des Arbeitsmarktes währnend der Sommerzeit weiter an. Wir \n werden Ihnen den Entwicklungsverlauf unseres Fachkräftemarktes für das S\n ozial- und Gesundheitswesen detailliert vorstellen. \\n\\n\\n\\nWorkshop: Di\n e Roadmap des Empfehlungsbundes auf Basis von Kundenfeedbacks  \\n\\n\\nWoh\n in soll die Reise gehen? Momentan arbeiten wir an einen Kundenzufriedenh\n eitsfragebogen\\, der uns als Grundlage dienen soll\\, welche Projekte wir\n  in Zukunft verwirklichen werden. Mit der ersten Version des Fragebogens\n  im Januar werden wir unsere Bestandskunden um ein allgemeines Feedback \n bitten und dies für den Community Workshop auswerten. Für den Workshop m\n öchten wir dann mit unseren Teilnehmern konkrete Schritte für unsere wei\n teren Entwicklungsplanung ableiten. \\n\nURL:https://www.empfehlungsbund.de/events/39\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=Communardo Software GmbH  / Empfehlungsbund.de:https://www.e\n mpfehlungsbund.de/events/39\nATTACH:https://www.empfehlungsbund.de/events/39\nLOCATION:Communardo Software GmbH \\, Kleiststraße 10A\\, 01129 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eWie lassen sich Personalgewin\n nungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo\n  und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech über\n haupt einen Nutzen für die Personalarbeit? In den Community Workshops de\n s Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte re\n gionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgve\n rsprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mi\n t Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die \n Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinsch\n aft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFreuen Sie sich in unserem Januar-Tref\n fen auf die Ergebnisse unserer Kanaleo Candidate Experience Studie 2018!\n  Wir haben reichlich Bewerberstimmen gesammelt, woraus wir für Sie Handl\n ungsempfehlungen ableiten konnten, wie Sie am besten Ihre Bewerber zu Em\n pfehler für Ihr Unternehmen machen.\u003c/strong\u003e Ferner gibt es einige techn\n ische Neuerungen an Coworkr und dem Empfehlungsbund Bewerbermanagementsy\n stem zu berichten. Wir präsentieren einen aktuellen Stand zu unserer jün\n gsten Community SANOsax.de, deren Entwicklung wir mit umfassenden Analys\n en verfolgt haben. Wir beabsichtigen, diese Analysen künftig auch für an\n dere Communitys einzusetzen. Außerdem wollen wir unsere Partner mehr in \n den Mittelpunkt rücken. In unserem Workshop möchten wir auf Basis unsere\n s neuen Kundenfeedbacks die kommenden Entwicklungen des Empfehlungsbunde\n s mit Ihnen gemeinsam priorisieren.\u0026nbsp; Wir freuen uns auf Sie! \u003cbr\u003e\u003cb\n r\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Frei\n schaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https:\n //www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eCandidate Experience: Ergebnisse der K\n analeo CandEx-Studie 2018\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWir haben im Laufe \n des Jahres 2017 Kanaleo um einen Candidate Experience Fragebogen erweite\n rt. Dieser Fragebogen erreichte eine Vielzahl von Bewerbern kurz vor Abs\n chluss ihres Bewerbungsprozesses und erlaubte es ihnen, ihre Bewerbungse\n rfahrungen zu teilen. Seitdem erhielten wir weit über 1.000 Feedbacks. G\n enug um eine statistische Auswertung vorzubereiten. In unserem Community\n  Workshop möchten wir Ihnen die Ergebnisse dieser Studie vorstellen. Ker\n npunkt sind Handlungsempfehlungen, die wir aus den Auswertungsergebnisse\n n ableiten konnten.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eTechnisch\n e Updates: Optimiertes Coworkr-UI und EB-BMS Pilotphase\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\n \u003c/div\u003e\u003cdiv\u003eMit Coworkr bieten wir unseren Mitgliedern einen Service, sie\n  bei der Durchführung ihrer Mitarbeiter-werben-Mitarbeiter-Programme zu \n unterstützen. Coworkr ermöglicht eine automatisierte Verteilung Ihres St\n ellenangebotes auf den Social Media-Profilen Ihrer Kollegen. Hier haben \n wir die Benutzeroberfläche deutlich verbessert. Außerdem reagierten wir \n auf Änderung der Nutzerbedingungen von Facebook, die eine automatische V\n erteilung auf privaten Nutzerprofilen nicht mehr ermöglicht.\u003cbr\u003eWeitere \n Verbesserungen wurden an unserem neuen Bewerbermanagementsystem EB-BMS v\n orgenommen, die wir Ihnen gerne vorstellen möchten. Die Änderungen basie\n ren auf Erfahrungsberichten unserer EB-Pilotnutzer, die unter realen Bed\n ingungen das EB-BMS einsetzen. \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eSANO\n sax.de: Der Entwicklungsstand der Empfehlungscommunity SANOsax.de\u003cbr\u003e\u003c/s\n trong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eSANOsax.de wurde am 1. Februar 2018 offiziell gesta\n rtet. Im Verlauf dieses Jahres hat sich unsere jüngste Empfehlungscommun\n ity zügig entwickelt. Sowohl der Anteil an teilnehmenden Einrichtungen a\n ls auch der regionale branchenspezifische Fachkräftemarkt, den wir gemei\n nsam mit unseren Partnern des Sozial- und Gesundheitswesens aufbauen möc\n hten, wuchs trotz der üblichen Aktivitätsschwankungen des Arbeitsmarktes\n  währnend der Sommerzeit weiter an. Wir werden Ihnen den Entwicklungsver\n lauf unseres Fachkräftemarktes für das Sozial- und Gesundheitswesen deta\n illiert vorstellen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eWorkshop: Die Ro\n admap des Empfehlungsbundes auf Basis von Kundenfeedbacks \u0026nbsp;\u003cbr\u003e\u003c/st\n rong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWohin soll die Reise gehen? Momentan arbeiten wir an\n  einen Kundenzufriedenheitsfragebogen, der uns als Grundlage dienen soll\n , welche Projekte wir in Zukunft verwirklichen werden. Mit der ersten Ve\n rsion des Fragebogens im Januar werden wir unsere Bestandskunden um ein \n allgemeines Feedback bitten und dies für den Community Workshop auswerte\n n. Für den Workshop möchten wir dann mit unseren Teilnehmern konkrete Sc\n hritte für unsere weiteren Entwicklungsplanung ableiten.\u0026nbsp;\u003c/div\u003e\u003c/BO\n DY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210009,"Bezeichnung":"Communardo Software GmbH ","Kommentar":"","Typ":10,"Nutzername":"communardo","Website":"https://www.communardo.de/karriere/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:34.000+02:00"}},{"id":93,"display_line":"30.01.2019 - 15 bis 18:00 Uhr Leipzig - Empfehlungsbund Community Workshop in Leipzig - Gastgeber: Rhebo GmbH","subtitle":"Empfehlungsbund Community Workshop in Leipzig","city":"Leipzig","start":"2019-01-30T15:00:47.000+01:00","finish":"2019-01-30T18:00:48.000+01:00","address":"Spinnereistraße 7, Halle 6, 2. OG, 04179 Leipzig","event_host":"Rhebo GmbH","lat":51.3262,"lon":12.3166,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20181028T030000\nRDATE:20181028T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190130T180048\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190130T150047\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen Sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nFreuen Sie\n  sich in unserem Januar-Treffen auf die Ergebnisse unserer Kanaleo Candi\n date Experience Studie 2018! Wir haben reichlich Bewerberstimmen gesamme\n lt\\, woraus wir für Sie Handlungsempfehlungen ableiten konnten\\, wie Sie\n  am besten Ihre Bewerber zu Empfehler für Ihr Unternehmen machen. Ferner\n  gibt es einige technische Neuerungen an Coworkr und dem Empfehlungsbund\n  Bewerbermanagementsystem zu berichten. Wir präsentieren einen aktuellen\n  Stand zu unserer jüngsten Community SANOsax.de\\, deren Entwicklung wir \n mit umfassenden Analysen verfolgt haben. Wir beabsichtigen\\, diese Analy\n sen künftig auch für andere Communitys einzusetzen. Außerdem wollen wir \n unsere Partner mehr in den Mittelpunkt rücken. In unserem Workshop möcht\n en wir auf Basis unseres neuen Kundenfeedbacks die kommenden Entwicklung\n en des Empfehlungsbundes mit Ihnen gemeinsam priorisieren.  Wir freuen u\n ns auf Sie! \\n\\nDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anme\n ldung zur Freischaltung aus organisatorischen Gründen erforderlich.\\nDer\n  Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewin\n nung durch Empfehlungen in Deutschland.\\n\\n\\nCandidate Experience: Ergeb\n nisse der Kanaleo CandEx-Studie 2018\\n\\n\\nWir haben im Laufe des Jahres \n 2017 Kanaleo um einen Candidate Experience Fragebogen erweitert. Dieser \n Fragebogen erreichte eine Vielzahl von Bewerbern kurz vor Abschluss ihre\n s Bewerbungsprozesses und erlaubte es ihnen\\, ihre Bewerbungserfahrungen\n  zu teilen. Seitdem erhielten wir weit über 1.000 Feedbacks. Genug um ei\n ne statistische Auswertung vorzubereiten. In unserem Community Workshop \n möchten wir Ihnen die Ergebnisse dieser Studie vorstellen. Kernpunkt sin\n d Handlungsempfehlungen\\, die wir aus den Auswertungsergebnissen ableite\n n konnten. \\n\\n\\n\\nTechnische Updates: Optimiertes Coworkr-UI und EB-BMS\n  Pilotphase\\n\\n\\nMit Coworkr bieten wir unseren Mitgliedern einen Servic\n e\\, sie bei der Durchführung ihrer Mitarbeiter-werben-Mitarbeiter-Progra\n mme zu unterstützen. Coworkr ermöglicht eine automatisierte Verteilung I\n hres Stellenangebotes auf den Social Media-Profilen Ihrer Kollegen. Hier\n  haben wir die Benutzeroberfläche deutlich verbessert. Außerdem reagiert\n en wir auf Änderung der Nutzerbedingungen von Facebook\\, die eine automa\n tische Verteilung auf privaten Nutzerprofilen nicht mehr ermöglicht.\\nWe\n itere Verbesserungen wurden an unserem neuen Bewerbermanagementsystem EB\n -BMS vorgenommen\\, die wir Ihnen gerne vorstellen möchten. Die Änderunge\n n basieren auf Erfahrungsberichten unserer EB-Pilotnutzer\\, die unter re\n alen Bedingungen das EB-BMS einsetzen.  \\n\\n\\n\\nSANOsax.de: Der Entwickl\n ungsstand der Empfehlungscommunity SANOsax.de\\n\\n\\nSANOsax.de wurde am 1\n . Februar 2018 offiziell gestartet. Im Verlauf dieses Jahres hat sich un\n sere jüngste Empfehlungscommunity zügig entwickelt. Sowohl der Anteil an\n  teilnehmenden Einrichtungen als auch der regionale branchenspezifische \n Fachkräftemarkt\\, den wir gemeinsam mit unseren Partnern des Sozial- und\n  Gesundheitswesens aufbauen möchten\\, wuchs trotz der üblichen Aktivität\n sschwankungen des Arbeitsmarktes währnend der Sommerzeit weiter an. Wir \n werden Ihnen den Entwicklungsverlauf unseres Fachkräftemarktes für das S\n ozial- und Gesundheitswesen detailliert vorstellen. \\n\\n\\n\\nWorkshop: Di\n e Roadmap des Empfehlungsbundes auf Basis von Kundenfeedbacks  \\n\\n\\nWoh\n in soll die Reise gehen? Momentan arbeiten wir an einen Kundenzufriedenh\n eitsfragebogen\\, der uns als Grundlage dienen soll\\, welche Projekte wir\n  in Zukunft verwirklichen werden. Mit der ersten Version des Fragebogens\n  im Januar werden wir unsere Bestandskunden um ein allgemeines Feedback \n bitten und dies für den Community Workshop auswerten. Für den Workshop m\n öchten wir dann mit unseren Teilnehmern konkrete Schritte für unsere wei\n teren Entwicklungsplanung ableiten. \\n\nURL:https://www.empfehlungsbund.de/events/39\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=Rhebo GmbH / Empfehlungsbund.de:https://www.empfehlungsbund.\n de/events/39\nATTACH:https://www.empfehlungsbund.de/events/39\nLOCATION:Rhebo GmbH\\, Spinnereistraße 7\\, Halle 6\\, 2. OG\\, 04179 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eWie lassen sich Personalgewin\n nungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo\n  und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech über\n haupt einen Nutzen für die Personalarbeit? In den Community Workshops de\n s Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte re\n gionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgve\n rsprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mi\n t Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die \n Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinsch\n aft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFreuen Sie sich in unserem Januar-Tref\n fen auf die Ergebnisse unserer Kanaleo Candidate Experience Studie 2018!\n  Wir haben reichlich Bewerberstimmen gesammelt, woraus wir für Sie Handl\n ungsempfehlungen ableiten konnten, wie Sie am besten Ihre Bewerber zu Em\n pfehler für Ihr Unternehmen machen.\u003c/strong\u003e Ferner gibt es einige techn\n ische Neuerungen an Coworkr und dem Empfehlungsbund Bewerbermanagementsy\n stem zu berichten. Wir präsentieren einen aktuellen Stand zu unserer jün\n gsten Community SANOsax.de, deren Entwicklung wir mit umfassenden Analys\n en verfolgt haben. Wir beabsichtigen, diese Analysen künftig auch für an\n dere Communitys einzusetzen. Außerdem wollen wir unsere Partner mehr in \n den Mittelpunkt rücken. In unserem Workshop möchten wir auf Basis unsere\n s neuen Kundenfeedbacks die kommenden Entwicklungen des Empfehlungsbunde\n s mit Ihnen gemeinsam priorisieren.\u0026nbsp; Wir freuen uns auf Sie! \u003cbr\u003e\u003cb\n r\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Frei\n schaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https:\n //www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eCandidate Experience: Ergebnisse der K\n analeo CandEx-Studie 2018\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWir haben im Laufe \n des Jahres 2017 Kanaleo um einen Candidate Experience Fragebogen erweite\n rt. Dieser Fragebogen erreichte eine Vielzahl von Bewerbern kurz vor Abs\n chluss ihres Bewerbungsprozesses und erlaubte es ihnen, ihre Bewerbungse\n rfahrungen zu teilen. Seitdem erhielten wir weit über 1.000 Feedbacks. G\n enug um eine statistische Auswertung vorzubereiten. In unserem Community\n  Workshop möchten wir Ihnen die Ergebnisse dieser Studie vorstellen. Ker\n npunkt sind Handlungsempfehlungen, die wir aus den Auswertungsergebnisse\n n ableiten konnten.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eTechnisch\n e Updates: Optimiertes Coworkr-UI und EB-BMS Pilotphase\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\n \u003c/div\u003e\u003cdiv\u003eMit Coworkr bieten wir unseren Mitgliedern einen Service, sie\n  bei der Durchführung ihrer Mitarbeiter-werben-Mitarbeiter-Programme zu \n unterstützen. Coworkr ermöglicht eine automatisierte Verteilung Ihres St\n ellenangebotes auf den Social Media-Profilen Ihrer Kollegen. Hier haben \n wir die Benutzeroberfläche deutlich verbessert. Außerdem reagierten wir \n auf Änderung der Nutzerbedingungen von Facebook, die eine automatische V\n erteilung auf privaten Nutzerprofilen nicht mehr ermöglicht.\u003cbr\u003eWeitere \n Verbesserungen wurden an unserem neuen Bewerbermanagementsystem EB-BMS v\n orgenommen, die wir Ihnen gerne vorstellen möchten. Die Änderungen basie\n ren auf Erfahrungsberichten unserer EB-Pilotnutzer, die unter realen Bed\n ingungen das EB-BMS einsetzen. \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eSANO\n sax.de: Der Entwicklungsstand der Empfehlungscommunity SANOsax.de\u003cbr\u003e\u003c/s\n trong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eSANOsax.de wurde am 1. Februar 2018 offiziell gesta\n rtet. Im Verlauf dieses Jahres hat sich unsere jüngste Empfehlungscommun\n ity zügig entwickelt. Sowohl der Anteil an teilnehmenden Einrichtungen a\n ls auch der regionale branchenspezifische Fachkräftemarkt, den wir gemei\n nsam mit unseren Partnern des Sozial- und Gesundheitswesens aufbauen möc\n hten, wuchs trotz der üblichen Aktivitätsschwankungen des Arbeitsmarktes\n  währnend der Sommerzeit weiter an. Wir werden Ihnen den Entwicklungsver\n lauf unseres Fachkräftemarktes für das Sozial- und Gesundheitswesen deta\n illiert vorstellen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eWorkshop: Die Ro\n admap des Empfehlungsbundes auf Basis von Kundenfeedbacks \u0026nbsp;\u003cbr\u003e\u003c/st\n rong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWohin soll die Reise gehen? Momentan arbeiten wir an\n  einen Kundenzufriedenheitsfragebogen, der uns als Grundlage dienen soll\n , welche Projekte wir in Zukunft verwirklichen werden. Mit der ersten Ve\n rsion des Fragebogens im Januar werden wir unsere Bestandskunden um ein \n allgemeines Feedback bitten und dies für den Community Workshop auswerte\n n. Für den Workshop möchten wir dann mit unseren Teilnehmern konkrete Sc\n hritte für unsere weiteren Entwicklungsplanung ableiten.\u0026nbsp;\u003c/div\u003e\u003c/BO\n DY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9212990,"Bezeichnung":"Rhebo GmbH","Kommentar":"könnte EBMS nutzen - hat nichts selber","Typ":10,"Nutzername":"rhebo","Website":"https://rhebo.com/de/unternehmen/karriere/","created_at":"2016-07-05T15:36:23.000+02:00","updated_at":"2021-10-07T12:18:29.000+02:00"}},{"id":94,"display_line":"29.01.2019 - 15 bis 18:00 Uhr München - Empfehlungsbund Community Workshop in München - Gastgeber: DPS Business Solutions GmbH","subtitle":"Empfehlungsbund Community Workshop in München","city":"München","start":"2019-01-29T15:00:25.000+01:00","finish":"2019-01-29T18:00:25.000+01:00","address":"Am Moosfeld 27, 81829 München","event_host":"DPS Business Solutions GmbH","lat":48.1335,"lon":11.66,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20181028T030000\nRDATE:20181028T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190129T180025\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190129T150025\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen Sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nFreuen Sie\n  sich in unserem Januar-Treffen auf die Ergebnisse unserer Kanaleo Candi\n date Experience Studie 2018! Wir haben reichlich Bewerberstimmen gesamme\n lt\\, woraus wir für Sie Handlungsempfehlungen ableiten konnten\\, wie Sie\n  am besten Ihre Bewerber zu Empfehler für Ihr Unternehmen machen. Ferner\n  gibt es einige technische Neuerungen an Coworkr und dem Empfehlungsbund\n  Bewerbermanagementsystem zu berichten. Wir präsentieren einen aktuellen\n  Stand zu unserer jüngsten Community SANOsax.de\\, deren Entwicklung wir \n mit umfassenden Analysen verfolgt haben. Wir beabsichtigen\\, diese Analy\n sen künftig auch für andere Communitys einzusetzen. Außerdem wollen wir \n unsere Partner mehr in den Mittelpunkt rücken. In unserem Workshop möcht\n en wir auf Basis unseres neuen Kundenfeedbacks die kommenden Entwicklung\n en des Empfehlungsbundes mit Ihnen gemeinsam priorisieren.  Wir freuen u\n ns auf Sie! \\n\\nDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anme\n ldung zur Freischaltung aus organisatorischen Gründen erforderlich.\\nDer\n  Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewin\n nung durch Empfehlungen in Deutschland.\\n\\n\\nCandidate Experience: Ergeb\n nisse der Kanaleo CandEx-Studie 2018\\n\\n\\nWir haben im Laufe des Jahres \n 2017 Kanaleo um einen Candidate Experience Fragebogen erweitert. Dieser \n Fragebogen erreichte eine Vielzahl von Bewerbern kurz vor Abschluss ihre\n s Bewerbungsprozesses und erlaubte es ihnen\\, ihre Bewerbungserfahrungen\n  zu teilen. Seitdem erhielten wir weit über 1.000 Feedbacks. Genug um ei\n ne statistische Auswertung vorzubereiten. In unserem Community Workshop \n möchten wir Ihnen die Ergebnisse dieser Studie vorstellen. Kernpunkt sin\n d Handlungsempfehlungen\\, die wir aus den Auswertungsergebnissen ableite\n n konnten. \\n\\n\\n\\nTechnische Updates: Optimiertes Coworkr-UI und EB-BMS\n  Pilotphase\\n\\n\\nMit Coworkr bieten wir unseren Mitgliedern einen Servic\n e\\, sie bei der Durchführung ihrer Mitarbeiter-werben-Mitarbeiter-Progra\n mme zu unterstützen. Coworkr ermöglicht eine automatisierte Verteilung I\n hres Stellenangebotes auf den Social Media-Profilen Ihrer Kollegen. Hier\n  haben wir die Benutzeroberfläche deutlich verbessert. Außerdem reagiert\n en wir auf Änderung der Nutzerbedingungen von Facebook\\, die eine automa\n tische Verteilung auf privaten Nutzerprofilen nicht mehr ermöglicht.\\nWe\n itere Verbesserungen wurden an unserem neuen Bewerbermanagementsystem EB\n -BMS vorgenommen\\, die wir Ihnen gerne vorstellen möchten. Die Änderunge\n n basieren auf Erfahrungsberichten unserer EB-Pilotnutzer\\, die unter re\n alen Bedingungen das EB-BMS einsetzen.  \\n\\n\\n\\nSANOsax.de: Der Entwickl\n ungsstand der Empfehlungscommunity SANOsax.de\\n\\n\\nSANOsax.de wurde am 1\n . Februar 2018 offiziell gestartet. Im Verlauf dieses Jahres hat sich un\n sere jüngste Empfehlungscommunity zügig entwickelt. Sowohl der Anteil an\n  teilnehmenden Einrichtungen als auch der regionale branchenspezifische \n Fachkräftemarkt\\, den wir gemeinsam mit unseren Partnern des Sozial- und\n  Gesundheitswesens aufbauen möchten\\, wuchs trotz der üblichen Aktivität\n sschwankungen des Arbeitsmarktes währnend der Sommerzeit weiter an. Wir \n werden Ihnen den Entwicklungsverlauf unseres Fachkräftemarktes für das S\n ozial- und Gesundheitswesen detailliert vorstellen. \\n\\n\\n\\nWorkshop: Di\n e Roadmap des Empfehlungsbundes auf Basis von Kundenfeedbacks  \\n\\n\\nWoh\n in soll die Reise gehen? Momentan arbeiten wir an einen Kundenzufriedenh\n eitsfragebogen\\, der uns als Grundlage dienen soll\\, welche Projekte wir\n  in Zukunft verwirklichen werden. Mit der ersten Version des Fragebogens\n  im Januar werden wir unsere Bestandskunden um ein allgemeines Feedback \n bitten und dies für den Community Workshop auswerten. Für den Workshop m\n öchten wir dann mit unseren Teilnehmern konkrete Schritte für unsere wei\n teren Entwicklungsplanung ableiten. \\n\nURL:https://www.empfehlungsbund.de/events/39\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=DPS Business Solutions GmbH / Empfehlungsbund.de:https://www\n .empfehlungsbund.de/events/39\nATTACH:https://www.empfehlungsbund.de/events/39\nLOCATION:DPS Business Solutions GmbH\\, Am Moosfeld 27\\, 81829 München\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eWie lassen sich Personalgewin\n nungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo\n  und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech über\n haupt einen Nutzen für die Personalarbeit? In den Community Workshops de\n s Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte re\n gionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgve\n rsprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mi\n t Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die \n Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinsch\n aft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFreuen Sie sich in unserem Januar-Tref\n fen auf die Ergebnisse unserer Kanaleo Candidate Experience Studie 2018!\n  Wir haben reichlich Bewerberstimmen gesammelt, woraus wir für Sie Handl\n ungsempfehlungen ableiten konnten, wie Sie am besten Ihre Bewerber zu Em\n pfehler für Ihr Unternehmen machen.\u003c/strong\u003e Ferner gibt es einige techn\n ische Neuerungen an Coworkr und dem Empfehlungsbund Bewerbermanagementsy\n stem zu berichten. Wir präsentieren einen aktuellen Stand zu unserer jün\n gsten Community SANOsax.de, deren Entwicklung wir mit umfassenden Analys\n en verfolgt haben. Wir beabsichtigen, diese Analysen künftig auch für an\n dere Communitys einzusetzen. Außerdem wollen wir unsere Partner mehr in \n den Mittelpunkt rücken. In unserem Workshop möchten wir auf Basis unsere\n s neuen Kundenfeedbacks die kommenden Entwicklungen des Empfehlungsbunde\n s mit Ihnen gemeinsam priorisieren.\u0026nbsp; Wir freuen uns auf Sie! \u003cbr\u003e\u003cb\n r\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Frei\n schaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https:\n //www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eCandidate Experience: Ergebnisse der K\n analeo CandEx-Studie 2018\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWir haben im Laufe \n des Jahres 2017 Kanaleo um einen Candidate Experience Fragebogen erweite\n rt. Dieser Fragebogen erreichte eine Vielzahl von Bewerbern kurz vor Abs\n chluss ihres Bewerbungsprozesses und erlaubte es ihnen, ihre Bewerbungse\n rfahrungen zu teilen. Seitdem erhielten wir weit über 1.000 Feedbacks. G\n enug um eine statistische Auswertung vorzubereiten. In unserem Community\n  Workshop möchten wir Ihnen die Ergebnisse dieser Studie vorstellen. Ker\n npunkt sind Handlungsempfehlungen, die wir aus den Auswertungsergebnisse\n n ableiten konnten.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eTechnisch\n e Updates: Optimiertes Coworkr-UI und EB-BMS Pilotphase\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\n \u003c/div\u003e\u003cdiv\u003eMit Coworkr bieten wir unseren Mitgliedern einen Service, sie\n  bei der Durchführung ihrer Mitarbeiter-werben-Mitarbeiter-Programme zu \n unterstützen. Coworkr ermöglicht eine automatisierte Verteilung Ihres St\n ellenangebotes auf den Social Media-Profilen Ihrer Kollegen. Hier haben \n wir die Benutzeroberfläche deutlich verbessert. Außerdem reagierten wir \n auf Änderung der Nutzerbedingungen von Facebook, die eine automatische V\n erteilung auf privaten Nutzerprofilen nicht mehr ermöglicht.\u003cbr\u003eWeitere \n Verbesserungen wurden an unserem neuen Bewerbermanagementsystem EB-BMS v\n orgenommen, die wir Ihnen gerne vorstellen möchten. Die Änderungen basie\n ren auf Erfahrungsberichten unserer EB-Pilotnutzer, die unter realen Bed\n ingungen das EB-BMS einsetzen. \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eSANO\n sax.de: Der Entwicklungsstand der Empfehlungscommunity SANOsax.de\u003cbr\u003e\u003c/s\n trong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eSANOsax.de wurde am 1. Februar 2018 offiziell gesta\n rtet. Im Verlauf dieses Jahres hat sich unsere jüngste Empfehlungscommun\n ity zügig entwickelt. Sowohl der Anteil an teilnehmenden Einrichtungen a\n ls auch der regionale branchenspezifische Fachkräftemarkt, den wir gemei\n nsam mit unseren Partnern des Sozial- und Gesundheitswesens aufbauen möc\n hten, wuchs trotz der üblichen Aktivitätsschwankungen des Arbeitsmarktes\n  währnend der Sommerzeit weiter an. Wir werden Ihnen den Entwicklungsver\n lauf unseres Fachkräftemarktes für das Sozial- und Gesundheitswesen deta\n illiert vorstellen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eWorkshop: Die Ro\n admap des Empfehlungsbundes auf Basis von Kundenfeedbacks \u0026nbsp;\u003cbr\u003e\u003c/st\n rong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWohin soll die Reise gehen? Momentan arbeiten wir an\n  einen Kundenzufriedenheitsfragebogen, der uns als Grundlage dienen soll\n , welche Projekte wir in Zukunft verwirklichen werden. Mit der ersten Ve\n rsion des Fragebogens im Januar werden wir unsere Bestandskunden um ein \n allgemeines Feedback bitten und dies für den Community Workshop auswerte\n n. Für den Workshop möchten wir dann mit unseren Teilnehmern konkrete Sc\n hritte für unsere weiteren Entwicklungsplanung ableiten.\u0026nbsp;\u003c/div\u003e\u003c/BO\n DY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9213096,"Bezeichnung":"DPS Business Solutions GmbH","Kommentar":"440 laut Homepage und Anzahl Mitarbeiter!! \r\n\r\nMutterunternehmen der Sellmore, sind durch Herrn Noack aufmerksam geworden und wollen das Konzept vorgestellt bekommen\r\n\r\nzu DPS gehört Sellmore und Datatronic... haben aber eigene Verträge, da wir argumenteiren: dass diese marken schon lange in der jeweiligen Region bekannt sind, und es schade wäre das aufzugeben.","Typ":10,"Nutzername":"dps","Website":"https://www.dps-bs.de/unternehmen/stellenanzeigen.html?ebbms=","created_at":"2017-02-27T14:38:52.000+01:00","updated_at":"2021-07-07T14:19:42.000+02:00"}},{"id":95,"display_line":"30.01.2019 - 15 bis 18:00 Uhr Berlin - Empfehlungsbund Community Workshop in Berlin - Gastgeber: Händlerbund e.V.","subtitle":"Empfehlungsbund Community Workshop in Berlin","city":"Berlin","start":"2019-01-30T15:00:01.000+01:00","finish":"2019-01-30T18:00:01.000+01:00","address":"Potsdamer Straße 7 / Potsdamer Platz 10785 Berlin","event_host":"Händlerbund e.V.","lat":52.5096,"lon":13.3759,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20181028T030000\nRDATE:20181028T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20190130T180001\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20190130T150001\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen Sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nFreuen Sie\n  sich in unserem Januar-Treffen auf die Ergebnisse unserer Kanaleo Candi\n date Experience Studie 2018! Wir haben reichlich Bewerberstimmen gesamme\n lt\\, woraus wir für Sie Handlungsempfehlungen ableiten konnten\\, wie Sie\n  am besten Ihre Bewerber zu Empfehler für Ihr Unternehmen machen. Ferner\n  gibt es einige technische Neuerungen an Coworkr und dem Empfehlungsbund\n  Bewerbermanagementsystem zu berichten. Wir präsentieren einen aktuellen\n  Stand zu unserer jüngsten Community SANOsax.de\\, deren Entwicklung wir \n mit umfassenden Analysen verfolgt haben. Wir beabsichtigen\\, diese Analy\n sen künftig auch für andere Communitys einzusetzen. Außerdem wollen wir \n unsere Partner mehr in den Mittelpunkt rücken. In unserem Workshop möcht\n en wir auf Basis unseres neuen Kundenfeedbacks die kommenden Entwicklung\n en des Empfehlungsbundes mit Ihnen gemeinsam priorisieren.  Wir freuen u\n ns auf Sie! \\n\\nDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anme\n ldung zur Freischaltung aus organisatorischen Gründen erforderlich.\\nDer\n  Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewin\n nung durch Empfehlungen in Deutschland.\\n\\n\\nCandidate Experience: Ergeb\n nisse der Kanaleo CandEx-Studie 2018\\n\\n\\nWir haben im Laufe des Jahres \n 2017 Kanaleo um einen Candidate Experience Fragebogen erweitert. Dieser \n Fragebogen erreichte eine Vielzahl von Bewerbern kurz vor Abschluss ihre\n s Bewerbungsprozesses und erlaubte es ihnen\\, ihre Bewerbungserfahrungen\n  zu teilen. Seitdem erhielten wir weit über 1.000 Feedbacks. Genug um ei\n ne statistische Auswertung vorzubereiten. In unserem Community Workshop \n möchten wir Ihnen die Ergebnisse dieser Studie vorstellen. Kernpunkt sin\n d Handlungsempfehlungen\\, die wir aus den Auswertungsergebnissen ableite\n n konnten. \\n\\n\\n\\nTechnische Updates: Optimiertes Coworkr-UI und EB-BMS\n  Pilotphase\\n\\n\\nMit Coworkr bieten wir unseren Mitgliedern einen Servic\n e\\, sie bei der Durchführung ihrer Mitarbeiter-werben-Mitarbeiter-Progra\n mme zu unterstützen. Coworkr ermöglicht eine automatisierte Verteilung I\n hres Stellenangebotes auf den Social Media-Profilen Ihrer Kollegen. Hier\n  haben wir die Benutzeroberfläche deutlich verbessert. Außerdem reagiert\n en wir auf Änderung der Nutzerbedingungen von Facebook\\, die eine automa\n tische Verteilung auf privaten Nutzerprofilen nicht mehr ermöglicht.\\nWe\n itere Verbesserungen wurden an unserem neuen Bewerbermanagementsystem EB\n -BMS vorgenommen\\, die wir Ihnen gerne vorstellen möchten. Die Änderunge\n n basieren auf Erfahrungsberichten unserer EB-Pilotnutzer\\, die unter re\n alen Bedingungen das EB-BMS einsetzen.  \\n\\n\\n\\nSANOsax.de: Der Entwickl\n ungsstand der Empfehlungscommunity SANOsax.de\\n\\n\\nSANOsax.de wurde am 1\n . Februar 2018 offiziell gestartet. Im Verlauf dieses Jahres hat sich un\n sere jüngste Empfehlungscommunity zügig entwickelt. Sowohl der Anteil an\n  teilnehmenden Einrichtungen als auch der regionale branchenspezifische \n Fachkräftemarkt\\, den wir gemeinsam mit unseren Partnern des Sozial- und\n  Gesundheitswesens aufbauen möchten\\, wuchs trotz der üblichen Aktivität\n sschwankungen des Arbeitsmarktes währnend der Sommerzeit weiter an. Wir \n werden Ihnen den Entwicklungsverlauf unseres Fachkräftemarktes für das S\n ozial- und Gesundheitswesen detailliert vorstellen. \\n\\n\\n\\nWorkshop: Di\n e Roadmap des Empfehlungsbundes auf Basis von Kundenfeedbacks  \\n\\n\\nWoh\n in soll die Reise gehen? Momentan arbeiten wir an einen Kundenzufriedenh\n eitsfragebogen\\, der uns als Grundlage dienen soll\\, welche Projekte wir\n  in Zukunft verwirklichen werden. Mit der ersten Version des Fragebogens\n  im Januar werden wir unsere Bestandskunden um ein allgemeines Feedback \n bitten und dies für den Community Workshop auswerten. Für den Workshop m\n öchten wir dann mit unseren Teilnehmern konkrete Schritte für unsere wei\n teren Entwicklungsplanung ableiten. \\n\nURL:https://www.empfehlungsbund.de/events/39\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=Händlerbund e.V. / Empfehlungsbund.de:https://www.empfehlung\n sbund.de/events/39\nATTACH:https://www.empfehlungsbund.de/events/39\nLOCATION:Händlerbund e.V.\\, Potsdamer Straße 7 / Potsdamer Platz 10785 Be\n rlin\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eWie lassen sich Personalgewin\n nungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo\n  und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech über\n haupt einen Nutzen für die Personalarbeit? In den Community Workshops de\n s Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte re\n gionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgve\n rsprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mi\n t Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die \n Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinsch\n aft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eFreuen Sie sich in unserem Januar-Tref\n fen auf die Ergebnisse unserer Kanaleo Candidate Experience Studie 2018!\n  Wir haben reichlich Bewerberstimmen gesammelt, woraus wir für Sie Handl\n ungsempfehlungen ableiten konnten, wie Sie am besten Ihre Bewerber zu Em\n pfehler für Ihr Unternehmen machen.\u003c/strong\u003e Ferner gibt es einige techn\n ische Neuerungen an Coworkr und dem Empfehlungsbund Bewerbermanagementsy\n stem zu berichten. Wir präsentieren einen aktuellen Stand zu unserer jün\n gsten Community SANOsax.de, deren Entwicklung wir mit umfassenden Analys\n en verfolgt haben. Wir beabsichtigen, diese Analysen künftig auch für an\n dere Communitys einzusetzen. Außerdem wollen wir unsere Partner mehr in \n den Mittelpunkt rücken. In unserem Workshop möchten wir auf Basis unsere\n s neuen Kundenfeedbacks die kommenden Entwicklungen des Empfehlungsbunde\n s mit Ihnen gemeinsam priorisieren.\u0026nbsp; Wir freuen uns auf Sie! \u003cbr\u003e\u003cb\n r\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Frei\n schaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"https:\n //www.empfehlungsbund.de/mediadaten\"\u003eDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\u003c/a\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cstrong\u003eCandidate Experience: Ergebnisse der K\n analeo CandEx-Studie 2018\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWir haben im Laufe \n des Jahres 2017 Kanaleo um einen Candidate Experience Fragebogen erweite\n rt. Dieser Fragebogen erreichte eine Vielzahl von Bewerbern kurz vor Abs\n chluss ihres Bewerbungsprozesses und erlaubte es ihnen, ihre Bewerbungse\n rfahrungen zu teilen. Seitdem erhielten wir weit über 1.000 Feedbacks. G\n enug um eine statistische Auswertung vorzubereiten. In unserem Community\n  Workshop möchten wir Ihnen die Ergebnisse dieser Studie vorstellen. Ker\n npunkt sind Handlungsempfehlungen, die wir aus den Auswertungsergebnisse\n n ableiten konnten.\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eTechnisch\n e Updates: Optimiertes Coworkr-UI und EB-BMS Pilotphase\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\n \u003c/div\u003e\u003cdiv\u003eMit Coworkr bieten wir unseren Mitgliedern einen Service, sie\n  bei der Durchführung ihrer Mitarbeiter-werben-Mitarbeiter-Programme zu \n unterstützen. Coworkr ermöglicht eine automatisierte Verteilung Ihres St\n ellenangebotes auf den Social Media-Profilen Ihrer Kollegen. Hier haben \n wir die Benutzeroberfläche deutlich verbessert. Außerdem reagierten wir \n auf Änderung der Nutzerbedingungen von Facebook, die eine automatische V\n erteilung auf privaten Nutzerprofilen nicht mehr ermöglicht.\u003cbr\u003eWeitere \n Verbesserungen wurden an unserem neuen Bewerbermanagementsystem EB-BMS v\n orgenommen, die wir Ihnen gerne vorstellen möchten. Die Änderungen basie\n ren auf Erfahrungsberichten unserer EB-Pilotnutzer, die unter realen Bed\n ingungen das EB-BMS einsetzen. \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003eSANO\n sax.de: Der Entwicklungsstand der Empfehlungscommunity SANOsax.de\u003cbr\u003e\u003c/s\n trong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eSANOsax.de wurde am 1. Februar 2018 offiziell gesta\n rtet. Im Verlauf dieses Jahres hat sich unsere jüngste Empfehlungscommun\n ity zügig entwickelt. Sowohl der Anteil an teilnehmenden Einrichtungen a\n ls auch der regionale branchenspezifische Fachkräftemarkt, den wir gemei\n nsam mit unseren Partnern des Sozial- und Gesundheitswesens aufbauen möc\n hten, wuchs trotz der üblichen Aktivitätsschwankungen des Arbeitsmarktes\n  währnend der Sommerzeit weiter an. Wir werden Ihnen den Entwicklungsver\n lauf unseres Fachkräftemarktes für das Sozial- und Gesundheitswesen deta\n illiert vorstellen.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eWorkshop: Die Ro\n admap des Empfehlungsbundes auf Basis von Kundenfeedbacks \u0026nbsp;\u003cbr\u003e\u003c/st\n rong\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWohin soll die Reise gehen? Momentan arbeiten wir an\n  einen Kundenzufriedenheitsfragebogen, der uns als Grundlage dienen soll\n , welche Projekte wir in Zukunft verwirklichen werden. Mit der ersten Ve\n rsion des Fragebogens im Januar werden wir unsere Bestandskunden um ein \n allgemeines Feedback bitten und dies für den Community Workshop auswerte\n n. Für den Workshop möchten wir dann mit unseren Teilnehmern konkrete Sc\n hritte für unsere weiteren Entwicklungsplanung ableiten.\u0026nbsp;\u003c/div\u003e\u003c/BO\n DY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9220052,"Bezeichnung":"Händlerbund Management AG","Kommentar":"kostenfreie Mitgliedschaft als Partner, dafür AGBs von kanaleo.de gemacht. Sollte die dann auch für IT*.de, MINTsax.de und it-jobs-und-stellen.de machen; werden auch in CRM als Partner geführt, um Verwirrungen zu vermeiden","Typ":10,"Nutzername":"haendlerbund","Website":"https://karriere.haendlerbund.de/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:59:52.000+02:00"}}]},{"id":38,"name":"ebcw_201809","hashtag":"ebcw","title":"Empfehlungsbund Community Workshop in Dresden, Leipzig, München und Berlin","teaser":"Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. In unseren Workshops bringen Sie sich mit Ihren Ideen mit ein. Dank den Beiträgen unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzeptes der Fachkräftesuche in der Gemeinschaft weiter voran. \r\n\r\nDie Teilnahme ist kostenfrei. Allerdings ist eine kurze Anmeldung aus organisatorischen Gründen nötig.","teaser_hrfilter":"Im letzten Community-Workshop des Empfehlungsbundes für das Jahr 2018 werden wir uns besonders intensiv mit dem Thema Benefits und Personalbindung auseinandersetzen. Klingt spannend? Dann freuen wir uns, wenn Sie unserem Workshop beiwohnen.","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Personalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personalarbeit?\u003c/strong\u003e In den Community Workshops des Empfehlungsbundes tauschen sich Personalexperten und Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. In unseren Workshops bringen sie sich mit Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzeptes zur Fachkräftesuche in der Gemeinschaft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eUnsere Workshop-Agenda beinhaltet unter anderem, welche Auswirkung die DSGVO letztendlich auf die betrieblichen Abläufe im Personalwesen hat\u003c/strong\u003e.\u003cstrong\u003e Des Weiteren werden wir Ihnen die verbesserte Jobwert Benefit-Auswertung vorstellen und im Detail diskutieren. In unserem Workshop möchten wir mit Ihnen ein Konzept entwickeln, wie sich ein professioneller Benefit-Benchmark realisieren lässt.\u003c/strong\u003e Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e","agenda":"\u003ch4\u003eEB-BMS: Update zur Beta-Phase\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung des Bewerbermanagementsystems des Empfehlungsbundes ist weit genug voran geschritten, sodass wir nun zu Ihrer Mithilfe am Beta-Test aufrufen können. In diesem Zusammenhang möchten wir Ihnen den derzeitigen Entwicklungsstand des EB-BMS und die darin enthaltenen Features vorstellen, die wir auf Grundlage des reichen Feedbacks vorheriger Veranstaltungen sammeln und umsetzen konnten. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eDSGVO: Erfahrungsaustausch über die Datenschutzgrundverordnung\u003c/h4\u003e\u003cdiv\u003eSeit dem 25. Mai 2018 ist die DSGVO rechtskräftig. Der dadurch aufgewirbelte Staub dürfte sich mittlerweile weitestgehend gelegt haben, sodass wir uns in einer gemeinsamen Diskussion darüber austauschen, welche Auswirkungen die DSGVO letztendlich auf die Personalarbeit hatte. Hierfür möchten wir einen Fachanwalt für Internet-Recht einladen, der sich mit dem Thema Datenschutz auskennt und uns diesbezüglich auf einen gemeinsamen Stand bringt. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eJobwert.info: Update - Arbeitgeber-Benefits\u003c/h4\u003e\u003cdiv\u003eMit den Feedbacks zu Jobwerts neuem Feature \u003cem\u003eArbeitgeber-Benefits\u003c/em\u003e entwerfen wir ein fein gegliedertes Kategorisierungssystem. Hierzu befragen wir von August bis September unsere Partner, und werden Ihnen eine Auswertung dazu vorstellen. Die Ergebnisse bilden die Grundlage für den darauffolgenden Workshop. Außerdem gibt es weitere Entwicklungen an Jobwert.info, die wir Ihnen nicht vorenthalten wollen. Unter Anderem wird Jobwert wesentlich genauere Auswertungen über den Geldwert der einzelnen Benefits zulassen.\u003c/div\u003e\u003ch4\u003eWorkshop: Professionelles Benchmarking von Arbeitgeber-Benefits\u003c/h4\u003e\u003cdiv\u003eIn unserem Workshop möchten wir die Kategorisierungssystematik der Benefit-Auswertung mit Ihnen gemeinsam ausbauen. Sie bildet die Basis für ein exakten Benefit-Benchmark. Hierzu möchten wir im Workshop ein Gespräch zu wichtigen Leitfragen anregen, die uns als Feedback für die weitere Verbesserung Jobwerts dienen. Wie wäre es beispielsweise mit der Frage: Gibt es konkrete Benefits, die für einzelne Berufsprofile typisch sind? Wenn ja, in welchem Umfang?\u0026nbsp;\u003c/div\u003e","start":"2018-09-25T15:00:02.000+02:00","finish":"2018-09-26T18:00:45.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/38/wide_CRM_Banner_EBCW_OXFP.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/38/wide_CRM_Banner_HRFILTER_EBCW_DresdenLeipzigM_nchenBerlin.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/38/Community_Workshop_Blog.jpg","register_url":"https://www.empfehlungsbund.de/events/38/register","show_url":"https://www.empfehlungsbund.de/events/38","events":[{"id":88,"display_line":"25.09.2018 - 15 bis 18:00 Uhr Neubiberg - Empfehlungsbund Community Workshop in München - Gastgeber: ARITHNEA GmbH","subtitle":"Empfehlungsbund Community Workshop in München","city":"Neubiberg","start":"2018-09-25T15:00:02.000+02:00","finish":"2018-09-25T18:00:02.000+02:00","address":"Prof.-Messerschmitt-Straße 1, 85579 Neubiberg bei München","event_host":"ARITHNEA GmbH","lat":48.0754,"lon":11.6566,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20180325T020000\nRDATE:20180325T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180925T180002\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180925T150002\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nUnsere Wor\n kshop-Agenda beinhaltet unter anderem\\, welche Auswirkung die DSGVO letz\n tendlich auf die betrieblichen Abläufe im Personalwesen hat. Des Weitere\n n werden wir Ihnen die verbesserte Jobwert Benefit-Auswertung vorstellen\n  und im Detail diskutieren. In unserem Workshop möchten wir mit Ihnen ei\n n Konzept entwickeln\\, wie sich ein professioneller Benefit-Benchmark re\n alisieren lässt. Wir freuen uns auf Sie! \\n\\n\\nDie Teilnahme ist kostenf\n rei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatoris\n chen Gründen erforderlich.\\nDer Empfehlungsbund ist das führende Netzwer\n k zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\\n\n \\nEB-BMS: Update zur Beta-PhaseDie Entwicklung des Bewerbermanagementsys\n tems des Empfehlungsbundes ist weit genug voran geschritten\\, sodass wir\n  nun zu Ihrer Mithilfe am Beta-Test aufrufen können. In diesem Zusammenh\n ang möchten wir Ihnen den derzeitigen Entwicklungsstand des EB-BMS und d\n ie darin enthaltenen Features vorstellen\\, die wir auf Grundlage des rei\n chen Feedbacks vorheriger Veranstaltungen sammeln und umsetzen konnten. \n  \\nDSGVO: Erfahrungsaustausch über die DatenschutzgrundverordnungSeit de\n m 25. Mai 2018 ist die DSGVO rechtskräftig. Der dadurch aufgewirbelte St\n aub dürfte sich mittlerweile weitestgehend gelegt haben\\, sodass wir uns\n  in einer gemeinsamen Diskussion darüber austauschen\\, welche Auswirkung\n en die DSGVO letztendlich auf die Personalarbeit hatte. Hierfür möchten \n wir einen Fachanwalt für Internet-Recht einladen\\, der sich mit dem Them\n a Datenschutz auskennt und uns diesbezüglich auf einen gemeinsamen Stand\n  bringt.  \\nJobwert.info: Update - Arbeitgeber-BenefitsMit den Feedbacks\n  zu Jobwerts neuem Feature Arbeitgeber-Benefits entwerfen wir ein fein g\n egliedertes Kategorisierungssystem. Hierzu befragen wir von August bis S\n eptember unsere Partner\\, und werden Ihnen eine Auswertung dazu vorstell\n en. Die Ergebnisse bilden die Grundlage für den darauffolgenden Workshop\n . Außerdem gibt es weitere Entwicklungen an Jobwert.info\\, die wir Ihnen\n  nicht vorenthalten wollen. Unter Anderem wird Jobwert wesentlich genaue\n re Auswertungen über den Geldwert der einzelnen Benefits zulassen.\\nWork\n shop: Professionelles Benchmarking von Arbeitgeber-BenefitsIn unserem Wo\n rkshop möchten wir die Kategorisierungssystematik der Benefit-Auswertung\n  mit Ihnen gemeinsam ausbauen. Sie bildet die Basis für ein exakten Bene\n fit-Benchmark. Hierzu möchten wir im Workshop ein Gespräch zu wichtigen \n Leitfragen anregen\\, die uns als Feedback für die weitere Verbesserung J\n obwerts dienen. Wie wäre es beispielsweise mit der Frage: Gibt es konkre\n te Benefits\\, die für einzelne Berufsprofile typisch sind? Wenn ja\\, in \n welchem Umfang? \\n\nURL:https://www.empfehlungsbund.de/events/38\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=ARITHNEA GmbH / Empfehlungsbund.de:https://www.empfehlungsbu\n nd.de/events/38\nATTACH:https://www.empfehlungsbund.de/events/38\nLOCATION:ARITHNEA GmbH\\, Prof.-Messerschmitt-Straße 1\\, 85579 Neubiberg b\n ei München\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-T\n ech überhaupt einen Nutzen für die Personalarbeit?\u003c/strong\u003e In den Commu\n nity Workshops des Empfehlungsbundes tauschen sich Personalexperten und \n Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen \n für eine erfolgversprechende Personalarbeit aus. In unseren Workshops br\n ingen sie sich mit Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer\n  treiben wir die Weiterentwicklung unseres Konzeptes zur Fachkräftesuche\n  in der Gemeinschaft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eUnsere Workshop-Agend\n a beinhaltet unter anderem, welche Auswirkung die DSGVO letztendlich auf\n  die betrieblichen Abläufe im Personalwesen hat\u003c/strong\u003e.\u003cstrong\u003e Des We\n iteren werden wir Ihnen die verbesserte Jobwert Benefit-Auswertung vorst\n ellen und im Detail diskutieren. In unserem Workshop möchten wir mit Ihn\n en ein Konzept entwickeln, wie sich ein professioneller Benefit-Benchmar\n k realisieren lässt.\u003c/strong\u003e Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\n \u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur \n Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"ht\n tp://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwe\n rk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c\n /a\u003e\u003c/div\u003e\u003ch4\u003eEB-BMS: Update zur Beta-Phase\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung des \n Bewerbermanagementsystems des Empfehlungsbundes ist weit genug voran ges\n chritten, sodass wir nun zu Ihrer Mithilfe am Beta-Test aufrufen können.\n  In diesem Zusammenhang möchten wir Ihnen den derzeitigen Entwicklungsst\n and des EB-BMS und die darin enthaltenen Features vorstellen, die wir au\n f Grundlage des reichen Feedbacks vorheriger Veranstaltungen sammeln und\n  umsetzen konnten. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eDSGVO: Erfahrungsaustausch über die D\n atenschutzgrundverordnung\u003c/h4\u003e\u003cdiv\u003eSeit dem 25. Mai 2018 ist die DSGVO r\n echtskräftig. Der dadurch aufgewirbelte Staub dürfte sich mittlerweile w\n eitestgehend gelegt haben, sodass wir uns in einer gemeinsamen Diskussio\n n darüber austauschen, welche Auswirkungen die DSGVO letztendlich auf di\n e Personalarbeit hatte. Hierfür möchten wir einen Fachanwalt für Interne\n t-Recht einladen, der sich mit dem Thema Datenschutz auskennt und uns di\n esbezüglich auf einen gemeinsamen Stand bringt. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eJobwert.\n info: Update - Arbeitgeber-Benefits\u003c/h4\u003e\u003cdiv\u003eMit den Feedbacks zu Jobwer\n ts neuem Feature \u003cem\u003eArbeitgeber-Benefits\u003c/em\u003e entwerfen wir ein fein ge\n gliedertes Kategorisierungssystem. Hierzu befragen wir von August bis Se\n ptember unsere Partner, und werden Ihnen eine Auswertung dazu vorstellen\n . Die Ergebnisse bilden die Grundlage für den darauffolgenden Workshop. \n Außerdem gibt es weitere Entwicklungen an Jobwert.info, die wir Ihnen ni\n cht vorenthalten wollen. Unter Anderem wird Jobwert wesentlich genauere \n Auswertungen über den Geldwert der einzelnen Benefits zulassen.\u003c/div\u003e\u003ch4\n \u003eWorkshop: Professionelles Benchmarking von Arbeitgeber-Benefits\u003c/h4\u003e\u003cdi\n v\u003eIn unserem Workshop möchten wir die Kategorisierungssystematik der Ben\n efit-Auswertung mit Ihnen gemeinsam ausbauen. Sie bildet die Basis für e\n in exakten Benefit-Benchmark. Hierzu möchten wir im Workshop ein Gespräc\n h zu wichtigen Leitfragen anregen, die uns als Feedback für die weitere \n Verbesserung Jobwerts dienen. Wie wäre es beispielsweise mit der Frage: \n Gibt es konkrete Benefits, die für einzelne Berufsprofile typisch sind? \n Wenn ja, in welchem Umfang?\u0026nbsp;\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":null},{"id":89,"display_line":"26.09.2018 - 15 bis 18:00 Uhr Berlin - Empfehlungsbund Community Workshop in Berlin - Gastgeber: T-Systems Multimedia Solutions GmbH","subtitle":"Empfehlungsbund Community Workshop in Berlin","city":"Berlin","start":"2018-09-26T15:00:22.000+02:00","finish":"2018-09-26T18:00:22.000+02:00","address":"Winterfeldtstraße  21, 10781 Berlin","event_host":"T-Systems Multimedia Solutions GmbH","lat":52.4964,"lon":13.3577,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20180325T020000\nRDATE:20180325T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180926T180022\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180926T150022\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nUnsere Wor\n kshop-Agenda beinhaltet unter anderem\\, welche Auswirkung die DSGVO letz\n tendlich auf die betrieblichen Abläufe im Personalwesen hat. Des Weitere\n n werden wir Ihnen die verbesserte Jobwert Benefit-Auswertung vorstellen\n  und im Detail diskutieren. In unserem Workshop möchten wir mit Ihnen ei\n n Konzept entwickeln\\, wie sich ein professioneller Benefit-Benchmark re\n alisieren lässt. Wir freuen uns auf Sie! \\n\\n\\nDie Teilnahme ist kostenf\n rei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatoris\n chen Gründen erforderlich.\\nDer Empfehlungsbund ist das führende Netzwer\n k zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\\n\n \\nEB-BMS: Update zur Beta-PhaseDie Entwicklung des Bewerbermanagementsys\n tems des Empfehlungsbundes ist weit genug voran geschritten\\, sodass wir\n  nun zu Ihrer Mithilfe am Beta-Test aufrufen können. In diesem Zusammenh\n ang möchten wir Ihnen den derzeitigen Entwicklungsstand des EB-BMS und d\n ie darin enthaltenen Features vorstellen\\, die wir auf Grundlage des rei\n chen Feedbacks vorheriger Veranstaltungen sammeln und umsetzen konnten. \n  \\nDSGVO: Erfahrungsaustausch über die DatenschutzgrundverordnungSeit de\n m 25. Mai 2018 ist die DSGVO rechtskräftig. Der dadurch aufgewirbelte St\n aub dürfte sich mittlerweile weitestgehend gelegt haben\\, sodass wir uns\n  in einer gemeinsamen Diskussion darüber austauschen\\, welche Auswirkung\n en die DSGVO letztendlich auf die Personalarbeit hatte. Hierfür möchten \n wir einen Fachanwalt für Internet-Recht einladen\\, der sich mit dem Them\n a Datenschutz auskennt und uns diesbezüglich auf einen gemeinsamen Stand\n  bringt.  \\nJobwert.info: Update - Arbeitgeber-BenefitsMit den Feedbacks\n  zu Jobwerts neuem Feature Arbeitgeber-Benefits entwerfen wir ein fein g\n egliedertes Kategorisierungssystem. Hierzu befragen wir von August bis S\n eptember unsere Partner\\, und werden Ihnen eine Auswertung dazu vorstell\n en. Die Ergebnisse bilden die Grundlage für den darauffolgenden Workshop\n . Außerdem gibt es weitere Entwicklungen an Jobwert.info\\, die wir Ihnen\n  nicht vorenthalten wollen. Unter Anderem wird Jobwert wesentlich genaue\n re Auswertungen über den Geldwert der einzelnen Benefits zulassen.\\nWork\n shop: Professionelles Benchmarking von Arbeitgeber-BenefitsIn unserem Wo\n rkshop möchten wir die Kategorisierungssystematik der Benefit-Auswertung\n  mit Ihnen gemeinsam ausbauen. Sie bildet die Basis für ein exakten Bene\n fit-Benchmark. Hierzu möchten wir im Workshop ein Gespräch zu wichtigen \n Leitfragen anregen\\, die uns als Feedback für die weitere Verbesserung J\n obwerts dienen. Wie wäre es beispielsweise mit der Frage: Gibt es konkre\n te Benefits\\, die für einzelne Berufsprofile typisch sind? Wenn ja\\, in \n welchem Umfang? \\n\nURL:https://www.empfehlungsbund.de/events/38\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=T-Systems Multimedia Solutions GmbH / Empfehlungsbund.de:htt\n ps://www.empfehlungsbund.de/events/38\nATTACH:https://www.empfehlungsbund.de/events/38\nLOCATION:T-Systems Multimedia Solutions GmbH\\, Winterfeldtstraße  21\\, 10\n 781 Berlin\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-T\n ech überhaupt einen Nutzen für die Personalarbeit?\u003c/strong\u003e In den Commu\n nity Workshops des Empfehlungsbundes tauschen sich Personalexperten und \n Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen \n für eine erfolgversprechende Personalarbeit aus. In unseren Workshops br\n ingen sie sich mit Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer\n  treiben wir die Weiterentwicklung unseres Konzeptes zur Fachkräftesuche\n  in der Gemeinschaft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eUnsere Workshop-Agend\n a beinhaltet unter anderem, welche Auswirkung die DSGVO letztendlich auf\n  die betrieblichen Abläufe im Personalwesen hat\u003c/strong\u003e.\u003cstrong\u003e Des We\n iteren werden wir Ihnen die verbesserte Jobwert Benefit-Auswertung vorst\n ellen und im Detail diskutieren. In unserem Workshop möchten wir mit Ihn\n en ein Konzept entwickeln, wie sich ein professioneller Benefit-Benchmar\n k realisieren lässt.\u003c/strong\u003e Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\n \u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur \n Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"ht\n tp://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwe\n rk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c\n /a\u003e\u003c/div\u003e\u003ch4\u003eEB-BMS: Update zur Beta-Phase\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung des \n Bewerbermanagementsystems des Empfehlungsbundes ist weit genug voran ges\n chritten, sodass wir nun zu Ihrer Mithilfe am Beta-Test aufrufen können.\n  In diesem Zusammenhang möchten wir Ihnen den derzeitigen Entwicklungsst\n and des EB-BMS und die darin enthaltenen Features vorstellen, die wir au\n f Grundlage des reichen Feedbacks vorheriger Veranstaltungen sammeln und\n  umsetzen konnten. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eDSGVO: Erfahrungsaustausch über die D\n atenschutzgrundverordnung\u003c/h4\u003e\u003cdiv\u003eSeit dem 25. Mai 2018 ist die DSGVO r\n echtskräftig. Der dadurch aufgewirbelte Staub dürfte sich mittlerweile w\n eitestgehend gelegt haben, sodass wir uns in einer gemeinsamen Diskussio\n n darüber austauschen, welche Auswirkungen die DSGVO letztendlich auf di\n e Personalarbeit hatte. Hierfür möchten wir einen Fachanwalt für Interne\n t-Recht einladen, der sich mit dem Thema Datenschutz auskennt und uns di\n esbezüglich auf einen gemeinsamen Stand bringt. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eJobwert.\n info: Update - Arbeitgeber-Benefits\u003c/h4\u003e\u003cdiv\u003eMit den Feedbacks zu Jobwer\n ts neuem Feature \u003cem\u003eArbeitgeber-Benefits\u003c/em\u003e entwerfen wir ein fein ge\n gliedertes Kategorisierungssystem. Hierzu befragen wir von August bis Se\n ptember unsere Partner, und werden Ihnen eine Auswertung dazu vorstellen\n . Die Ergebnisse bilden die Grundlage für den darauffolgenden Workshop. \n Außerdem gibt es weitere Entwicklungen an Jobwert.info, die wir Ihnen ni\n cht vorenthalten wollen. Unter Anderem wird Jobwert wesentlich genauere \n Auswertungen über den Geldwert der einzelnen Benefits zulassen.\u003c/div\u003e\u003ch4\n \u003eWorkshop: Professionelles Benchmarking von Arbeitgeber-Benefits\u003c/h4\u003e\u003cdi\n v\u003eIn unserem Workshop möchten wir die Kategorisierungssystematik der Ben\n efit-Auswertung mit Ihnen gemeinsam ausbauen. Sie bildet die Basis für e\n in exakten Benefit-Benchmark. Hierzu möchten wir im Workshop ein Gespräc\n h zu wichtigen Leitfragen anregen, die uns als Feedback für die weitere \n Verbesserung Jobwerts dienen. Wie wäre es beispielsweise mit der Frage: \n Gibt es konkrete Benefits, die für einzelne Berufsprofile typisch sind? \n Wenn ja, in welchem Umfang?\u0026nbsp;\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210013,"Bezeichnung":"T-Systems Multimedia Solutions GmbH","Kommentar":"Rechnung per Post zuschicken.\r\n\r\n","Typ":10,"Nutzername":"tsystemsmms","Website":"https://www.t-systems.com/de/en","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-09-30T10:38:54.000+02:00"}},{"id":90,"display_line":"25.09.2018 - 15 bis 18:00 Uhr Dresden - Empfehlungsbund Community Workshop in Dresden - Gastgeber: SAB Sächsische Aufbaubank - Förderbank -","subtitle":"Empfehlungsbund Community Workshop in Dresden","city":"Dresden","start":"2018-09-25T15:00:49.000+02:00","finish":"2018-09-25T18:00:49.000+02:00","address":"Pirnaische Straße 9, 01069 Dresden","event_host":"SAB Sächsische Aufbaubank - Förderbank -","lat":51.0461,"lon":13.75,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20180325T020000\nRDATE:20180325T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180925T180049\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180925T150049\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nUnsere Wor\n kshop-Agenda beinhaltet unter anderem\\, welche Auswirkung die DSGVO letz\n tendlich auf die betrieblichen Abläufe im Personalwesen hat. Des Weitere\n n werden wir Ihnen die verbesserte Jobwert Benefit-Auswertung vorstellen\n  und im Detail diskutieren. In unserem Workshop möchten wir mit Ihnen ei\n n Konzept entwickeln\\, wie sich ein professioneller Benefit-Benchmark re\n alisieren lässt. Wir freuen uns auf Sie! \\n\\n\\nDie Teilnahme ist kostenf\n rei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatoris\n chen Gründen erforderlich.\\nDer Empfehlungsbund ist das führende Netzwer\n k zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\\n\n \\nEB-BMS: Update zur Beta-PhaseDie Entwicklung des Bewerbermanagementsys\n tems des Empfehlungsbundes ist weit genug voran geschritten\\, sodass wir\n  nun zu Ihrer Mithilfe am Beta-Test aufrufen können. In diesem Zusammenh\n ang möchten wir Ihnen den derzeitigen Entwicklungsstand des EB-BMS und d\n ie darin enthaltenen Features vorstellen\\, die wir auf Grundlage des rei\n chen Feedbacks vorheriger Veranstaltungen sammeln und umsetzen konnten. \n  \\nDSGVO: Erfahrungsaustausch über die DatenschutzgrundverordnungSeit de\n m 25. Mai 2018 ist die DSGVO rechtskräftig. Der dadurch aufgewirbelte St\n aub dürfte sich mittlerweile weitestgehend gelegt haben\\, sodass wir uns\n  in einer gemeinsamen Diskussion darüber austauschen\\, welche Auswirkung\n en die DSGVO letztendlich auf die Personalarbeit hatte. Hierfür möchten \n wir einen Fachanwalt für Internet-Recht einladen\\, der sich mit dem Them\n a Datenschutz auskennt und uns diesbezüglich auf einen gemeinsamen Stand\n  bringt.  \\nJobwert.info: Update - Arbeitgeber-BenefitsMit den Feedbacks\n  zu Jobwerts neuem Feature Arbeitgeber-Benefits entwerfen wir ein fein g\n egliedertes Kategorisierungssystem. Hierzu befragen wir von August bis S\n eptember unsere Partner\\, und werden Ihnen eine Auswertung dazu vorstell\n en. Die Ergebnisse bilden die Grundlage für den darauffolgenden Workshop\n . Außerdem gibt es weitere Entwicklungen an Jobwert.info\\, die wir Ihnen\n  nicht vorenthalten wollen. Unter Anderem wird Jobwert wesentlich genaue\n re Auswertungen über den Geldwert der einzelnen Benefits zulassen.\\nWork\n shop: Professionelles Benchmarking von Arbeitgeber-BenefitsIn unserem Wo\n rkshop möchten wir die Kategorisierungssystematik der Benefit-Auswertung\n  mit Ihnen gemeinsam ausbauen. Sie bildet die Basis für ein exakten Bene\n fit-Benchmark. Hierzu möchten wir im Workshop ein Gespräch zu wichtigen \n Leitfragen anregen\\, die uns als Feedback für die weitere Verbesserung J\n obwerts dienen. Wie wäre es beispielsweise mit der Frage: Gibt es konkre\n te Benefits\\, die für einzelne Berufsprofile typisch sind? Wenn ja\\, in \n welchem Umfang? \\n\nURL:https://www.empfehlungsbund.de/events/38\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=SAB Sächsische Aufbaubank - Förderbank - / Empfehlungsbund.d\n e:https://www.empfehlungsbund.de/events/38\nATTACH:https://www.empfehlungsbund.de/events/38\nLOCATION:SAB Sächsische Aufbaubank - Förderbank -\\, Pirnaische Straße 9\\,\n  01069 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-T\n ech überhaupt einen Nutzen für die Personalarbeit?\u003c/strong\u003e In den Commu\n nity Workshops des Empfehlungsbundes tauschen sich Personalexperten und \n Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen \n für eine erfolgversprechende Personalarbeit aus. In unseren Workshops br\n ingen sie sich mit Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer\n  treiben wir die Weiterentwicklung unseres Konzeptes zur Fachkräftesuche\n  in der Gemeinschaft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eUnsere Workshop-Agend\n a beinhaltet unter anderem, welche Auswirkung die DSGVO letztendlich auf\n  die betrieblichen Abläufe im Personalwesen hat\u003c/strong\u003e.\u003cstrong\u003e Des We\n iteren werden wir Ihnen die verbesserte Jobwert Benefit-Auswertung vorst\n ellen und im Detail diskutieren. In unserem Workshop möchten wir mit Ihn\n en ein Konzept entwickeln, wie sich ein professioneller Benefit-Benchmar\n k realisieren lässt.\u003c/strong\u003e Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\n \u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur \n Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"ht\n tp://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwe\n rk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c\n /a\u003e\u003c/div\u003e\u003ch4\u003eEB-BMS: Update zur Beta-Phase\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung des \n Bewerbermanagementsystems des Empfehlungsbundes ist weit genug voran ges\n chritten, sodass wir nun zu Ihrer Mithilfe am Beta-Test aufrufen können.\n  In diesem Zusammenhang möchten wir Ihnen den derzeitigen Entwicklungsst\n and des EB-BMS und die darin enthaltenen Features vorstellen, die wir au\n f Grundlage des reichen Feedbacks vorheriger Veranstaltungen sammeln und\n  umsetzen konnten. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eDSGVO: Erfahrungsaustausch über die D\n atenschutzgrundverordnung\u003c/h4\u003e\u003cdiv\u003eSeit dem 25. Mai 2018 ist die DSGVO r\n echtskräftig. Der dadurch aufgewirbelte Staub dürfte sich mittlerweile w\n eitestgehend gelegt haben, sodass wir uns in einer gemeinsamen Diskussio\n n darüber austauschen, welche Auswirkungen die DSGVO letztendlich auf di\n e Personalarbeit hatte. Hierfür möchten wir einen Fachanwalt für Interne\n t-Recht einladen, der sich mit dem Thema Datenschutz auskennt und uns di\n esbezüglich auf einen gemeinsamen Stand bringt. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eJobwert.\n info: Update - Arbeitgeber-Benefits\u003c/h4\u003e\u003cdiv\u003eMit den Feedbacks zu Jobwer\n ts neuem Feature \u003cem\u003eArbeitgeber-Benefits\u003c/em\u003e entwerfen wir ein fein ge\n gliedertes Kategorisierungssystem. Hierzu befragen wir von August bis Se\n ptember unsere Partner, und werden Ihnen eine Auswertung dazu vorstellen\n . Die Ergebnisse bilden die Grundlage für den darauffolgenden Workshop. \n Außerdem gibt es weitere Entwicklungen an Jobwert.info, die wir Ihnen ni\n cht vorenthalten wollen. Unter Anderem wird Jobwert wesentlich genauere \n Auswertungen über den Geldwert der einzelnen Benefits zulassen.\u003c/div\u003e\u003ch4\n \u003eWorkshop: Professionelles Benchmarking von Arbeitgeber-Benefits\u003c/h4\u003e\u003cdi\n v\u003eIn unserem Workshop möchten wir die Kategorisierungssystematik der Ben\n efit-Auswertung mit Ihnen gemeinsam ausbauen. Sie bildet die Basis für e\n in exakten Benefit-Benchmark. Hierzu möchten wir im Workshop ein Gespräc\n h zu wichtigen Leitfragen anregen, die uns als Feedback für die weitere \n Verbesserung Jobwerts dienen. Wie wäre es beispielsweise mit der Frage: \n Gibt es konkrete Benefits, die für einzelne Berufsprofile typisch sind? \n Wenn ja, in welchem Umfang?\u0026nbsp;\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210049,"Bezeichnung":"SAB Sächsische Aufbaubank - Förderbank -","Kommentar":"für Verlängerung 2019 ist nächsthöhere Mitgliedsstufe fällig - die SAB sagt selbst: \"Die rund 1100 Mitarbeiter der SAB tragen mit ihrem Engagement....\" (11.06.2018, msc) ","Typ":10,"Nutzername":"sab","Website":"https://connect.guidecom.de/jobportal/sab/viewAusschreibungen.html","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-11T15:36:18.000+02:00"}},{"id":91,"display_line":"26.09.2018 - 15 bis 18:00 Uhr Leipzig - Empfehlungsbund Community Workshop in Leipzig - Gastgeber: Mercateo Services GmbH und Co. KG ","subtitle":"Empfehlungsbund Community Workshop in Leipzig","city":"Leipzig","start":"2018-09-26T15:00:45.000+02:00","finish":"2018-09-26T18:00:45.000+02:00","address":"Neumarkt 20, Eingang links neben Conrad 4.OG, 04109 Leipzig ","event_host":"Mercateo Services GmbH und Co. KG ","lat":51.3386,"lon":12.3762,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20180325T020000\nRDATE:20180325T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180926T180045\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180926T150045\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen ihre\n  künftigen Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Perso\n nalarbeit? In den Community Workshops des Empfehlungsbundes tauschen sic\n h Personalexperten und Führungskräfte regionaler Unternehmen über neue E\n ntwicklungen und Ideen für eine erfolgversprechende Personalarbeit aus. \n In unseren Workshops bringen sie sich mit Ihren Ideen ein. Dank der Beit\n räge unserer Teilnehmer treiben wir die Weiterentwicklung unseres Konzep\n tes zur Fachkräftesuche in der Gemeinschaft weiter voran. \\n\\nUnsere Wor\n kshop-Agenda beinhaltet unter anderem\\, welche Auswirkung die DSGVO letz\n tendlich auf die betrieblichen Abläufe im Personalwesen hat. Des Weitere\n n werden wir Ihnen die verbesserte Jobwert Benefit-Auswertung vorstellen\n  und im Detail diskutieren. In unserem Workshop möchten wir mit Ihnen ei\n n Konzept entwickeln\\, wie sich ein professioneller Benefit-Benchmark re\n alisieren lässt. Wir freuen uns auf Sie! \\n\\n\\nDie Teilnahme ist kostenf\n rei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatoris\n chen Gründen erforderlich.\\nDer Empfehlungsbund ist das führende Netzwer\n k zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\\n\n \\nEB-BMS: Update zur Beta-PhaseDie Entwicklung des Bewerbermanagementsys\n tems des Empfehlungsbundes ist weit genug voran geschritten\\, sodass wir\n  nun zu Ihrer Mithilfe am Beta-Test aufrufen können. In diesem Zusammenh\n ang möchten wir Ihnen den derzeitigen Entwicklungsstand des EB-BMS und d\n ie darin enthaltenen Features vorstellen\\, die wir auf Grundlage des rei\n chen Feedbacks vorheriger Veranstaltungen sammeln und umsetzen konnten. \n  \\nDSGVO: Erfahrungsaustausch über die DatenschutzgrundverordnungSeit de\n m 25. Mai 2018 ist die DSGVO rechtskräftig. Der dadurch aufgewirbelte St\n aub dürfte sich mittlerweile weitestgehend gelegt haben\\, sodass wir uns\n  in einer gemeinsamen Diskussion darüber austauschen\\, welche Auswirkung\n en die DSGVO letztendlich auf die Personalarbeit hatte. Hierfür möchten \n wir einen Fachanwalt für Internet-Recht einladen\\, der sich mit dem Them\n a Datenschutz auskennt und uns diesbezüglich auf einen gemeinsamen Stand\n  bringt.  \\nJobwert.info: Update - Arbeitgeber-BenefitsMit den Feedbacks\n  zu Jobwerts neuem Feature Arbeitgeber-Benefits entwerfen wir ein fein g\n egliedertes Kategorisierungssystem. Hierzu befragen wir von August bis S\n eptember unsere Partner\\, und werden Ihnen eine Auswertung dazu vorstell\n en. Die Ergebnisse bilden die Grundlage für den darauffolgenden Workshop\n . Außerdem gibt es weitere Entwicklungen an Jobwert.info\\, die wir Ihnen\n  nicht vorenthalten wollen. Unter Anderem wird Jobwert wesentlich genaue\n re Auswertungen über den Geldwert der einzelnen Benefits zulassen.\\nWork\n shop: Professionelles Benchmarking von Arbeitgeber-BenefitsIn unserem Wo\n rkshop möchten wir die Kategorisierungssystematik der Benefit-Auswertung\n  mit Ihnen gemeinsam ausbauen. Sie bildet die Basis für ein exakten Bene\n fit-Benchmark. Hierzu möchten wir im Workshop ein Gespräch zu wichtigen \n Leitfragen anregen\\, die uns als Feedback für die weitere Verbesserung J\n obwerts dienen. Wie wäre es beispielsweise mit der Frage: Gibt es konkre\n te Benefits\\, die für einzelne Berufsprofile typisch sind? Wenn ja\\, in \n welchem Umfang? \\n\nURL:https://www.empfehlungsbund.de/events/38\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=Mercateo Services GmbH und Co. KG  / Empfehlungsbund.de:http\n s://www.empfehlungsbund.de/events/38\nATTACH:https://www.empfehlungsbund.de/events/38\nLOCATION:Mercateo Services GmbH und Co. KG \\, Neumarkt 20\\, Eingang links\n  neben Conrad 4.OG\\, 04109 Leipzig \nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen ihre künftigen Mitarbeiter? Hat HR-T\n ech überhaupt einen Nutzen für die Personalarbeit?\u003c/strong\u003e In den Commu\n nity Workshops des Empfehlungsbundes tauschen sich Personalexperten und \n Führungskräfte regionaler Unternehmen über neue Entwicklungen und Ideen \n für eine erfolgversprechende Personalarbeit aus. In unseren Workshops br\n ingen sie sich mit Ihren Ideen ein. Dank der Beiträge unserer Teilnehmer\n  treiben wir die Weiterentwicklung unseres Konzeptes zur Fachkräftesuche\n  in der Gemeinschaft weiter voran. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eUnsere Workshop-Agend\n a beinhaltet unter anderem, welche Auswirkung die DSGVO letztendlich auf\n  die betrieblichen Abläufe im Personalwesen hat\u003c/strong\u003e.\u003cstrong\u003e Des We\n iteren werden wir Ihnen die verbesserte Jobwert Benefit-Auswertung vorst\n ellen und im Detail diskutieren. In unserem Workshop möchten wir mit Ihn\n en ein Konzept entwickeln, wie sich ein professioneller Benefit-Benchmar\n k realisieren lässt.\u003c/strong\u003e Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\n \u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur \n Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"ht\n tp://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwe\n rk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c\n /a\u003e\u003c/div\u003e\u003ch4\u003eEB-BMS: Update zur Beta-Phase\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung des \n Bewerbermanagementsystems des Empfehlungsbundes ist weit genug voran ges\n chritten, sodass wir nun zu Ihrer Mithilfe am Beta-Test aufrufen können.\n  In diesem Zusammenhang möchten wir Ihnen den derzeitigen Entwicklungsst\n and des EB-BMS und die darin enthaltenen Features vorstellen, die wir au\n f Grundlage des reichen Feedbacks vorheriger Veranstaltungen sammeln und\n  umsetzen konnten. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eDSGVO: Erfahrungsaustausch über die D\n atenschutzgrundverordnung\u003c/h4\u003e\u003cdiv\u003eSeit dem 25. Mai 2018 ist die DSGVO r\n echtskräftig. Der dadurch aufgewirbelte Staub dürfte sich mittlerweile w\n eitestgehend gelegt haben, sodass wir uns in einer gemeinsamen Diskussio\n n darüber austauschen, welche Auswirkungen die DSGVO letztendlich auf di\n e Personalarbeit hatte. Hierfür möchten wir einen Fachanwalt für Interne\n t-Recht einladen, der sich mit dem Thema Datenschutz auskennt und uns di\n esbezüglich auf einen gemeinsamen Stand bringt. \u0026nbsp;\u003c/div\u003e\u003ch4\u003eJobwert.\n info: Update - Arbeitgeber-Benefits\u003c/h4\u003e\u003cdiv\u003eMit den Feedbacks zu Jobwer\n ts neuem Feature \u003cem\u003eArbeitgeber-Benefits\u003c/em\u003e entwerfen wir ein fein ge\n gliedertes Kategorisierungssystem. Hierzu befragen wir von August bis Se\n ptember unsere Partner, und werden Ihnen eine Auswertung dazu vorstellen\n . Die Ergebnisse bilden die Grundlage für den darauffolgenden Workshop. \n Außerdem gibt es weitere Entwicklungen an Jobwert.info, die wir Ihnen ni\n cht vorenthalten wollen. Unter Anderem wird Jobwert wesentlich genauere \n Auswertungen über den Geldwert der einzelnen Benefits zulassen.\u003c/div\u003e\u003ch4\n \u003eWorkshop: Professionelles Benchmarking von Arbeitgeber-Benefits\u003c/h4\u003e\u003cdi\n v\u003eIn unserem Workshop möchten wir die Kategorisierungssystematik der Ben\n efit-Auswertung mit Ihnen gemeinsam ausbauen. Sie bildet die Basis für e\n in exakten Benefit-Benchmark. Hierzu möchten wir im Workshop ein Gespräc\n h zu wichtigen Leitfragen anregen, die uns als Feedback für die weitere \n Verbesserung Jobwerts dienen. Wie wäre es beispielsweise mit der Frage: \n Gibt es konkrete Benefits, die für einzelne Berufsprofile typisch sind? \n Wenn ja, in welchem Umfang?\u0026nbsp;\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210583,"Bezeichnung":"Unite Services GmbH und Co. KG ","Kommentar":"","Typ":10,"Nutzername":"mercateo","Website":"https://my-place2be.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-29T17:24:48.000+02:00"}}]},{"id":37,"name":"oxfp_18","hashtag":"ofxp","title":"Offenes Expertenforum Personalmanagement","teaser":"Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personalarbeit? Das offene Expertenforum Personalmanagement bringt Personalexperten und Führungskräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit vorgestellt. \r\n\r\nAuf der Agenda steht unter anderem die Auswertung des Gehaltsbenchmarks 2018. Des Weiteren möchten wir Ihnen zeigen, wie Sie mit Kanaleo prüfen, inwiefern Ihr Bewerbungsprozess den heutigen Anforderungen von Kandidaten gerecht wird. Außerdem stellen wir Ihnen mit EB-Academy eine autodidaktische Lernplattform vor, womit Sie Ihr Personalmanagement-Knowhow weiter optimieren können. Wir freuen uns auf Ihre Teilnahme! \r\n\r\n","teaser_hrfilter":"Zahlen Sie branchenübliche Gehälter? Das Offene Expertenforum Personalmanagement 2018 gibt Ihnen die Antwort. Wir freuen uns, wenn auch Sie unserer Veranstaltung beiwohnen.","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Personalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp; Das offene Expertenforum Personalmanagement bringt Personalexperten und Führungskräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit vorgestellt. Wir ermutigen unsere Workshopteilnehmer, diese Ideen zu evaluieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter anderem \u003cstrong\u003edie Auswertung des Gehaltsbenchmarks und Benefit-Leistungen für 2018\u003c/strong\u003e. Des Weiteren möchten wir Ihnen zeigen, \u003cstrong\u003ewie Sie mit Kanaleo prüfen, inwiefern Ihr Bewerbungsprozess den heutigen Anforderungen von Kandidaten gerecht wird\u003c/strong\u003e. Außerdem stellen wir Ihnen die erste funktionelle Testversion des künftigen \u003cstrong\u003eEmpfehlungsbund Bewerber-Management-Systems\u003c/strong\u003e vor. Wir freuen uns auf Ihre Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e","agenda":"\u003ch4\u003eJobwert.info - Auswertung Gehaltsbenchmark + Benefits 2018 \u0026nbsp;\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\u003cbr\u003eIn unserer Auswertung erfahren Sie, wie sich das Lohnniveau für das Jahr 2018 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.info um eine weitere spannende Funktion erweitert. Seit 2018 können Unternehmen auf Jobwert.info ihre Benefit-Leistungen angeben. In unserem Expertenforum wollen wir Ihnen einen Branchenvergleich gezahlter Benefit-Leistungen nicht vorenthalten.\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eKanaleo.de - So optimieren Sie den Bewerbungsprozess\u003c/h4\u003e\u003cdiv\u003eDer Ruf eines Arbeitgebers in der umliegenden Region hat einen nachhallenden Einfluss auf die zukünftige Personalgewinnung an seinem Standort. Die positiven und negativen Erfahrungen, die ein Kandidat im Laufe seines Bewerbungsprozesses macht, spielen hier eine wesentliche Rolle. Mit Kanaleo haben wir über 1000 Kandidaten detailliert nach ihren Erfahrungen im Bewerbungsprozess befragt. In unserem Fachvortrag möchten wir Ihnen die Bedeutung der Candidate Experience näher bringen und wir werden Ihnen zeigen, wie Sie mit dem Bewerber-Controlling-Tool \u003cem\u003ekanaleo \u003c/em\u003eIhren Bewerbungsprozess optimieren können.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eWorkshop - Funktionelles Alpharelease des Empfehlungsbund-BMS\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung unseres Bewerber-Management-Systems ist nun weit genug voran geschritten, sodass wir Ihnen einen ersten Prototypen präsentieren möchten.\u003cbr\u003eDaher stellen wir Ihnen in unserem Workshop die Kernfunktionalität des Empfehlungsbund-BMS vor, um gemeinsam mit ihnen zu diskutieren, inwiefern Bewerbungsprozesse angemessen abgebildet werden. Außerdem suchen wir Personalexperten, die sich bereiterklären das Bewerber-Management-System unter realen Testbedingungen zu nutzen. \u0026nbsp;\u003c/div\u003e","start":"2018-05-29T14:00:14.000+02:00","finish":"2018-05-30T18:00:56.000+02:00","visible":true,"is_open_network":true,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/37/wide_Personalforum_farbe.png","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/37/wide_OXFP_Banner.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/37/Expertenforum_blog.jpg","register_url":"https://www.empfehlungsbund.de/events/37/register","show_url":"https://www.empfehlungsbund.de/events/37","events":[{"id":84,"display_line":"29.05.2018 - 14 bis 18:00 Uhr Dresden - Offenes Expertenforum Personalmanagement in Dresden - Gastgeber: Trans4mation IT GmbH","subtitle":"Offenes Expertenforum Personalmanagement in Dresden","city":"Dresden","start":"2018-05-29T14:00:53.000+02:00","finish":"2018-05-29T18:00:53.000+02:00","address":"Glashütter Straße 55, 01309 Dresden","event_host":"Trans4mation IT GmbH","lat":51.0423,"lon":13.794,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20180325T020000\nRDATE:20180325T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180529T180053\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180529T140053\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen pote\n nzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personal\n arbeit?   Das offene Expertenforum Personalmanagement bringt Personalexp\n erten und Führungskräfte regionaler Unternehmen zusammen. Hier werden ne\n ue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit v\n orgestellt. Wir ermutigen unsere Workshopteilnehmer\\, diese Ideen zu eva\n luieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzeptes \n der Fachkräftesuche in der Gemeinschaft voranzutreiben. \\n\\nAuf der Agen\n da steht unter anderem die Auswertung des Gehaltsbenchmarks und Benefit-\n Leistungen für 2018. Des Weiteren möchten wir Ihnen zeigen\\, wie Sie mit\n  Kanaleo prüfen\\, inwiefern Ihr Bewerbungsprozess den heutigen Anforderu\n ngen von Kandidaten gerecht wird. Außerdem stellen wir Ihnen die erste f\n unktionelle Testversion des künftigen Empfehlungsbund Bewerber-Managemen\n t-Systems vor. Wir freuen uns auf Ihre Teilnahme! \\n\\n\\nDie Teilnahme is\n t kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus orga\n nisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\\n\\nJobwert.info - Auswertung Gehaltsbenchmark + Benefits 2018  D\n er Empfehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre\n  ak­tu­el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer R\n e­gi­on und Bran­che.\\nIn unserer Auswertung erfahren Sie\\, wie sich das\n  Lohnniveau für das Jahr 2018 gestaltet. Außerdem haben wir den Gehaltsb\n enchmark von Jobwert.info um eine weitere spannende Funktion erweitert. \n Seit 2018 können Unternehmen auf Jobwert.info ihre Benefit-Leistungen an\n geben. In unserem Expertenforum wollen wir Ihnen einen Branchenvergleich\n  gezahlter Benefit-Leistungen nicht vorenthalten.          \\n\\n\\nKanaleo\n .de - So optimieren Sie den BewerbungsprozessDer Ruf eines Arbeitgebers \n in der umliegenden Region hat einen nachhallenden Einfluss auf die zukün\n ftige Personalgewinnung an seinem Standort. Die positiven und negativen \n Erfahrungen\\, die ein Kandidat im Laufe seines Bewerbungsprozesses macht\n \\, spielen hier eine wesentliche Rolle. Mit Kanaleo haben wir über 1000 \n Kandidaten detailliert nach ihren Erfahrungen im Bewerbungsprozess befra\n gt. In unserem Fachvortrag möchten wir Ihnen die Bedeutung der Candidate\n  Experience näher bringen und wir werden Ihnen zeigen\\, wie Sie mit dem \n Bewerber-Controlling-Tool kanaleo Ihren Bewerbungsprozess optimieren kön\n nen.\\n\\n\\nWorkshop - Funktionelles Alpharelease des Empfehlungsbund-BMSD\n ie Entwicklung unseres Bewerber-Management-Systems ist nun weit genug vo\n ran geschritten\\, sodass wir Ihnen einen ersten Prototypen präsentieren \n möchten.\\nDaher stellen wir Ihnen in unserem Workshop die Kernfunktional\n ität des Empfehlungsbund-BMS vor\\, um gemeinsam mit ihnen zu diskutieren\n \\, inwiefern Bewerbungsprozesse angemessen abgebildet werden. Außerdem s\n uchen wir Personalexperten\\, die sich bereiterklären das Bewerber-Manage\n ment-System unter realen Testbedingungen zu nutzen.  \\n\nURL:https://www.empfehlungsbund.de/events/37\nSUMMARY:Offenes Expertenforum Personalmanagement\nORGANIZER;CN=Trans4mation IT GmbH / Empfehlungsbund.de:https://www.empfeh\n lungsbund.de/events/37\nATTACH:https://www.empfehlungsbund.de/events/37\nLOCATION:Trans4mation IT GmbH\\, Glashütter Straße 55\\, 01309 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech\n  überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp; Das offe\n ne Expertenforum Personalmanagement bringt Personalexperten und Führungs\n kräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklungen u\n nd Ideen für eine erfolgversprechende Personalarbeit vorgestellt. Wir er\n mutigen unsere Workshopteilnehmer, diese Ideen zu evaluieren und mit Ihr\n en Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräftesuche\n  in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter \n anderem \u003cstrong\u003edie Auswertung des Gehaltsbenchmarks und Benefit-Leistun\n gen für 2018\u003c/strong\u003e. Des Weiteren möchten wir Ihnen zeigen, \u003cstrong\u003ewi\n e Sie mit Kanaleo prüfen, inwiefern Ihr Bewerbungsprozess den heutigen A\n nforderungen von Kandidaten gerecht wird\u003c/strong\u003e. Außerdem stellen wir \n Ihnen die erste funktionelle Testversion des künftigen \u003cstrong\u003eEmpfehlun\n gsbund Bewerber-Management-Systems\u003c/strong\u003e vor. Wir freuen uns auf Ihre\n  Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch\n  ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründe\n n erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlun\n gsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch\n  Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch4\u003eJobwert.info - Auswertung Geh\n altsbenchmark + Benefits 2018 \u0026nbsp;\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund vergle\n icht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­\n häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\u003cbr\u003e\n In unserer Auswertung erfahren Sie, wie sich das Lohnniveau für das Jahr\n  2018 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.inf\n o um eine weitere spannende Funktion erweitert. Seit 2018 können Unterne\n hmen auf Jobwert.info ihre Benefit-Leistungen angeben. In unserem Expert\n enforum wollen wir Ihnen einen Branchenvergleich gezahlter Benefit-Leist\n ungen nicht vorenthalten.\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;\u0026nbsp;\u003cbr\u003e\u003cbr\n \u003e\u003c/div\u003e\u003ch4\u003eKanaleo.de - So optimieren Sie den Bewerbungsprozess\u003c/h4\u003e\u003cdiv\n \u003eDer Ruf eines Arbeitgebers in der umliegenden Region hat einen nachhall\n enden Einfluss auf die zukünftige Personalgewinnung an seinem Standort. \n Die positiven und negativen Erfahrungen, die ein Kandidat im Laufe seine\n s Bewerbungsprozesses macht, spielen hier eine wesentliche Rolle. Mit Ka\n naleo haben wir über 1000 Kandidaten detailliert nach ihren Erfahrungen \n im Bewerbungsprozess befragt. In unserem Fachvortrag möchten wir Ihnen d\n ie Bedeutung der Candidate Experience näher bringen und wir werden Ihnen\n  zeigen, wie Sie mit dem Bewerber-Controlling-Tool \u003cem\u003ekanaleo \u003c/em\u003eIhre\n n Bewerbungsprozess optimieren können.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eWorkshop - Funkt\n ionelles Alpharelease des Empfehlungsbund-BMS\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung u\n nseres Bewerber-Management-Systems ist nun weit genug voran geschritten,\n  sodass wir Ihnen einen ersten Prototypen präsentieren möchten.\u003cbr\u003eDaher\n  stellen wir Ihnen in unserem Workshop die Kernfunktionalität des Empfeh\n lungsbund-BMS vor, um gemeinsam mit ihnen zu diskutieren, inwiefern Bewe\n rbungsprozesse angemessen abgebildet werden. Außerdem suchen wir Persona\n lexperten, die sich bereiterklären das Bewerber-Management-System unter \n realen Testbedingungen zu nutzen. \u0026nbsp;\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210040,"Bezeichnung":"Trans4mation IT GmbH","Kommentar":"","Typ":10,"Nutzername":"trans4mation","Website":"https://www.trans4mation.de/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-09-30T11:06:20.000+02:00"}},{"id":85,"display_line":"29.05.2018 - 14 bis 18:00 Uhr München - Offenes Expertenforum Personalmanagement in München - Gastgeber: IBM Client Innovation Center - Deutschland GmbH","subtitle":"Offenes Expertenforum Personalmanagement in München","city":"München","start":"2018-05-29T14:00:14.000+02:00","finish":"2018-05-29T18:00:14.000+02:00","address":"Hollerithstraße 1, 81829 München","event_host":"IBM Client Innovation Center - Deutschland GmbH","lat":48.1352,"lon":11.6709,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20180325T020000\nRDATE:20180325T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180529T180014\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180529T140014\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen pote\n nzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personal\n arbeit?   Das offene Expertenforum Personalmanagement bringt Personalexp\n erten und Führungskräfte regionaler Unternehmen zusammen. Hier werden ne\n ue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit v\n orgestellt. Wir ermutigen unsere Workshopteilnehmer\\, diese Ideen zu eva\n luieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzeptes \n der Fachkräftesuche in der Gemeinschaft voranzutreiben. \\n\\nAuf der Agen\n da steht unter anderem die Auswertung des Gehaltsbenchmarks und Benefit-\n Leistungen für 2018. Des Weiteren möchten wir Ihnen zeigen\\, wie Sie mit\n  Kanaleo prüfen\\, inwiefern Ihr Bewerbungsprozess den heutigen Anforderu\n ngen von Kandidaten gerecht wird. Außerdem stellen wir Ihnen die erste f\n unktionelle Testversion des künftigen Empfehlungsbund Bewerber-Managemen\n t-Systems vor. Wir freuen uns auf Ihre Teilnahme! \\n\\n\\nDie Teilnahme is\n t kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus orga\n nisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\\n\\nJobwert.info - Auswertung Gehaltsbenchmark + Benefits 2018  D\n er Empfehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre\n  ak­tu­el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer R\n e­gi­on und Bran­che.\\nIn unserer Auswertung erfahren Sie\\, wie sich das\n  Lohnniveau für das Jahr 2018 gestaltet. Außerdem haben wir den Gehaltsb\n enchmark von Jobwert.info um eine weitere spannende Funktion erweitert. \n Seit 2018 können Unternehmen auf Jobwert.info ihre Benefit-Leistungen an\n geben. In unserem Expertenforum wollen wir Ihnen einen Branchenvergleich\n  gezahlter Benefit-Leistungen nicht vorenthalten.          \\n\\n\\nKanaleo\n .de - So optimieren Sie den BewerbungsprozessDer Ruf eines Arbeitgebers \n in der umliegenden Region hat einen nachhallenden Einfluss auf die zukün\n ftige Personalgewinnung an seinem Standort. Die positiven und negativen \n Erfahrungen\\, die ein Kandidat im Laufe seines Bewerbungsprozesses macht\n \\, spielen hier eine wesentliche Rolle. Mit Kanaleo haben wir über 1000 \n Kandidaten detailliert nach ihren Erfahrungen im Bewerbungsprozess befra\n gt. In unserem Fachvortrag möchten wir Ihnen die Bedeutung der Candidate\n  Experience näher bringen und wir werden Ihnen zeigen\\, wie Sie mit dem \n Bewerber-Controlling-Tool kanaleo Ihren Bewerbungsprozess optimieren kön\n nen.\\n\\n\\nWorkshop - Funktionelles Alpharelease des Empfehlungsbund-BMSD\n ie Entwicklung unseres Bewerber-Management-Systems ist nun weit genug vo\n ran geschritten\\, sodass wir Ihnen einen ersten Prototypen präsentieren \n möchten.\\nDaher stellen wir Ihnen in unserem Workshop die Kernfunktional\n ität des Empfehlungsbund-BMS vor\\, um gemeinsam mit ihnen zu diskutieren\n \\, inwiefern Bewerbungsprozesse angemessen abgebildet werden. Außerdem s\n uchen wir Personalexperten\\, die sich bereiterklären das Bewerber-Manage\n ment-System unter realen Testbedingungen zu nutzen.  \\n\nURL:https://www.empfehlungsbund.de/events/37\nSUMMARY:Offenes Expertenforum Personalmanagement\nORGANIZER;CN=IBM Client Innovation Center - Deutschland GmbH / Empfehlung\n sbund.de:https://www.empfehlungsbund.de/events/37\nATTACH:https://www.empfehlungsbund.de/events/37\nLOCATION:IBM Client Innovation Center - Deutschland GmbH\\, Hollerithstraß\n e 1\\, 81829 München\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech\n  überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp; Das offe\n ne Expertenforum Personalmanagement bringt Personalexperten und Führungs\n kräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklungen u\n nd Ideen für eine erfolgversprechende Personalarbeit vorgestellt. Wir er\n mutigen unsere Workshopteilnehmer, diese Ideen zu evaluieren und mit Ihr\n en Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräftesuche\n  in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter \n anderem \u003cstrong\u003edie Auswertung des Gehaltsbenchmarks und Benefit-Leistun\n gen für 2018\u003c/strong\u003e. Des Weiteren möchten wir Ihnen zeigen, \u003cstrong\u003ewi\n e Sie mit Kanaleo prüfen, inwiefern Ihr Bewerbungsprozess den heutigen A\n nforderungen von Kandidaten gerecht wird\u003c/strong\u003e. Außerdem stellen wir \n Ihnen die erste funktionelle Testversion des künftigen \u003cstrong\u003eEmpfehlun\n gsbund Bewerber-Management-Systems\u003c/strong\u003e vor. Wir freuen uns auf Ihre\n  Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch\n  ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründe\n n erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlun\n gsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch\n  Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch4\u003eJobwert.info - Auswertung Geh\n altsbenchmark + Benefits 2018 \u0026nbsp;\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund vergle\n icht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­\n häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\u003cbr\u003e\n In unserer Auswertung erfahren Sie, wie sich das Lohnniveau für das Jahr\n  2018 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.inf\n o um eine weitere spannende Funktion erweitert. Seit 2018 können Unterne\n hmen auf Jobwert.info ihre Benefit-Leistungen angeben. In unserem Expert\n enforum wollen wir Ihnen einen Branchenvergleich gezahlter Benefit-Leist\n ungen nicht vorenthalten.\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;\u0026nbsp;\u003cbr\u003e\u003cbr\n \u003e\u003c/div\u003e\u003ch4\u003eKanaleo.de - So optimieren Sie den Bewerbungsprozess\u003c/h4\u003e\u003cdiv\n \u003eDer Ruf eines Arbeitgebers in der umliegenden Region hat einen nachhall\n enden Einfluss auf die zukünftige Personalgewinnung an seinem Standort. \n Die positiven und negativen Erfahrungen, die ein Kandidat im Laufe seine\n s Bewerbungsprozesses macht, spielen hier eine wesentliche Rolle. Mit Ka\n naleo haben wir über 1000 Kandidaten detailliert nach ihren Erfahrungen \n im Bewerbungsprozess befragt. In unserem Fachvortrag möchten wir Ihnen d\n ie Bedeutung der Candidate Experience näher bringen und wir werden Ihnen\n  zeigen, wie Sie mit dem Bewerber-Controlling-Tool \u003cem\u003ekanaleo \u003c/em\u003eIhre\n n Bewerbungsprozess optimieren können.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eWorkshop - Funkt\n ionelles Alpharelease des Empfehlungsbund-BMS\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung u\n nseres Bewerber-Management-Systems ist nun weit genug voran geschritten,\n  sodass wir Ihnen einen ersten Prototypen präsentieren möchten.\u003cbr\u003eDaher\n  stellen wir Ihnen in unserem Workshop die Kernfunktionalität des Empfeh\n lungsbund-BMS vor, um gemeinsam mit ihnen zu diskutieren, inwiefern Bewe\n rbungsprozesse angemessen abgebildet werden. Außerdem suchen wir Persona\n lexperten, die sich bereiterklären das Bewerber-Management-System unter \n realen Testbedingungen zu nutzen. \u0026nbsp;\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210991,"Bezeichnung":"IBM Client Innovation Center - Deutschland GmbH","Kommentar":"Achtung neue Rechnungsadresse: \r\n\r\nPersonalwerkCommunications GmbH\r\nDieselstraße 22\r\n61184 Karben\r\n\r\n\r\nFür die Berechnung der Schnittstelle dann bitte folgende Jobnr. zusätzlich in der Rechnung mit angeben:\r\nIBM-19-000684\r\n\r\nab 12_2020: jkl","Typ":10,"Nutzername":"cicmagdeburg","Website":"https://www.ibm.com/employment/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-09-30T11:04:13.000+02:00"}},{"id":86,"display_line":"30.05.2018 - 14 bis 18:00 Uhr Berlin - Offenes Expertenforum Personalmanagement in Berlin - Gastgeber: mpex GmbH","subtitle":"Offenes Expertenforum Personalmanagement in Berlin","city":"Berlin","start":"2018-05-30T14:00:35.000+02:00","finish":"2018-05-30T18:00:35.000+02:00","address":"Werner-Voß-Damm 62, 12101 Berlin","event_host":"mpex GmbH","lat":52.4751,"lon":13.368,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20180325T020000\nRDATE:20180325T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180530T180035\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180530T140035\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen pote\n nzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personal\n arbeit?   Das offene Expertenforum Personalmanagement bringt Personalexp\n erten und Führungskräfte regionaler Unternehmen zusammen. Hier werden ne\n ue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit v\n orgestellt. Wir ermutigen unsere Workshopteilnehmer\\, diese Ideen zu eva\n luieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzeptes \n der Fachkräftesuche in der Gemeinschaft voranzutreiben. \\n\\nAuf der Agen\n da steht unter anderem die Auswertung des Gehaltsbenchmarks und Benefit-\n Leistungen für 2018. Des Weiteren möchten wir Ihnen zeigen\\, wie Sie mit\n  Kanaleo prüfen\\, inwiefern Ihr Bewerbungsprozess den heutigen Anforderu\n ngen von Kandidaten gerecht wird. Außerdem stellen wir Ihnen die erste f\n unktionelle Testversion des künftigen Empfehlungsbund Bewerber-Managemen\n t-Systems vor. Wir freuen uns auf Ihre Teilnahme! \\n\\n\\nDie Teilnahme is\n t kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus orga\n nisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\\n\\nJobwert.info - Auswertung Gehaltsbenchmark + Benefits 2018  D\n er Empfehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre\n  ak­tu­el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer R\n e­gi­on und Bran­che.\\nIn unserer Auswertung erfahren Sie\\, wie sich das\n  Lohnniveau für das Jahr 2018 gestaltet. Außerdem haben wir den Gehaltsb\n enchmark von Jobwert.info um eine weitere spannende Funktion erweitert. \n Seit 2018 können Unternehmen auf Jobwert.info ihre Benefit-Leistungen an\n geben. In unserem Expertenforum wollen wir Ihnen einen Branchenvergleich\n  gezahlter Benefit-Leistungen nicht vorenthalten.          \\n\\n\\nKanaleo\n .de - So optimieren Sie den BewerbungsprozessDer Ruf eines Arbeitgebers \n in der umliegenden Region hat einen nachhallenden Einfluss auf die zukün\n ftige Personalgewinnung an seinem Standort. Die positiven und negativen \n Erfahrungen\\, die ein Kandidat im Laufe seines Bewerbungsprozesses macht\n \\, spielen hier eine wesentliche Rolle. Mit Kanaleo haben wir über 1000 \n Kandidaten detailliert nach ihren Erfahrungen im Bewerbungsprozess befra\n gt. In unserem Fachvortrag möchten wir Ihnen die Bedeutung der Candidate\n  Experience näher bringen und wir werden Ihnen zeigen\\, wie Sie mit dem \n Bewerber-Controlling-Tool kanaleo Ihren Bewerbungsprozess optimieren kön\n nen.\\n\\n\\nWorkshop - Funktionelles Alpharelease des Empfehlungsbund-BMSD\n ie Entwicklung unseres Bewerber-Management-Systems ist nun weit genug vo\n ran geschritten\\, sodass wir Ihnen einen ersten Prototypen präsentieren \n möchten.\\nDaher stellen wir Ihnen in unserem Workshop die Kernfunktional\n ität des Empfehlungsbund-BMS vor\\, um gemeinsam mit ihnen zu diskutieren\n \\, inwiefern Bewerbungsprozesse angemessen abgebildet werden. Außerdem s\n uchen wir Personalexperten\\, die sich bereiterklären das Bewerber-Manage\n ment-System unter realen Testbedingungen zu nutzen.  \\n\nURL:https://www.empfehlungsbund.de/events/37\nSUMMARY:Offenes Expertenforum Personalmanagement\nORGANIZER;CN=mpex GmbH / Empfehlungsbund.de:https://www.empfehlungsbund.d\n e/events/37\nATTACH:https://www.empfehlungsbund.de/events/37\nLOCATION:mpex GmbH\\, Werner-Voß-Damm 62\\, 12101 Berlin\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech\n  überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp; Das offe\n ne Expertenforum Personalmanagement bringt Personalexperten und Führungs\n kräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklungen u\n nd Ideen für eine erfolgversprechende Personalarbeit vorgestellt. Wir er\n mutigen unsere Workshopteilnehmer, diese Ideen zu evaluieren und mit Ihr\n en Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräftesuche\n  in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter \n anderem \u003cstrong\u003edie Auswertung des Gehaltsbenchmarks und Benefit-Leistun\n gen für 2018\u003c/strong\u003e. Des Weiteren möchten wir Ihnen zeigen, \u003cstrong\u003ewi\n e Sie mit Kanaleo prüfen, inwiefern Ihr Bewerbungsprozess den heutigen A\n nforderungen von Kandidaten gerecht wird\u003c/strong\u003e. Außerdem stellen wir \n Ihnen die erste funktionelle Testversion des künftigen \u003cstrong\u003eEmpfehlun\n gsbund Bewerber-Management-Systems\u003c/strong\u003e vor. Wir freuen uns auf Ihre\n  Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch\n  ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründe\n n erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlun\n gsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch\n  Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch4\u003eJobwert.info - Auswertung Geh\n altsbenchmark + Benefits 2018 \u0026nbsp;\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund vergle\n icht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­\n häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\u003cbr\u003e\n In unserer Auswertung erfahren Sie, wie sich das Lohnniveau für das Jahr\n  2018 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.inf\n o um eine weitere spannende Funktion erweitert. Seit 2018 können Unterne\n hmen auf Jobwert.info ihre Benefit-Leistungen angeben. In unserem Expert\n enforum wollen wir Ihnen einen Branchenvergleich gezahlter Benefit-Leist\n ungen nicht vorenthalten.\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;\u0026nbsp;\u003cbr\u003e\u003cbr\n \u003e\u003c/div\u003e\u003ch4\u003eKanaleo.de - So optimieren Sie den Bewerbungsprozess\u003c/h4\u003e\u003cdiv\n \u003eDer Ruf eines Arbeitgebers in der umliegenden Region hat einen nachhall\n enden Einfluss auf die zukünftige Personalgewinnung an seinem Standort. \n Die positiven und negativen Erfahrungen, die ein Kandidat im Laufe seine\n s Bewerbungsprozesses macht, spielen hier eine wesentliche Rolle. Mit Ka\n naleo haben wir über 1000 Kandidaten detailliert nach ihren Erfahrungen \n im Bewerbungsprozess befragt. In unserem Fachvortrag möchten wir Ihnen d\n ie Bedeutung der Candidate Experience näher bringen und wir werden Ihnen\n  zeigen, wie Sie mit dem Bewerber-Controlling-Tool \u003cem\u003ekanaleo \u003c/em\u003eIhre\n n Bewerbungsprozess optimieren können.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eWorkshop - Funkt\n ionelles Alpharelease des Empfehlungsbund-BMS\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung u\n nseres Bewerber-Management-Systems ist nun weit genug voran geschritten,\n  sodass wir Ihnen einen ersten Prototypen präsentieren möchten.\u003cbr\u003eDaher\n  stellen wir Ihnen in unserem Workshop die Kernfunktionalität des Empfeh\n lungsbund-BMS vor, um gemeinsam mit ihnen zu diskutieren, inwiefern Bewe\n rbungsprozesse angemessen abgebildet werden. Außerdem suchen wir Persona\n lexperten, die sich bereiterklären das Bewerber-Management-System unter \n realen Testbedingungen zu nutzen. \u0026nbsp;\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9212443,"Bezeichnung":"mpex GmbH","Kommentar":"Frau Lorenz verlässt das Unternehmen - Elternzeit, kommt aber auch nicht mehr zurück. Habe am 23.05.17 das Thema Mystery Applicant angesprochen; sie versucht weiterhin GF zu überzeigen, Absagen zu schreiben, aber die sind sehr unsicher","Typ":10,"Nutzername":"mpex","Website":"https://www.mpex.de/jobs.html","created_at":"2015-09-30T14:38:36.000+02:00","updated_at":"2021-06-18T10:59:18.000+02:00"}},{"id":87,"display_line":"30.05.2018 - 14 bis 18:00 Uhr Leipzig - Offenes Expertenforum Personalmanagement in Leipzig - Gastgeber: converneo GmbH","subtitle":"Offenes Expertenforum Personalmanagement in Leipzig","city":"Leipzig","start":"2018-05-30T14:00:56.000+02:00","finish":"2018-05-30T18:00:56.000+02:00","address":"Nikolaistraße 12-14, 04109 Leipzig","event_host":"converneo GmbH","lat":51.3413,"lon":12.3783,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20180325T020000\nRDATE:20180325T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180530T180056\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180530T140056\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen pote\n nzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personal\n arbeit?   Das offene Expertenforum Personalmanagement bringt Personalexp\n erten und Führungskräfte regionaler Unternehmen zusammen. Hier werden ne\n ue Entwicklungen und Ideen für eine erfolgversprechende Personalarbeit v\n orgestellt. Wir ermutigen unsere Workshopteilnehmer\\, diese Ideen zu eva\n luieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzeptes \n der Fachkräftesuche in der Gemeinschaft voranzutreiben. \\n\\nAuf der Agen\n da steht unter anderem die Auswertung des Gehaltsbenchmarks und Benefit-\n Leistungen für 2018. Des Weiteren möchten wir Ihnen zeigen\\, wie Sie mit\n  Kanaleo prüfen\\, inwiefern Ihr Bewerbungsprozess den heutigen Anforderu\n ngen von Kandidaten gerecht wird. Außerdem stellen wir Ihnen die erste f\n unktionelle Testversion des künftigen Empfehlungsbund Bewerber-Managemen\n t-Systems vor. Wir freuen uns auf Ihre Teilnahme! \\n\\n\\nDie Teilnahme is\n t kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus orga\n nisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führend\n e Netzwerk zur effizienten Personalgewinnung durch Empfehlungen in Deuts\n chland.\\n\\nJobwert.info - Auswertung Gehaltsbenchmark + Benefits 2018  D\n er Empfehlungsbund vergleicht jährlich in einem Ge­halts­bench­mark Ihre\n  ak­tu­el­l gezahlten Ge­häl­ter mit de­nen anderer Unternehmen Ih­rer R\n e­gi­on und Bran­che.\\nIn unserer Auswertung erfahren Sie\\, wie sich das\n  Lohnniveau für das Jahr 2018 gestaltet. Außerdem haben wir den Gehaltsb\n enchmark von Jobwert.info um eine weitere spannende Funktion erweitert. \n Seit 2018 können Unternehmen auf Jobwert.info ihre Benefit-Leistungen an\n geben. In unserem Expertenforum wollen wir Ihnen einen Branchenvergleich\n  gezahlter Benefit-Leistungen nicht vorenthalten.          \\n\\n\\nKanaleo\n .de - So optimieren Sie den BewerbungsprozessDer Ruf eines Arbeitgebers \n in der umliegenden Region hat einen nachhallenden Einfluss auf die zukün\n ftige Personalgewinnung an seinem Standort. Die positiven und negativen \n Erfahrungen\\, die ein Kandidat im Laufe seines Bewerbungsprozesses macht\n \\, spielen hier eine wesentliche Rolle. Mit Kanaleo haben wir über 1000 \n Kandidaten detailliert nach ihren Erfahrungen im Bewerbungsprozess befra\n gt. In unserem Fachvortrag möchten wir Ihnen die Bedeutung der Candidate\n  Experience näher bringen und wir werden Ihnen zeigen\\, wie Sie mit dem \n Bewerber-Controlling-Tool kanaleo Ihren Bewerbungsprozess optimieren kön\n nen.\\n\\n\\nWorkshop - Funktionelles Alpharelease des Empfehlungsbund-BMSD\n ie Entwicklung unseres Bewerber-Management-Systems ist nun weit genug vo\n ran geschritten\\, sodass wir Ihnen einen ersten Prototypen präsentieren \n möchten.\\nDaher stellen wir Ihnen in unserem Workshop die Kernfunktional\n ität des Empfehlungsbund-BMS vor\\, um gemeinsam mit ihnen zu diskutieren\n \\, inwiefern Bewerbungsprozesse angemessen abgebildet werden. Außerdem s\n uchen wir Personalexperten\\, die sich bereiterklären das Bewerber-Manage\n ment-System unter realen Testbedingungen zu nutzen.  \\n\nURL:https://www.empfehlungsbund.de/events/37\nSUMMARY:Offenes Expertenforum Personalmanagement\nORGANIZER;CN=converneo GmbH / Empfehlungsbund.de:https://www.empfehlungsb\n und.de/events/37\nATTACH:https://www.empfehlungsbund.de/events/37\nLOCATION:converneo GmbH\\, Nikolaistraße 12-14\\, 04109 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech\n  überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp; Das offe\n ne Expertenforum Personalmanagement bringt Personalexperten und Führungs\n kräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklungen u\n nd Ideen für eine erfolgversprechende Personalarbeit vorgestellt. Wir er\n mutigen unsere Workshopteilnehmer, diese Ideen zu evaluieren und mit Ihr\n en Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräftesuche\n  in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter \n anderem \u003cstrong\u003edie Auswertung des Gehaltsbenchmarks und Benefit-Leistun\n gen für 2018\u003c/strong\u003e. Des Weiteren möchten wir Ihnen zeigen, \u003cstrong\u003ewi\n e Sie mit Kanaleo prüfen, inwiefern Ihr Bewerbungsprozess den heutigen A\n nforderungen von Kandidaten gerecht wird\u003c/strong\u003e. Außerdem stellen wir \n Ihnen die erste funktionelle Testversion des künftigen \u003cstrong\u003eEmpfehlun\n gsbund Bewerber-Management-Systems\u003c/strong\u003e vor. Wir freuen uns auf Ihre\n  Teilnahme!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch\n  ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründe\n n erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlun\n gsbund ist das führende Netzwerk zur effizienten Personalgewinnung durch\n  Empfehlungen in Deutschland.\u003c/a\u003e\u003c/div\u003e\u003ch4\u003eJobwert.info - Auswertung Geh\n altsbenchmark + Benefits 2018 \u0026nbsp;\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund vergle\n icht jährlich in einem Ge­halts­bench­mark Ihre ak­tu­el­l gezahlten Ge­\n häl­ter mit de­nen anderer Unternehmen Ih­rer Re­gi­on und Bran­che.\u003cbr\u003e\n In unserer Auswertung erfahren Sie, wie sich das Lohnniveau für das Jahr\n  2018 gestaltet. Außerdem haben wir den Gehaltsbenchmark von Jobwert.inf\n o um eine weitere spannende Funktion erweitert. Seit 2018 können Unterne\n hmen auf Jobwert.info ihre Benefit-Leistungen angeben. In unserem Expert\n enforum wollen wir Ihnen einen Branchenvergleich gezahlter Benefit-Leist\n ungen nicht vorenthalten.\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;\u0026nbsp;\u003cbr\u003e\u003cbr\n \u003e\u003c/div\u003e\u003ch4\u003eKanaleo.de - So optimieren Sie den Bewerbungsprozess\u003c/h4\u003e\u003cdiv\n \u003eDer Ruf eines Arbeitgebers in der umliegenden Region hat einen nachhall\n enden Einfluss auf die zukünftige Personalgewinnung an seinem Standort. \n Die positiven und negativen Erfahrungen, die ein Kandidat im Laufe seine\n s Bewerbungsprozesses macht, spielen hier eine wesentliche Rolle. Mit Ka\n naleo haben wir über 1000 Kandidaten detailliert nach ihren Erfahrungen \n im Bewerbungsprozess befragt. In unserem Fachvortrag möchten wir Ihnen d\n ie Bedeutung der Candidate Experience näher bringen und wir werden Ihnen\n  zeigen, wie Sie mit dem Bewerber-Controlling-Tool \u003cem\u003ekanaleo \u003c/em\u003eIhre\n n Bewerbungsprozess optimieren können.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eWorkshop - Funkt\n ionelles Alpharelease des Empfehlungsbund-BMS\u003c/h4\u003e\u003cdiv\u003eDie Entwicklung u\n nseres Bewerber-Management-Systems ist nun weit genug voran geschritten,\n  sodass wir Ihnen einen ersten Prototypen präsentieren möchten.\u003cbr\u003eDaher\n  stellen wir Ihnen in unserem Workshop die Kernfunktionalität des Empfeh\n lungsbund-BMS vor, um gemeinsam mit ihnen zu diskutieren, inwiefern Bewe\n rbungsprozesse angemessen abgebildet werden. Außerdem suchen wir Persona\n lexperten, die sich bereiterklären das Bewerber-Management-System unter \n realen Testbedingungen zu nutzen. \u0026nbsp;\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9212315,"Bezeichnung":"converneo GmbH","Kommentar":"","Typ":10,"Nutzername":"converneo","Website":"https://converneo.de/karriere/","created_at":"2015-08-17T16:16:03.000+02:00","updated_at":"2021-06-18T10:59:15.000+02:00"}}]},{"id":36,"name":"ebcw_201801","hashtag":"ebcw","title":"Empfehlungsbund Community Workshop in Dresden, Leipzig, München und Berlin","teaser":"Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo und wie finden regionale Unternehmen potenzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personalarbeit?  In den Community Workshops des Empfehlungsbundes kommen Personalexperten und Führungskräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklungen und Ideen für eine erfolgsversprechende Personalarbeit vorgestellt. Wir ermutigen unsere Workshop Teilnehmer diese Ideen zu evaluieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \r\n\r\nDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.","teaser_hrfilter":"Auch im Jahr 2018 wollen wir gemeinsam mit Ihnen Ihren Weg zur Exzellenz in der Personalarbeit einen Schritt weiter gehen. Den Auftakt hierfür gibt der erste Community Workshop des Empfehlungsbundes dieses Jahres. Wir freuen uns, wenn auch Sie unserer Veranstaltung beiwohnen.","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Personalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp;In den Community Workshops des Empfehlungsbundes kommen Personalexperten und Führungskräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklungen und Ideen für eine erfolgsversprechende Personalarbeit vorgestellt. Wir ermutigen unsere Workshop Teilnehmer diese Ideen zu evaluieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter anderem, \u003cstrong\u003ewie Sie Motivationsstrategien sinnvoll für Ihre Personalgewinnungsmaßnahmen nutzen können\u003c/strong\u003e. Des Weiteren möchten wir Ihnen zeigen, \u003cstrong\u003ewie Sie mithilfe des EFQM Modells angemessenere Arbeitgeber-Selbstbewertungen formulieren\u003c/strong\u003e. Außerdem stellen wir Ihnen mit EB-Academy eine autodidaktische Lernplattform vor,\u003cstrong\u003e womit Sie Ihr Personalmanagement-Knowhow weiter optimieren können\u003c/strong\u003e. Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung insbesondere für Informatiker und Ingenieure in Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e","agenda":"\u003ch4\u003eArbeitgeberauftritt optimieren - Aussagekräftige Selbstbeurteilung mit EFQM\u0026nbsp;\u003c/h4\u003e\u003cdiv\u003eVergleicht man Arbeitgeberselbstbeurteilungen daraufhin, wie sich Unternehmen seit den letzten Jahren auf Karrierewebseiten und Bewertungsplattformen präsentierten, zeichnet sich ein Trend ab auf konventionelle Beschreibungsfloskeln zurückzugreifen. Phrasen wie:\u0026nbsp; \"Wir sind marktführend im Bereich ...\" oder \"Wir sind ein hochmotiviertes Team mit Leidenschaft für die Sache ...\" sind wenig aussagekräftig und überall zu lesen. Wir haben Faire-Karriere.de um einen Selbstbeurteilungskatalog gemäß des \u003ca href=\"https://de.wikipedia.org/wiki/EFQM-Modell\"\u003eEFQM-Modells\u003c/a\u003e erweitert. Dieser Leitfaden zur Selbstbeurteilung erlaubt Ihnen eine gezielte Reflexion über die eigene Unternehmensorganisation und damit die Selbstdarstellung Ihres Unternehmens für potentielle Fachkräfte aussagekräftiger und authentischer zu gestalten.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eEB-Academy - Unser Beitrag zur Exzellenz in der Personalgewinnung\u003c/h4\u003e\u003cdiv\u003eDie Vision des Empfehlungsbundes besteht darin Ihren Weg zur Exzellenz in der Personalgewinnung stetig voranzubringen. Bisher gaben wir unsere Erfahrungen in der Fachkräftesuche in der Gemeinschaft mittels regelmäßigen und persönlichen Beratungsgesprächen an unsere Mitglieder weiter. Da eine persönliche Beratungssituation häufig mehr Wissen vermittelt, als letztendlich aufgenommen werden kann, ist es uns wichtig zentrale Themen für ein optimiertes Personalmarketing auch in Form von Leitfäden, Graphiken und Beratungsvideos zu übertragen. Das Konzept trägt den Namen EB-Academy. Im Rahmen dieser Veranstaltung möchten wir Ihnen das erste ausgearbeitete Modul zum \u003cem\u003eThema Stellenoptimierung\u003c/em\u003e vorstellen.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eWorkshop - Motivationsstrategien für die Plattformen des Empfehlungsbundes\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund basiert auf die Idee, dass seine Mitglieder star­ke re­gio­na­le und bran­chen­spe­zi­fi­sche Markt­plätze für Fach- und Füh­rungs­kräf­te, so­wie Stu­die­ren­de und Aus­zu­bil­den­de nach­hal­tig ausbauen. Die stetige Entwicklung dieser Marktplätze steht und fällt mit der Partizipation und Motivation der teilnehmenden Unternehmen am gemeinschaftlichen Personalmarketing. Wir möchten diejenigen Mitglieder, die sich durch ein besonderes Engagement für Ihre Community auszeichnen mit zusätzlichen Vorteilen honorieren. In unserem Workshop wollen wir mit Ihnen gemeinsam den Nutzwert von solchen Vorteilen herausarbeiten, die für Ihre Personalarbeit auch eine Bedeutung haben. \u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e","start":"2018-02-06T15:00:00.000+01:00","finish":"2018-02-07T18:00:12.000+01:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/36/wide_Banner_EBCW_gro_.jpg","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/36/wide_EBCW_Banner_DresdenLeipzigM_nchenBerlin_HRfilter.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/36/Community_Workshop_Blog.jpg","register_url":"https://www.empfehlungsbund.de/events/36/register","show_url":"https://www.empfehlungsbund.de/events/36","events":[{"id":73,"display_line":"06.02.2018 - 15 bis 18:00 Uhr München - Empfehlungsbund Community Workshop in München - Gastgeber: DPS Business Solutions GmbH","subtitle":"Empfehlungsbund Community Workshop in München","city":"München","start":"2018-02-06T15:00:00.000+01:00","finish":"2018-02-06T18:00:00.000+01:00","address":"Am Moosfeld 27, 81829 München","event_host":"DPS Business Solutions GmbH","lat":48.1335,"lon":11.6598,"community_training_id":40,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20171029T030000\nRDATE:20171029T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180206T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180206T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen pote\n nzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personal\n arbeit?  In den Community Workshops des Empfehlungsbundes kommen Persona\n lexperten und Führungskräfte regionaler Unternehmen zusammen. Hier werde\n n neue Entwicklungen und Ideen für eine erfolgsversprechende Personalarb\n eit vorgestellt. Wir ermutigen unsere Workshop Teilnehmer diese Ideen zu\n  evaluieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzep\n tes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \\n\\nAuf der \n Agenda steht unter anderem\\, wie Sie Motivationsstrategien sinnvoll für \n Ihre Personalgewinnungsmaßnahmen nutzen können. Des Weiteren möchten wir\n  Ihnen zeigen\\, wie Sie mithilfe des EFQM Modells angemessenere Arbeitge\n ber-Selbstbewertungen formulieren. Außerdem stellen wir Ihnen mit EB-Aca\n demy eine autodidaktische Lernplattform vor\\, womit Sie Ihr Personalmana\n gement-Knowhow weiter optimieren können. Wir freuen uns auf Sie! \\n\\n\\nD\n ie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freisch\n altung aus organisatorischen Gründen erforderlich.\\nDer Empfehlungsbund \n ist das führende Netzwerk zur effizienten Personalgewinnung insbesondere\n  für Informatiker und Ingenieure in Deutschland.\\n\\n\\n\\n\\n\\n\\nArbeitgebe\n rauftritt optimieren - Aussagekräftige Selbstbeurteilung mit EFQM Vergle\n icht man Arbeitgeberselbstbeurteilungen daraufhin\\, wie sich Unternehmen\n  seit den letzten Jahren auf Karrierewebseiten und Bewertungsplattformen\n  präsentierten\\, zeichnet sich ein Trend ab auf konventionelle Beschreib\n ungsfloskeln zurückzugreifen. Phrasen wie:  \"Wir sind marktführend im Be\n reich ...\" oder \"Wir sind ein hochmotiviertes Team mit Leidenschaft für \n die Sache ...\" sind wenig aussagekräftig und überall zu lesen. Wir haben\n  Faire-Karriere.de um einen Selbstbeurteilungskatalog gemäß des EFQM-Mod\n ells erweitert. Dieser Leitfaden zur Selbstbeurteilung erlaubt Ihnen ein\n e gezielte Reflexion über die eigene Unternehmensorganisation und damit \n die Selbstdarstellung Ihres Unternehmens für potentielle Fachkräfte auss\n agekräftiger und authentischer zu gestalten.\\n\\n\\nEB-Academy - Unser Bei\n trag zur Exzellenz in der PersonalgewinnungDie Vision des Empfehlungsbun\n des besteht darin Ihren Weg zur Exzellenz in der Personalgewinnung steti\n g voranzubringen. Bisher gaben wir unsere Erfahrungen in der Fachkräftes\n uche in der Gemeinschaft mittels regelmäßigen und persönlichen Beratungs\n gesprächen an unsere Mitglieder weiter. Da eine persönliche Beratungssit\n uation häufig mehr Wissen vermittelt\\, als letztendlich aufgenommen werd\n en kann\\, ist es uns wichtig zentrale Themen für ein optimiertes Persona\n lmarketing auch in Form von Leitfäden\\, Graphiken und Beratungsvideos zu\n  übertragen. Das Konzept trägt den Namen EB-Academy. Im Rahmen dieser Ve\n ranstaltung möchten wir Ihnen das erste ausgearbeitete Modul zum Thema S\n tellenoptimierung vorstellen.\\n\\n\\n\\nWorkshop - Motivationsstrategien fü\n r die Plattformen des EmpfehlungsbundesDer Empfehlungsbund basiert auf d\n ie Idee\\, dass seine Mitglieder star­ke re­gio­na­le und bran­chen­spe­z\n i­fi­sche Markt­plätze für Fach- und Füh­rungs­kräf­te\\, so­wie Stu­die­\n ren­de und Aus­zu­bil­den­de nach­hal­tig ausbauen. Die stetige Entwickl\n ung dieser Marktplätze steht und fällt mit der Partizipation und Motivat\n ion der teilnehmenden Unternehmen am gemeinschaftlichen Personalmarketin\n g. Wir möchten diejenigen Mitglieder\\, die sich durch ein besonderes Eng\n agement für Ihre Community auszeichnen mit zusätzlichen Vorteilen honori\n eren. In unserem Workshop wollen wir mit Ihnen gemeinsam den Nutzwert vo\n n solchen Vorteilen herausarbeiten\\, die für Ihre Personalarbeit auch ei\n ne Bedeutung haben.  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/36\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=DPS Business Solutions GmbH / Empfehlungsbund.de:https://www\n .empfehlungsbund.de/events/36\nATTACH:https://www.empfehlungsbund.de/events/36\nLOCATION:DPS Business Solutions GmbH\\, Am Moosfeld 27\\, 81829 München\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech\n  überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp;In den Co\n mmunity Workshops des Empfehlungsbundes kommen Personalexperten und Führ\n ungskräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklung\n en und Ideen für eine erfolgsversprechende Personalarbeit vorgestellt. W\n ir ermutigen unsere Workshop Teilnehmer diese Ideen zu evaluieren und mi\n t Ihren Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräfte\n suche in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht u\n nter anderem, \u003cstrong\u003ewie Sie Motivationsstrategien sinnvoll für Ihre Pe\n rsonalgewinnungsmaßnahmen nutzen können\u003c/strong\u003e. Des Weiteren möchten w\n ir Ihnen zeigen, \u003cstrong\u003ewie Sie mithilfe des EFQM Modells angemessenere\n  Arbeitgeber-Selbstbewertungen formulieren\u003c/strong\u003e. Außerdem stellen wi\n r Ihnen mit EB-Academy eine autodidaktische Lernplattform vor,\u003cstrong\u003e w\n omit Sie Ihr Personalmanagement-Knowhow weiter optimieren können\u003c/strong\n \u003e. Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kos\n tenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisat\n orischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\n \"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personal\n gewinnung insbesondere für Informatiker und Ingenieure in Deutschland.\u003c/\n a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eArbeitgeberauftr\n itt optimieren - Aussagekräftige Selbstbeurteilung mit EFQM\u0026nbsp;\u003c/h4\u003e\u003cd\n iv\u003eVergleicht man Arbeitgeberselbstbeurteilungen daraufhin, wie sich Unt\n ernehmen seit den letzten Jahren auf Karrierewebseiten und Bewertungspla\n ttformen präsentierten, zeichnet sich ein Trend ab auf konventionelle Be\n schreibungsfloskeln zurückzugreifen. Phrasen wie:\u0026nbsp; \"Wir sind marktf\n ührend im Bereich ...\" oder \"Wir sind ein hochmotiviertes Team mit Leide\n nschaft für die Sache ...\" sind wenig aussagekräftig und überall zu lese\n n. Wir haben Faire-Karriere.de um einen Selbstbeurteilungskatalog gemäß \n des \u003ca href=\"https://de.wikipedia.org/wiki/EFQM-Modell\"\u003eEFQM-Modells\u003c/a\u003e\n  erweitert. Dieser Leitfaden zur Selbstbeurteilung erlaubt Ihnen eine ge\n zielte Reflexion über die eigene Unternehmensorganisation und damit die \n Selbstdarstellung Ihres Unternehmens für potentielle Fachkräfte aussagek\n räftiger und authentischer zu gestalten.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eEB-Academy - U\n nser Beitrag zur Exzellenz in der Personalgewinnung\u003c/h4\u003e\u003cdiv\u003eDie Vision \n des Empfehlungsbundes besteht darin Ihren Weg zur Exzellenz in der Perso\n nalgewinnung stetig voranzubringen. Bisher gaben wir unsere Erfahrungen \n in der Fachkräftesuche in der Gemeinschaft mittels regelmäßigen und pers\n önlichen Beratungsgesprächen an unsere Mitglieder weiter. Da eine persön\n liche Beratungssituation häufig mehr Wissen vermittelt, als letztendlich\n  aufgenommen werden kann, ist es uns wichtig zentrale Themen für ein opt\n imiertes Personalmarketing auch in Form von Leitfäden, Graphiken und Ber\n atungsvideos zu übertragen. Das Konzept trägt den Namen EB-Academy. Im R\n ahmen dieser Veranstaltung möchten wir Ihnen das erste ausgearbeitete Mo\n dul zum \u003cem\u003eThema Stellenoptimierung\u003c/em\u003e vorstellen.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\u003e\n \u003c/div\u003e\u003ch4\u003eWorkshop - Motivationsstrategien für die Plattformen des Empfe\n hlungsbundes\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund basiert auf die Idee, dass sei\n ne Mitglieder star­ke re­gio­na­le und bran­chen­spe­zi­fi­sche Markt­pl\n ätze für Fach- und Füh­rungs­kräf­te, so­wie Stu­die­ren­de und Aus­zu­b\n il­den­de nach­hal­tig ausbauen. Die stetige Entwicklung dieser Marktplä\n tze steht und fällt mit der Partizipation und Motivation der teilnehmend\n en Unternehmen am gemeinschaftlichen Personalmarketing. Wir möchten diej\n enigen Mitglieder, die sich durch ein besonderes Engagement für Ihre Com\n munity auszeichnen mit zusätzlichen Vorteilen honorieren. In unserem Wor\n kshop wollen wir mit Ihnen gemeinsam den Nutzwert von solchen Vorteilen \n herausarbeiten, die für Ihre Personalarbeit auch eine Bedeutung haben. \u0026\n nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9213096,"Bezeichnung":"DPS Business Solutions GmbH","Kommentar":"440 laut Homepage und Anzahl Mitarbeiter!! \r\n\r\nMutterunternehmen der Sellmore, sind durch Herrn Noack aufmerksam geworden und wollen das Konzept vorgestellt bekommen\r\n\r\nzu DPS gehört Sellmore und Datatronic... haben aber eigene Verträge, da wir argumenteiren: dass diese marken schon lange in der jeweiligen Region bekannt sind, und es schade wäre das aufzugeben.","Typ":10,"Nutzername":"dps","Website":"https://www.dps-bs.de/unternehmen/stellenanzeigen.html?ebbms=","created_at":"2017-02-27T14:38:52.000+01:00","updated_at":"2021-07-07T14:19:42.000+02:00"}},{"id":81,"display_line":"07.02.2018 - 15 bis 18:00 Uhr  - Empfehlungsbund Community Workshop in Leipzig - Gastgeber: Sonic Labs GmbH","subtitle":"Empfehlungsbund Community Workshop in Leipzig","city":null,"start":"2018-02-07T15:00:12.000+01:00","finish":"2018-02-07T18:00:12.000+01:00","address":"Leplaystr. 9, 04103 Leipzig","event_host":"Sonic Labs GmbH","lat":null,"lon":null,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20171029T030000\nRDATE:20171029T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180207T180012\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180207T150012\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen pote\n nzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personal\n arbeit?  In den Community Workshops des Empfehlungsbundes kommen Persona\n lexperten und Führungskräfte regionaler Unternehmen zusammen. Hier werde\n n neue Entwicklungen und Ideen für eine erfolgsversprechende Personalarb\n eit vorgestellt. Wir ermutigen unsere Workshop Teilnehmer diese Ideen zu\n  evaluieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzep\n tes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \\n\\nAuf der \n Agenda steht unter anderem\\, wie Sie Motivationsstrategien sinnvoll für \n Ihre Personalgewinnungsmaßnahmen nutzen können. Des Weiteren möchten wir\n  Ihnen zeigen\\, wie Sie mithilfe des EFQM Modells angemessenere Arbeitge\n ber-Selbstbewertungen formulieren. Außerdem stellen wir Ihnen mit EB-Aca\n demy eine autodidaktische Lernplattform vor\\, womit Sie Ihr Personalmana\n gement-Knowhow weiter optimieren können. Wir freuen uns auf Sie! \\n\\n\\nD\n ie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freisch\n altung aus organisatorischen Gründen erforderlich.\\nDer Empfehlungsbund \n ist das führende Netzwerk zur effizienten Personalgewinnung insbesondere\n  für Informatiker und Ingenieure in Deutschland.\\n\\n\\n\\n\\n\\n\\nArbeitgebe\n rauftritt optimieren - Aussagekräftige Selbstbeurteilung mit EFQM Vergle\n icht man Arbeitgeberselbstbeurteilungen daraufhin\\, wie sich Unternehmen\n  seit den letzten Jahren auf Karrierewebseiten und Bewertungsplattformen\n  präsentierten\\, zeichnet sich ein Trend ab auf konventionelle Beschreib\n ungsfloskeln zurückzugreifen. Phrasen wie:  \"Wir sind marktführend im Be\n reich ...\" oder \"Wir sind ein hochmotiviertes Team mit Leidenschaft für \n die Sache ...\" sind wenig aussagekräftig und überall zu lesen. Wir haben\n  Faire-Karriere.de um einen Selbstbeurteilungskatalog gemäß des EFQM-Mod\n ells erweitert. Dieser Leitfaden zur Selbstbeurteilung erlaubt Ihnen ein\n e gezielte Reflexion über die eigene Unternehmensorganisation und damit \n die Selbstdarstellung Ihres Unternehmens für potentielle Fachkräfte auss\n agekräftiger und authentischer zu gestalten.\\n\\n\\nEB-Academy - Unser Bei\n trag zur Exzellenz in der PersonalgewinnungDie Vision des Empfehlungsbun\n des besteht darin Ihren Weg zur Exzellenz in der Personalgewinnung steti\n g voranzubringen. Bisher gaben wir unsere Erfahrungen in der Fachkräftes\n uche in der Gemeinschaft mittels regelmäßigen und persönlichen Beratungs\n gesprächen an unsere Mitglieder weiter. Da eine persönliche Beratungssit\n uation häufig mehr Wissen vermittelt\\, als letztendlich aufgenommen werd\n en kann\\, ist es uns wichtig zentrale Themen für ein optimiertes Persona\n lmarketing auch in Form von Leitfäden\\, Graphiken und Beratungsvideos zu\n  übertragen. Das Konzept trägt den Namen EB-Academy. Im Rahmen dieser Ve\n ranstaltung möchten wir Ihnen das erste ausgearbeitete Modul zum Thema S\n tellenoptimierung vorstellen.\\n\\n\\n\\nWorkshop - Motivationsstrategien fü\n r die Plattformen des EmpfehlungsbundesDer Empfehlungsbund basiert auf d\n ie Idee\\, dass seine Mitglieder star­ke re­gio­na­le und bran­chen­spe­z\n i­fi­sche Markt­plätze für Fach- und Füh­rungs­kräf­te\\, so­wie Stu­die­\n ren­de und Aus­zu­bil­den­de nach­hal­tig ausbauen. Die stetige Entwickl\n ung dieser Marktplätze steht und fällt mit der Partizipation und Motivat\n ion der teilnehmenden Unternehmen am gemeinschaftlichen Personalmarketin\n g. Wir möchten diejenigen Mitglieder\\, die sich durch ein besonderes Eng\n agement für Ihre Community auszeichnen mit zusätzlichen Vorteilen honori\n eren. In unserem Workshop wollen wir mit Ihnen gemeinsam den Nutzwert vo\n n solchen Vorteilen herausarbeiten\\, die für Ihre Personalarbeit auch ei\n ne Bedeutung haben.  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/36\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=Sonic Labs GmbH / Empfehlungsbund.de:https://www.empfehlungs\n bund.de/events/36\nATTACH:https://www.empfehlungsbund.de/events/36\nLOCATION:Sonic Labs GmbH\\, Leplaystr. 9\\, 04103 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech\n  überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp;In den Co\n mmunity Workshops des Empfehlungsbundes kommen Personalexperten und Führ\n ungskräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklung\n en und Ideen für eine erfolgsversprechende Personalarbeit vorgestellt. W\n ir ermutigen unsere Workshop Teilnehmer diese Ideen zu evaluieren und mi\n t Ihren Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräfte\n suche in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht u\n nter anderem, \u003cstrong\u003ewie Sie Motivationsstrategien sinnvoll für Ihre Pe\n rsonalgewinnungsmaßnahmen nutzen können\u003c/strong\u003e. Des Weiteren möchten w\n ir Ihnen zeigen, \u003cstrong\u003ewie Sie mithilfe des EFQM Modells angemessenere\n  Arbeitgeber-Selbstbewertungen formulieren\u003c/strong\u003e. Außerdem stellen wi\n r Ihnen mit EB-Academy eine autodidaktische Lernplattform vor,\u003cstrong\u003e w\n omit Sie Ihr Personalmanagement-Knowhow weiter optimieren können\u003c/strong\n \u003e. Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kos\n tenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisat\n orischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\n \"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personal\n gewinnung insbesondere für Informatiker und Ingenieure in Deutschland.\u003c/\n a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eArbeitgeberauftr\n itt optimieren - Aussagekräftige Selbstbeurteilung mit EFQM\u0026nbsp;\u003c/h4\u003e\u003cd\n iv\u003eVergleicht man Arbeitgeberselbstbeurteilungen daraufhin, wie sich Unt\n ernehmen seit den letzten Jahren auf Karrierewebseiten und Bewertungspla\n ttformen präsentierten, zeichnet sich ein Trend ab auf konventionelle Be\n schreibungsfloskeln zurückzugreifen. Phrasen wie:\u0026nbsp; \"Wir sind marktf\n ührend im Bereich ...\" oder \"Wir sind ein hochmotiviertes Team mit Leide\n nschaft für die Sache ...\" sind wenig aussagekräftig und überall zu lese\n n. Wir haben Faire-Karriere.de um einen Selbstbeurteilungskatalog gemäß \n des \u003ca href=\"https://de.wikipedia.org/wiki/EFQM-Modell\"\u003eEFQM-Modells\u003c/a\u003e\n  erweitert. Dieser Leitfaden zur Selbstbeurteilung erlaubt Ihnen eine ge\n zielte Reflexion über die eigene Unternehmensorganisation und damit die \n Selbstdarstellung Ihres Unternehmens für potentielle Fachkräfte aussagek\n räftiger und authentischer zu gestalten.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eEB-Academy - U\n nser Beitrag zur Exzellenz in der Personalgewinnung\u003c/h4\u003e\u003cdiv\u003eDie Vision \n des Empfehlungsbundes besteht darin Ihren Weg zur Exzellenz in der Perso\n nalgewinnung stetig voranzubringen. Bisher gaben wir unsere Erfahrungen \n in der Fachkräftesuche in der Gemeinschaft mittels regelmäßigen und pers\n önlichen Beratungsgesprächen an unsere Mitglieder weiter. Da eine persön\n liche Beratungssituation häufig mehr Wissen vermittelt, als letztendlich\n  aufgenommen werden kann, ist es uns wichtig zentrale Themen für ein opt\n imiertes Personalmarketing auch in Form von Leitfäden, Graphiken und Ber\n atungsvideos zu übertragen. Das Konzept trägt den Namen EB-Academy. Im R\n ahmen dieser Veranstaltung möchten wir Ihnen das erste ausgearbeitete Mo\n dul zum \u003cem\u003eThema Stellenoptimierung\u003c/em\u003e vorstellen.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\u003e\n \u003c/div\u003e\u003ch4\u003eWorkshop - Motivationsstrategien für die Plattformen des Empfe\n hlungsbundes\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund basiert auf die Idee, dass sei\n ne Mitglieder star­ke re­gio­na­le und bran­chen­spe­zi­fi­sche Markt­pl\n ätze für Fach- und Füh­rungs­kräf­te, so­wie Stu­die­ren­de und Aus­zu­b\n il­den­de nach­hal­tig ausbauen. Die stetige Entwicklung dieser Marktplä\n tze steht und fällt mit der Partizipation und Motivation der teilnehmend\n en Unternehmen am gemeinschaftlichen Personalmarketing. Wir möchten diej\n enigen Mitglieder, die sich durch ein besonderes Engagement für Ihre Com\n munity auszeichnen mit zusätzlichen Vorteilen honorieren. In unserem Wor\n kshop wollen wir mit Ihnen gemeinsam den Nutzwert von solchen Vorteilen \n herausarbeiten, die für Ihre Personalarbeit auch eine Bedeutung haben. \u0026\n nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9213205,"Bezeichnung":"Sonic Labs GmbH","Kommentar":"IMMER Herrn Siegel mit in CC setzen, falls eine E-Mail an Herrn Zänker geht\r\n\r\n27.07.2017 über Gerd Schröder Onesty Direct empfohlen!","Typ":10,"Nutzername":"soniclabs","Website":"https://www.sonic-labs.net/stellenangebote/","created_at":"2017-07-27T12:20:26.000+02:00","updated_at":"2021-06-18T10:59:31.000+02:00"}},{"id":82,"display_line":"07.02.2018 - 15 bis 18:00 Uhr Berlin - Empfehlungsbund Community Workshop in Berlin - Gastgeber: Mambu GmbH","subtitle":"Empfehlungsbund Community Workshop in Berlin","city":"Berlin","start":"2018-02-07T15:00:00.000+01:00","finish":"2018-02-07T18:00:00.000+01:00","address":"Karl-Liebknecht-Str. 5, 10178 Berlin","event_host":"Mambu GmbH","lat":52.5201,"lon":13.4037,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20171029T030000\nRDATE:20171029T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180207T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180207T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen pote\n nzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personal\n arbeit?  In den Community Workshops des Empfehlungsbundes kommen Persona\n lexperten und Führungskräfte regionaler Unternehmen zusammen. Hier werde\n n neue Entwicklungen und Ideen für eine erfolgsversprechende Personalarb\n eit vorgestellt. Wir ermutigen unsere Workshop Teilnehmer diese Ideen zu\n  evaluieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzep\n tes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \\n\\nAuf der \n Agenda steht unter anderem\\, wie Sie Motivationsstrategien sinnvoll für \n Ihre Personalgewinnungsmaßnahmen nutzen können. Des Weiteren möchten wir\n  Ihnen zeigen\\, wie Sie mithilfe des EFQM Modells angemessenere Arbeitge\n ber-Selbstbewertungen formulieren. Außerdem stellen wir Ihnen mit EB-Aca\n demy eine autodidaktische Lernplattform vor\\, womit Sie Ihr Personalmana\n gement-Knowhow weiter optimieren können. Wir freuen uns auf Sie! \\n\\n\\nD\n ie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freisch\n altung aus organisatorischen Gründen erforderlich.\\nDer Empfehlungsbund \n ist das führende Netzwerk zur effizienten Personalgewinnung insbesondere\n  für Informatiker und Ingenieure in Deutschland.\\n\\n\\n\\n\\n\\n\\nArbeitgebe\n rauftritt optimieren - Aussagekräftige Selbstbeurteilung mit EFQM Vergle\n icht man Arbeitgeberselbstbeurteilungen daraufhin\\, wie sich Unternehmen\n  seit den letzten Jahren auf Karrierewebseiten und Bewertungsplattformen\n  präsentierten\\, zeichnet sich ein Trend ab auf konventionelle Beschreib\n ungsfloskeln zurückzugreifen. Phrasen wie:  \"Wir sind marktführend im Be\n reich ...\" oder \"Wir sind ein hochmotiviertes Team mit Leidenschaft für \n die Sache ...\" sind wenig aussagekräftig und überall zu lesen. Wir haben\n  Faire-Karriere.de um einen Selbstbeurteilungskatalog gemäß des EFQM-Mod\n ells erweitert. Dieser Leitfaden zur Selbstbeurteilung erlaubt Ihnen ein\n e gezielte Reflexion über die eigene Unternehmensorganisation und damit \n die Selbstdarstellung Ihres Unternehmens für potentielle Fachkräfte auss\n agekräftiger und authentischer zu gestalten.\\n\\n\\nEB-Academy - Unser Bei\n trag zur Exzellenz in der PersonalgewinnungDie Vision des Empfehlungsbun\n des besteht darin Ihren Weg zur Exzellenz in der Personalgewinnung steti\n g voranzubringen. Bisher gaben wir unsere Erfahrungen in der Fachkräftes\n uche in der Gemeinschaft mittels regelmäßigen und persönlichen Beratungs\n gesprächen an unsere Mitglieder weiter. Da eine persönliche Beratungssit\n uation häufig mehr Wissen vermittelt\\, als letztendlich aufgenommen werd\n en kann\\, ist es uns wichtig zentrale Themen für ein optimiertes Persona\n lmarketing auch in Form von Leitfäden\\, Graphiken und Beratungsvideos zu\n  übertragen. Das Konzept trägt den Namen EB-Academy. Im Rahmen dieser Ve\n ranstaltung möchten wir Ihnen das erste ausgearbeitete Modul zum Thema S\n tellenoptimierung vorstellen.\\n\\n\\n\\nWorkshop - Motivationsstrategien fü\n r die Plattformen des EmpfehlungsbundesDer Empfehlungsbund basiert auf d\n ie Idee\\, dass seine Mitglieder star­ke re­gio­na­le und bran­chen­spe­z\n i­fi­sche Markt­plätze für Fach- und Füh­rungs­kräf­te\\, so­wie Stu­die­\n ren­de und Aus­zu­bil­den­de nach­hal­tig ausbauen. Die stetige Entwickl\n ung dieser Marktplätze steht und fällt mit der Partizipation und Motivat\n ion der teilnehmenden Unternehmen am gemeinschaftlichen Personalmarketin\n g. Wir möchten diejenigen Mitglieder\\, die sich durch ein besonderes Eng\n agement für Ihre Community auszeichnen mit zusätzlichen Vorteilen honori\n eren. In unserem Workshop wollen wir mit Ihnen gemeinsam den Nutzwert vo\n n solchen Vorteilen herausarbeiten\\, die für Ihre Personalarbeit auch ei\n ne Bedeutung haben.  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/36\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=Mambu GmbH / Empfehlungsbund.de:https://www.empfehlungsbund.\n de/events/36\nATTACH:https://www.empfehlungsbund.de/events/36\nLOCATION:Mambu GmbH\\, Karl-Liebknecht-Str. 5\\, 10178 Berlin\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech\n  überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp;In den Co\n mmunity Workshops des Empfehlungsbundes kommen Personalexperten und Führ\n ungskräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklung\n en und Ideen für eine erfolgsversprechende Personalarbeit vorgestellt. W\n ir ermutigen unsere Workshop Teilnehmer diese Ideen zu evaluieren und mi\n t Ihren Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräfte\n suche in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht u\n nter anderem, \u003cstrong\u003ewie Sie Motivationsstrategien sinnvoll für Ihre Pe\n rsonalgewinnungsmaßnahmen nutzen können\u003c/strong\u003e. Des Weiteren möchten w\n ir Ihnen zeigen, \u003cstrong\u003ewie Sie mithilfe des EFQM Modells angemessenere\n  Arbeitgeber-Selbstbewertungen formulieren\u003c/strong\u003e. Außerdem stellen wi\n r Ihnen mit EB-Academy eine autodidaktische Lernplattform vor,\u003cstrong\u003e w\n omit Sie Ihr Personalmanagement-Knowhow weiter optimieren können\u003c/strong\n \u003e. Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kos\n tenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisat\n orischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\n \"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personal\n gewinnung insbesondere für Informatiker und Ingenieure in Deutschland.\u003c/\n a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eArbeitgeberauftr\n itt optimieren - Aussagekräftige Selbstbeurteilung mit EFQM\u0026nbsp;\u003c/h4\u003e\u003cd\n iv\u003eVergleicht man Arbeitgeberselbstbeurteilungen daraufhin, wie sich Unt\n ernehmen seit den letzten Jahren auf Karrierewebseiten und Bewertungspla\n ttformen präsentierten, zeichnet sich ein Trend ab auf konventionelle Be\n schreibungsfloskeln zurückzugreifen. Phrasen wie:\u0026nbsp; \"Wir sind marktf\n ührend im Bereich ...\" oder \"Wir sind ein hochmotiviertes Team mit Leide\n nschaft für die Sache ...\" sind wenig aussagekräftig und überall zu lese\n n. Wir haben Faire-Karriere.de um einen Selbstbeurteilungskatalog gemäß \n des \u003ca href=\"https://de.wikipedia.org/wiki/EFQM-Modell\"\u003eEFQM-Modells\u003c/a\u003e\n  erweitert. Dieser Leitfaden zur Selbstbeurteilung erlaubt Ihnen eine ge\n zielte Reflexion über die eigene Unternehmensorganisation und damit die \n Selbstdarstellung Ihres Unternehmens für potentielle Fachkräfte aussagek\n räftiger und authentischer zu gestalten.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eEB-Academy - U\n nser Beitrag zur Exzellenz in der Personalgewinnung\u003c/h4\u003e\u003cdiv\u003eDie Vision \n des Empfehlungsbundes besteht darin Ihren Weg zur Exzellenz in der Perso\n nalgewinnung stetig voranzubringen. Bisher gaben wir unsere Erfahrungen \n in der Fachkräftesuche in der Gemeinschaft mittels regelmäßigen und pers\n önlichen Beratungsgesprächen an unsere Mitglieder weiter. Da eine persön\n liche Beratungssituation häufig mehr Wissen vermittelt, als letztendlich\n  aufgenommen werden kann, ist es uns wichtig zentrale Themen für ein opt\n imiertes Personalmarketing auch in Form von Leitfäden, Graphiken und Ber\n atungsvideos zu übertragen. Das Konzept trägt den Namen EB-Academy. Im R\n ahmen dieser Veranstaltung möchten wir Ihnen das erste ausgearbeitete Mo\n dul zum \u003cem\u003eThema Stellenoptimierung\u003c/em\u003e vorstellen.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\u003e\n \u003c/div\u003e\u003ch4\u003eWorkshop - Motivationsstrategien für die Plattformen des Empfe\n hlungsbundes\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund basiert auf die Idee, dass sei\n ne Mitglieder star­ke re­gio­na­le und bran­chen­spe­zi­fi­sche Markt­pl\n ätze für Fach- und Füh­rungs­kräf­te, so­wie Stu­die­ren­de und Aus­zu­b\n il­den­de nach­hal­tig ausbauen. Die stetige Entwicklung dieser Marktplä\n tze steht und fällt mit der Partizipation und Motivation der teilnehmend\n en Unternehmen am gemeinschaftlichen Personalmarketing. Wir möchten diej\n enigen Mitglieder, die sich durch ein besonderes Engagement für Ihre Com\n munity auszeichnen mit zusätzlichen Vorteilen honorieren. In unserem Wor\n kshop wollen wir mit Ihnen gemeinsam den Nutzwert von solchen Vorteilen \n herausarbeiten, die für Ihre Personalarbeit auch eine Bedeutung haben. \u0026\n nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9213101,"Bezeichnung":"Mambu GmbH","Kommentar":"","Typ":10,"Nutzername":"mambu","Website":"https://www.mambu.com/","created_at":"2017-03-08T09:51:26.000+01:00","updated_at":"2021-06-18T10:59:29.000+02:00"}},{"id":83,"display_line":"06.02.2018 - 16 bis 19:00 Uhr Dresden - Empfehlungsbund Community Workshop in Dresden - Gastgeber: Preh Car Connect GmbH","subtitle":"Empfehlungsbund Community Workshop in Dresden","city":"Dresden","start":"2018-02-06T16:00:47.000+01:00","finish":"2018-02-06T19:00:47.000+01:00","address":"Gewerbepark Merbitz 5, 01156 Dresden","event_host":"Preh Car Connect GmbH","lat":51.0667,"lon":13.6368,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20171029T030000\nRDATE:20171029T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20180206T190047\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20180206T160047\nCATEGORIES:BUSINESS\nDESCRIPTION:Wie lassen sich Personalgewinnungsmaßnahmen effektiver und gl\n eichzeitig effizienter verwirklichen? Wo und wie finden Unternehmen pote\n nzielle Mitarbeiter? Hat HR-Tech überhaupt einen Nutzen für die Personal\n arbeit?  In den Community Workshops des Empfehlungsbundes kommen Persona\n lexperten und Führungskräfte regionaler Unternehmen zusammen. Hier werde\n n neue Entwicklungen und Ideen für eine erfolgsversprechende Personalarb\n eit vorgestellt. Wir ermutigen unsere Workshop Teilnehmer diese Ideen zu\n  evaluieren und mit Ihren Beiträgen die Weiterentwicklung unseres Konzep\n tes der Fachkräftesuche in der Gemeinschaft voranzutreiben. \\n\\nAuf der \n Agenda steht unter anderem\\, wie Sie Motivationsstrategien sinnvoll für \n Ihre Personalgewinnungsmaßnahmen nutzen können. Des Weiteren möchten wir\n  Ihnen zeigen\\, wie Sie mithilfe des EFQM Modells angemessenere Arbeitge\n ber-Selbstbewertungen formulieren. Außerdem stellen wir Ihnen mit EB-Aca\n demy eine autodidaktische Lernplattform vor\\, womit Sie Ihr Personalmana\n gement-Knowhow weiter optimieren können. Wir freuen uns auf Sie! \\n\\n\\nD\n ie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freisch\n altung aus organisatorischen Gründen erforderlich.\\nDer Empfehlungsbund \n ist das führende Netzwerk zur effizienten Personalgewinnung insbesondere\n  für Informatiker und Ingenieure in Deutschland.\\n\\n\\n\\n\\n\\n\\nArbeitgebe\n rauftritt optimieren - Aussagekräftige Selbstbeurteilung mit EFQM Vergle\n icht man Arbeitgeberselbstbeurteilungen daraufhin\\, wie sich Unternehmen\n  seit den letzten Jahren auf Karrierewebseiten und Bewertungsplattformen\n  präsentierten\\, zeichnet sich ein Trend ab auf konventionelle Beschreib\n ungsfloskeln zurückzugreifen. Phrasen wie:  \"Wir sind marktführend im Be\n reich ...\" oder \"Wir sind ein hochmotiviertes Team mit Leidenschaft für \n die Sache ...\" sind wenig aussagekräftig und überall zu lesen. Wir haben\n  Faire-Karriere.de um einen Selbstbeurteilungskatalog gemäß des EFQM-Mod\n ells erweitert. Dieser Leitfaden zur Selbstbeurteilung erlaubt Ihnen ein\n e gezielte Reflexion über die eigene Unternehmensorganisation und damit \n die Selbstdarstellung Ihres Unternehmens für potentielle Fachkräfte auss\n agekräftiger und authentischer zu gestalten.\\n\\n\\nEB-Academy - Unser Bei\n trag zur Exzellenz in der PersonalgewinnungDie Vision des Empfehlungsbun\n des besteht darin Ihren Weg zur Exzellenz in der Personalgewinnung steti\n g voranzubringen. Bisher gaben wir unsere Erfahrungen in der Fachkräftes\n uche in der Gemeinschaft mittels regelmäßigen und persönlichen Beratungs\n gesprächen an unsere Mitglieder weiter. Da eine persönliche Beratungssit\n uation häufig mehr Wissen vermittelt\\, als letztendlich aufgenommen werd\n en kann\\, ist es uns wichtig zentrale Themen für ein optimiertes Persona\n lmarketing auch in Form von Leitfäden\\, Graphiken und Beratungsvideos zu\n  übertragen. Das Konzept trägt den Namen EB-Academy. Im Rahmen dieser Ve\n ranstaltung möchten wir Ihnen das erste ausgearbeitete Modul zum Thema S\n tellenoptimierung vorstellen.\\n\\n\\n\\nWorkshop - Motivationsstrategien fü\n r die Plattformen des EmpfehlungsbundesDer Empfehlungsbund basiert auf d\n ie Idee\\, dass seine Mitglieder star­ke re­gio­na­le und bran­chen­spe­z\n i­fi­sche Markt­plätze für Fach- und Füh­rungs­kräf­te\\, so­wie Stu­die­\n ren­de und Aus­zu­bil­den­de nach­hal­tig ausbauen. Die stetige Entwickl\n ung dieser Marktplätze steht und fällt mit der Partizipation und Motivat\n ion der teilnehmenden Unternehmen am gemeinschaftlichen Personalmarketin\n g. Wir möchten diejenigen Mitglieder\\, die sich durch ein besonderes Eng\n agement für Ihre Community auszeichnen mit zusätzlichen Vorteilen honori\n eren. In unserem Workshop wollen wir mit Ihnen gemeinsam den Nutzwert vo\n n solchen Vorteilen herausarbeiten\\, die für Ihre Personalarbeit auch ei\n ne Bedeutung haben.  \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/36\nSUMMARY:Empfehlungsbund Community Workshop in Dresden\\, Leipzig\\, München\n  und Berlin\nORGANIZER;CN=Preh Car Connect GmbH / Empfehlungsbund.de:https://www.empfe\n hlungsbund.de/events/36\nATTACH:https://www.empfehlungsbund.de/events/36\nLOCATION:Preh Car Connect GmbH\\, Gewerbepark Merbitz 5\\, 01156 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003e\u003cstrong\u003eWie lassen sich Perso\n nalgewinnungsmaßnahmen effektiver und gleichzeitig effizienter verwirkli\n chen? Wo und wie finden Unternehmen potenzielle Mitarbeiter? Hat HR-Tech\n  überhaupt einen Nutzen für die Personalarbeit? \u003c/strong\u003e\u0026nbsp;In den Co\n mmunity Workshops des Empfehlungsbundes kommen Personalexperten und Führ\n ungskräfte regionaler Unternehmen zusammen. Hier werden neue Entwicklung\n en und Ideen für eine erfolgsversprechende Personalarbeit vorgestellt. W\n ir ermutigen unsere Workshop Teilnehmer diese Ideen zu evaluieren und mi\n t Ihren Beiträgen die Weiterentwicklung unseres Konzeptes der Fachkräfte\n suche in der Gemeinschaft voranzutreiben. \u003cbr\u003e\u003cbr\u003eAuf der Agenda steht u\n nter anderem, \u003cstrong\u003ewie Sie Motivationsstrategien sinnvoll für Ihre Pe\n rsonalgewinnungsmaßnahmen nutzen können\u003c/strong\u003e. Des Weiteren möchten w\n ir Ihnen zeigen, \u003cstrong\u003ewie Sie mithilfe des EFQM Modells angemessenere\n  Arbeitgeber-Selbstbewertungen formulieren\u003c/strong\u003e. Außerdem stellen wi\n r Ihnen mit EB-Academy eine autodidaktische Lernplattform vor,\u003cstrong\u003e w\n omit Sie Ihr Personalmanagement-Knowhow weiter optimieren können\u003c/strong\n \u003e. Wir freuen uns auf Sie!\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kos\n tenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisat\n orischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\n \"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personal\n gewinnung insbesondere für Informatiker und Ingenieure in Deutschland.\u003c/\n a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003e\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eArbeitgeberauftr\n itt optimieren - Aussagekräftige Selbstbeurteilung mit EFQM\u0026nbsp;\u003c/h4\u003e\u003cd\n iv\u003eVergleicht man Arbeitgeberselbstbeurteilungen daraufhin, wie sich Unt\n ernehmen seit den letzten Jahren auf Karrierewebseiten und Bewertungspla\n ttformen präsentierten, zeichnet sich ein Trend ab auf konventionelle Be\n schreibungsfloskeln zurückzugreifen. Phrasen wie:\u0026nbsp; \"Wir sind marktf\n ührend im Bereich ...\" oder \"Wir sind ein hochmotiviertes Team mit Leide\n nschaft für die Sache ...\" sind wenig aussagekräftig und überall zu lese\n n. Wir haben Faire-Karriere.de um einen Selbstbeurteilungskatalog gemäß \n des \u003ca href=\"https://de.wikipedia.org/wiki/EFQM-Modell\"\u003eEFQM-Modells\u003c/a\u003e\n  erweitert. Dieser Leitfaden zur Selbstbeurteilung erlaubt Ihnen eine ge\n zielte Reflexion über die eigene Unternehmensorganisation und damit die \n Selbstdarstellung Ihres Unternehmens für potentielle Fachkräfte aussagek\n räftiger und authentischer zu gestalten.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003ch4\u003eEB-Academy - U\n nser Beitrag zur Exzellenz in der Personalgewinnung\u003c/h4\u003e\u003cdiv\u003eDie Vision \n des Empfehlungsbundes besteht darin Ihren Weg zur Exzellenz in der Perso\n nalgewinnung stetig voranzubringen. Bisher gaben wir unsere Erfahrungen \n in der Fachkräftesuche in der Gemeinschaft mittels regelmäßigen und pers\n önlichen Beratungsgesprächen an unsere Mitglieder weiter. Da eine persön\n liche Beratungssituation häufig mehr Wissen vermittelt, als letztendlich\n  aufgenommen werden kann, ist es uns wichtig zentrale Themen für ein opt\n imiertes Personalmarketing auch in Form von Leitfäden, Graphiken und Ber\n atungsvideos zu übertragen. Das Konzept trägt den Namen EB-Academy. Im R\n ahmen dieser Veranstaltung möchten wir Ihnen das erste ausgearbeitete Mo\n dul zum \u003cem\u003eThema Stellenoptimierung\u003c/em\u003e vorstellen.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003cbr\u003e\n \u003c/div\u003e\u003ch4\u003eWorkshop - Motivationsstrategien für die Plattformen des Empfe\n hlungsbundes\u003c/h4\u003e\u003cdiv\u003eDer Empfehlungsbund basiert auf die Idee, dass sei\n ne Mitglieder star­ke re­gio­na­le und bran­chen­spe­zi­fi­sche Markt­pl\n ätze für Fach- und Füh­rungs­kräf­te, so­wie Stu­die­ren­de und Aus­zu­b\n il­den­de nach­hal­tig ausbauen. Die stetige Entwicklung dieser Marktplä\n tze steht und fällt mit der Partizipation und Motivation der teilnehmend\n en Unternehmen am gemeinschaftlichen Personalmarketing. Wir möchten diej\n enigen Mitglieder, die sich durch ein besonderes Engagement für Ihre Com\n munity auszeichnen mit zusätzlichen Vorteilen honorieren. In unserem Wor\n kshop wollen wir mit Ihnen gemeinsam den Nutzwert von solchen Vorteilen \n herausarbeiten, die für Ihre Personalarbeit auch eine Bedeutung haben. \u0026\n nbsp;\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9213016,"Bezeichnung":"Joynext GmbH    ","Kommentar":"zuvor Preh Car Connect GmbH, zuvor 01.06.2016 aus \"TechniSat Digital GmbH\" ausgegliedert, restliche Technisat in Washingtonstraße","Typ":10,"Nutzername":"joynext","Website":"https://www.joynext.com/karriere/karriere-joynext-germany-dresden/","created_at":"2016-07-18T15:26:39.000+02:00","updated_at":"2021-06-18T10:59:27.000+02:00"}}]},{"id":35,"name":"ebcw_0917","hashtag":"ebcw","title":"Empfehlungsbund Community Workshops in Chemnitz, Leipzig, München und Berlin","teaser":"Im Rahmen der Empfehlungsbund Community Workshops laden wir Sie recht herzlich zur aktiven Vernetzung und zum Wissensaustausch zum Thema Personalgewinnung ein! Wenn Sie Interesse an aktuellen Themen und Trends der Personalgewinnung und des Personalmarketings haben, dann stellen wir Ihnen im Empfehlungsbund Community Workshop das gesammelte Fachwissen unserer Experten aus erster Hand zur Verfügung. Die Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\r\n","teaser_hrfilter":"Start der Empfehlungsbund Community Workshops im September! Maximieren Sie hier Ihr Personalgewinnungspotential regionaler Fachkräfte.","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003ewir laden Sie herzlich zu unseren \u003cstrong\u003eEmpfehlungsbund Community Workshops in Chemnitz, Leipzig, München und Berlin\u003c/strong\u003e zur aktiven Vernetzung mit den Mitgliedern des Empfehlungsbundes zum Thema Personalgewinnung ein. Tauschen Sie sich hier über die aktuell effektivsten Kanäle zur Fachkräftegewinnung in Ihrer Region mit den Experten aus. Sowohl am 26. als auch am 27. September 2017 veranstalten wir die Plattform für Geschäftsführer und Personalmanager mit Fachkräftebedarf. Unsere Experten stellen Ihnen das gesamte Fachwissen des \u003ca href=\"http://www.empfehlungsbund.de/arbeitgeber\"\u003eEmpfehlungsbundes\u003c/a\u003e, der Nr.1 Spezial-Jobbörse 2017, aus erster Hand zur Verfügung.\u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter anderem die Sicherstellung des\u003cstrong\u003e AGG sowie Datenschutz und Prozesseffizienz von Bewerbermanagementsystemen (BMS)\u003c/strong\u003e. Außerdem stellen wir Ihnen die systematische \u003cstrong\u003eVerbesserung der Candidate Experience auf Grundlage von aktuellen Studien\u003c/strong\u003e vor. Profitieren Sie vom Erfahrungsschatz unserer Mitglieder und bringen Sie Ihre Expertise mit ins Gespräch. Wie gestalten Sie als Arbeitgeber Ihre Personalgewinnung effektiv?\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebnd.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effizienten Personalgewinnung insbesondere für Informatiker und Ingenieure in Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e","agenda":"\u003cdiv\u003e\u003cstrong\u003eExternes Bewerbermanagement – So gestalten Sie ein Standard-Nutzerverhalten Ihrer Bewerber\u0026nbsp; \u003c/strong\u003e\u003cbr\u003eAuf Basis der Ergebnisse des Workshops vom Mai 2017 werden wir Ihnen erste Entwicklungen für ein professionelles Bewerbermanagement vorstellen. Anhand kleinerer Module demonstrieren wir Ihnen Einblicke in das Nutzerverhalten des Bewerbers. Wir zeigen, wie ein \u003cstrong\u003eBewerbungsformular und ein Stellenanzeigen-Widget auf der Karrierewebseite\u003c/strong\u003e den Eingangskanal für Bewerbungen vereinheitlicht und damit dem Bewerber eine stete Orientierungshilfe bietet. Auch die \u003cstrong\u003eVereinfachung Ihres Anzeigenmanagements \u003c/strong\u003ekann so realisiert werden. Zeitgleich schaffen Sie die Voraussetzungen für ein BMS.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eKanaleo Update – Verbesserung der Bewerbererfahrungen auf Grundlage von aktuellen Studien\u003c/strong\u003e\u003cbr\u003eAls Ergänzung zum bereits vorhandenen verhaltensorientierten Fragebogen zu Bewerberrückläufen stellen wir Ihnen den \u003cstrong\u003eAnschlussfragebogen zur Candidate Experience \u003c/strong\u003evor. Der aktuelle Forschungsstand konnte zeigen, dass \u003cstrong\u003e80% der Bewerber mit bis zu 7 Personen (Kollegen, Freunde, Bekannte)\u003c/strong\u003e über ihre Bewerbererfahrungen bewertend sprechen. Der Anschlussfragebogen zur Candidate Experience erlaubt es Ihnen, die Bewerbungserfahrung in Ihrem Unternehmen zu optimieren. Sie erhalten systematisch Einblicke, welche Etappen Ihres Bewerbungsprozesses von den Kandidaten positiv wahrgenommen wurden und welche verbesserungswürdig sind. Außerdem können Sie sich \u003cstrong\u003emit anderen Unternehmen Ihrer Branche vergleichen\u003c/strong\u003e.\u0026nbsp;\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eZweiter Workshop zum Bewerbermanagement des Empfehlungsbundes – Internes Bewerbermanagement \u003c/strong\u003e\u003cbr\u003eIn unserem Workshop wollen wir mit Ihnen die Anforderungen besprechen, die bei der internen Steuerung eines Bewerbungseingangs zu berücksichtigen sind. Dabei diskutieren wir gemeinsam mit Ihnen, wie \u003cstrong\u003edie Koordination und Bewertung von Bewerbungen und der beteiligten Rollen\u003c/strong\u003e (Zugriffsrechte auf sensible Daten) in Ihrem Bewerbermanagement gestaltet werden können. Bringen Sie sich hier ein, damit die Anforderungen eines \u003cstrong\u003erechtssicheren Bewerbermanagements \u003c/strong\u003eden betrieblichen Abläufen Ihres Unternehmens gerecht werden. Sofern Ihr Bewerbermanagement durch ein BMS integriert ist, \u003cstrong\u003elernen Sie hier Best Practices kennen, um die Prozessqualität Ihres bestehenden BMS zu bewerten\u003c/strong\u003e.\u003c/div\u003e","start":"2017-09-26T15:00:00.000+02:00","finish":"2017-09-27T18:00:00.000+02:00","visible":true,"is_open_network":false,"banner":"https://crm.pludoni.com/uploads/community_workshop/banner/35/wide_2017-05-23_20170523_162358.jpg","banner_hrfilter":"https://crm.pludoni.com/uploads/community_workshop/banner_hrfilter/35/wide_Screenshot_from_2017-08-24_12-35-55.png","logo":"https://crm.pludoni.com/uploads/community_workshop/logo/35/Community_Workshop_Blog.jpg","register_url":"https://www.empfehlungsbund.de/events/35/register","show_url":"https://www.empfehlungsbund.de/events/35","events":[{"id":77,"display_line":"26.09.2017 - 15 bis 18:00 Uhr Chemnitz - Emp­feh­lungs­bund Com­mu­ni­ty Work­shop in Chem­nitz - Gastgeber: 3D-Micromac AG","subtitle":"Emp­feh­lungs­bund Com­mu­ni­ty Work­shop in Chem­nitz","city":"Chemnitz","start":"2017-09-26T15:00:00.000+02:00","finish":"2017-09-26T18:00:00.000+02:00","address":"Technologie-Campus 8, 09126 Chemnitz","event_host":"3D-Micromac AG","lat":50.8191,"lon":12.9377,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20170326T020000\nRDATE:20170326T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20170926T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20170926T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:wir laden Sie herzlich zu unseren Empfehlungsbund Community W\n orkshops in Chemnitz\\, Leipzig\\, München und Berlin zur aktiven Vernetzu\n ng mit den Mitgliedern des Empfehlungsbundes zum Thema Personalgewinnung\n  ein. Tauschen Sie sich hier über die aktuell effektivsten Kanäle zur Fa\n chkräftegewinnung in Ihrer Region mit den Experten aus. Sowohl am 26. al\n s auch am 27. September 2017 veranstalten wir die Plattform für Geschäft\n sführer und Personalmanager mit Fachkräftebedarf. Unsere Experten stelle\n n Ihnen das gesamte Fachwissen des Empfehlungsbundes\\, der Nr.1 Spezial-\n Jobbörse 2017\\, aus erster Hand zur Verfügung.\\n\\nAuf der Agenda steht u\n nter anderem die Sicherstellung des AGG sowie Datenschutz und Prozesseff\n izienz von Bewerbermanagementsystemen (BMS). Außerdem stellen wir Ihnen \n die systematische Verbesserung der Candidate Experience auf Grundlage vo\n n aktuellen Studien vor. Profitieren Sie vom Erfahrungsschatz unserer Mi\n tglieder und bringen Sie Ihre Expertise mit ins Gespräch. Wie gestalten \n Sie als Arbeitgeber Ihre Personalgewinnung effektiv?\\n\\n\\nDie Teilnahme \n ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus or\n ganisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führe\n nde Netzwerk zur effizienten Personalgewinnung insbesondere für Informat\n iker und Ingenieure in Deutschland.\\n\\n\\n\\nExternes Bewerbermanagement –\n  So gestalten Sie ein Standard-Nutzerverhalten Ihrer Bewerber  \\nAuf Bas\n is der Ergebnisse des Workshops vom Mai 2017 werden wir Ihnen erste Entw\n icklungen für ein professionelles Bewerbermanagement vorstellen. Anhand \n kleinerer Module demonstrieren wir Ihnen Einblicke in das Nutzerverhalte\n n des Bewerbers. Wir zeigen\\, wie ein Bewerbungsformular und ein Stellen\n anzeigen-Widget auf der Karrierewebseite den Eingangskanal für Bewerbung\n en vereinheitlicht und damit dem Bewerber eine stete Orientierungshilfe \n bietet. Auch die Vereinfachung Ihres Anzeigenmanagements kann so realisi\n ert werden. Zeitgleich schaffen Sie die Voraussetzungen für ein BMS.\\n\\n\n \\nKanaleo Update – Verbesserung der Bewerbererfahrungen auf Grundlage vo\n n aktuellen Studien\\nAls Ergänzung zum bereits vorhandenen verhaltensori\n entierten Fragebogen zu Bewerberrückläufen stellen wir Ihnen den Anschlu\n ssfragebogen zur Candidate Experience vor. Der aktuelle Forschungsstand \n konnte zeigen\\, dass 80% der Bewerber mit bis zu 7 Personen (Kollegen\\, \n Freunde\\, Bekannte) über ihre Bewerbererfahrungen bewertend sprechen. De\n r Anschlussfragebogen zur Candidate Experience erlaubt es Ihnen\\, die Be\n werbungserfahrung in Ihrem Unternehmen zu optimieren. Sie erhalten syste\n matisch Einblicke\\, welche Etappen Ihres Bewerbungsprozesses von den Kan\n didaten positiv wahrgenommen wurden und welche verbesserungswürdig sind.\n  Außerdem können Sie sich mit anderen Unternehmen Ihrer Branche vergleic\n hen. \\n\\n\\nZweiter Workshop zum Bewerbermanagement des Empfehlungsbundes\n  – Internes Bewerbermanagement \\nIn unserem Workshop wollen wir mit Ihne\n n die Anforderungen besprechen\\, die bei der internen Steuerung eines Be\n werbungseingangs zu berücksichtigen sind. Dabei diskutieren wir gemeinsa\n m mit Ihnen\\, wie die Koordination und Bewertung von Bewerbungen und der\n  beteiligten Rollen (Zugriffsrechte auf sensible Daten) in Ihrem Bewerbe\n rmanagement gestaltet werden können. Bringen Sie sich hier ein\\, damit d\n ie Anforderungen eines rechtssicheren Bewerbermanagements den betrieblic\n hen Abläufen Ihres Unternehmens gerecht werden. Sofern Ihr Bewerbermanag\n ement durch ein BMS integriert ist\\, lernen Sie hier Best Practices kenn\n en\\, um die Prozessqualität Ihres bestehenden BMS zu bewerten.\\n\nURL:https://www.empfehlungsbund.de/events/35\nSUMMARY:Empfehlungsbund Community Workshops in Chemnitz\\, Leipzig\\, Münch\n en und Berlin\nORGANIZER;CN=3D-Micromac AG / Empfehlungsbund.de:https://www.empfehlungsb\n und.de/events/35\nATTACH:https://www.empfehlungsbund.de/events/35\nLOCATION:3D-Micromac AG\\, Technologie-Campus 8\\, 09126 Chemnitz\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003ewir laden Sie herzlich zu uns\n eren \u003cstrong\u003eEmpfehlungsbund Community Workshops in Chemnitz, Leipzig, M\n ünchen und Berlin\u003c/strong\u003e zur aktiven Vernetzung mit den Mitgliedern de\n s Empfehlungsbundes zum Thema Personalgewinnung ein. Tauschen Sie sich h\n ier über die aktuell effektivsten Kanäle zur Fachkräftegewinnung in Ihre\n r Region mit den Experten aus. Sowohl am 26. als auch am 27. September 2\n 017 veranstalten wir die Plattform für Geschäftsführer und Personalmanag\n er mit Fachkräftebedarf. Unsere Experten stellen Ihnen das gesamte Fachw\n issen des \u003ca href=\"http://www.empfehlungsbund.de/arbeitgeber\"\u003eEmpfehlung\n sbundes\u003c/a\u003e, der Nr.1 Spezial-Jobbörse 2017, aus erster Hand zur Verfügu\n ng.\u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter anderem die Sicherstellung des\u003cstr\n ong\u003e AGG sowie Datenschutz und Prozesseffizienz von Bewerbermanagementsy\n stemen (BMS)\u003c/strong\u003e. Außerdem stellen wir Ihnen die systematische \u003cstr\n ong\u003eVerbesserung der Candidate Experience auf Grundlage von aktuellen St\n udien\u003c/strong\u003e vor. Profitieren Sie vom Erfahrungsschatz unserer Mitglie\n der und bringen Sie Ihre Expertise mit ins Gespräch. Wie gestalten Sie a\n ls Arbeitgeber Ihre Personalgewinnung effektiv?\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Te\n ilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltun\n g aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebn\n d.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effiz\n ienten Personalgewinnung insbesondere für Informatiker und Ingenieure in\n  Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eExternes Bewerbermanagement \n – So gestalten Sie ein Standard-Nutzerverhalten Ihrer Bewerber\u0026nbsp; \u003c/s\n trong\u003e\u003cbr\u003eAuf Basis der Ergebnisse des Workshops vom Mai 2017 werden wir\n  Ihnen erste Entwicklungen für ein professionelles Bewerbermanagement vo\n rstellen. Anhand kleinerer Module demonstrieren wir Ihnen Einblicke in d\n as Nutzerverhalten des Bewerbers. Wir zeigen, wie ein \u003cstrong\u003eBewerbungs\n formular und ein Stellenanzeigen-Widget auf der Karrierewebseite\u003c/strong\n \u003e den Eingangskanal für Bewerbungen vereinheitlicht und damit dem Bewerb\n er eine stete Orientierungshilfe bietet. Auch die \u003cstrong\u003eVereinfachung \n Ihres Anzeigenmanagements \u003c/strong\u003ekann so realisiert werden. Zeitgleich\n  schaffen Sie die Voraussetzungen für ein BMS.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\n \u003eKanaleo Update – Verbesserung der Bewerbererfahrungen auf Grundlage von\n  aktuellen Studien\u003c/strong\u003e\u003cbr\u003eAls Ergänzung zum bereits vorhandenen ver\n haltensorientierten Fragebogen zu Bewerberrückläufen stellen wir Ihnen d\n en \u003cstrong\u003eAnschlussfragebogen zur Candidate Experience \u003c/strong\u003evor. De\n r aktuelle Forschungsstand konnte zeigen, dass \u003cstrong\u003e80% der Bewerber \n mit bis zu 7 Personen (Kollegen, Freunde, Bekannte)\u003c/strong\u003e über ihre B\n ewerbererfahrungen bewertend sprechen. Der Anschlussfragebogen zur Candi\n date Experience erlaubt es Ihnen, die Bewerbungserfahrung in Ihrem Unter\n nehmen zu optimieren. Sie erhalten systematisch Einblicke, welche Etappe\n n Ihres Bewerbungsprozesses von den Kandidaten positiv wahrgenommen wurd\n en und welche verbesserungswürdig sind. Außerdem können Sie sich \u003cstrong\n \u003emit anderen Unternehmen Ihrer Branche vergleichen\u003c/strong\u003e.\u0026nbsp;\u003cbr\u003e\u003cb\n r\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eZweiter Workshop zum Bewerbermanagement des Empfehl\n ungsbundes – Internes Bewerbermanagement \u003c/strong\u003e\u003cbr\u003eIn unserem Worksho\n p wollen wir mit Ihnen die Anforderungen besprechen, die bei der interne\n n Steuerung eines Bewerbungseingangs zu berücksichtigen sind. Dabei disk\n utieren wir gemeinsam mit Ihnen, wie \u003cstrong\u003edie Koordination und Bewert\n ung von Bewerbungen und der beteiligten Rollen\u003c/strong\u003e (Zugriffsrechte \n auf sensible Daten) in Ihrem Bewerbermanagement gestaltet werden können.\n  Bringen Sie sich hier ein, damit die Anforderungen eines \u003cstrong\u003erechts\n sicheren Bewerbermanagements \u003c/strong\u003eden betrieblichen Abläufen Ihres U\n nternehmens gerecht werden. Sofern Ihr Bewerbermanagement durch ein BMS \n integriert ist, \u003cstrong\u003elernen Sie hier Best Practices kennen, um die Pr\n ozessqualität Ihres bestehenden BMS zu bewerten\u003c/strong\u003e.\u003c/div\u003e\u003c/BODY\u003e\u003c/\n HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210197,"Bezeichnung":"3D-Micromac AG","Kommentar":"Sondermaschinenhersteller","Typ":10,"Nutzername":"micromac","Website":"https://3d-micromac.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:38.000+02:00"}},{"id":78,"display_line":"26.09.2017 - 15 bis 18:00 Uhr München - Emp­feh­lungs­bund Com­mu­ni­ty Work­shop in Mün­chen - Gastgeber: Denodo Technologies GmbH","subtitle":"Emp­feh­lungs­bund Com­mu­ni­ty Work­shop in Mün­chen","city":"München","start":"2017-09-26T15:00:00.000+02:00","finish":"2017-09-26T18:00:00.000+02:00","address":"Karlstraße 10, 80333 München","event_host":"Denodo Technologies GmbH","lat":48.1429,"lon":11.5677,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20170326T020000\nRDATE:20170326T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20170926T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20170926T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:wir laden Sie herzlich zu unseren Empfehlungsbund Community W\n orkshops in Chemnitz\\, Leipzig\\, München und Berlin zur aktiven Vernetzu\n ng mit den Mitgliedern des Empfehlungsbundes zum Thema Personalgewinnung\n  ein. Tauschen Sie sich hier über die aktuell effektivsten Kanäle zur Fa\n chkräftegewinnung in Ihrer Region mit den Experten aus. Sowohl am 26. al\n s auch am 27. September 2017 veranstalten wir die Plattform für Geschäft\n sführer und Personalmanager mit Fachkräftebedarf. Unsere Experten stelle\n n Ihnen das gesamte Fachwissen des Empfehlungsbundes\\, der Nr.1 Spezial-\n Jobbörse 2017\\, aus erster Hand zur Verfügung.\\n\\nAuf der Agenda steht u\n nter anderem die Sicherstellung des AGG sowie Datenschutz und Prozesseff\n izienz von Bewerbermanagementsystemen (BMS). Außerdem stellen wir Ihnen \n die systematische Verbesserung der Candidate Experience auf Grundlage vo\n n aktuellen Studien vor. Profitieren Sie vom Erfahrungsschatz unserer Mi\n tglieder und bringen Sie Ihre Expertise mit ins Gespräch. Wie gestalten \n Sie als Arbeitgeber Ihre Personalgewinnung effektiv?\\n\\n\\nDie Teilnahme \n ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus or\n ganisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führe\n nde Netzwerk zur effizienten Personalgewinnung insbesondere für Informat\n iker und Ingenieure in Deutschland.\\n\\n\\n\\nExternes Bewerbermanagement –\n  So gestalten Sie ein Standard-Nutzerverhalten Ihrer Bewerber  \\nAuf Bas\n is der Ergebnisse des Workshops vom Mai 2017 werden wir Ihnen erste Entw\n icklungen für ein professionelles Bewerbermanagement vorstellen. Anhand \n kleinerer Module demonstrieren wir Ihnen Einblicke in das Nutzerverhalte\n n des Bewerbers. Wir zeigen\\, wie ein Bewerbungsformular und ein Stellen\n anzeigen-Widget auf der Karrierewebseite den Eingangskanal für Bewerbung\n en vereinheitlicht und damit dem Bewerber eine stete Orientierungshilfe \n bietet. Auch die Vereinfachung Ihres Anzeigenmanagements kann so realisi\n ert werden. Zeitgleich schaffen Sie die Voraussetzungen für ein BMS.\\n\\n\n \\nKanaleo Update – Verbesserung der Bewerbererfahrungen auf Grundlage vo\n n aktuellen Studien\\nAls Ergänzung zum bereits vorhandenen verhaltensori\n entierten Fragebogen zu Bewerberrückläufen stellen wir Ihnen den Anschlu\n ssfragebogen zur Candidate Experience vor. Der aktuelle Forschungsstand \n konnte zeigen\\, dass 80% der Bewerber mit bis zu 7 Personen (Kollegen\\, \n Freunde\\, Bekannte) über ihre Bewerbererfahrungen bewertend sprechen. De\n r Anschlussfragebogen zur Candidate Experience erlaubt es Ihnen\\, die Be\n werbungserfahrung in Ihrem Unternehmen zu optimieren. Sie erhalten syste\n matisch Einblicke\\, welche Etappen Ihres Bewerbungsprozesses von den Kan\n didaten positiv wahrgenommen wurden und welche verbesserungswürdig sind.\n  Außerdem können Sie sich mit anderen Unternehmen Ihrer Branche vergleic\n hen. \\n\\n\\nZweiter Workshop zum Bewerbermanagement des Empfehlungsbundes\n  – Internes Bewerbermanagement \\nIn unserem Workshop wollen wir mit Ihne\n n die Anforderungen besprechen\\, die bei der internen Steuerung eines Be\n werbungseingangs zu berücksichtigen sind. Dabei diskutieren wir gemeinsa\n m mit Ihnen\\, wie die Koordination und Bewertung von Bewerbungen und der\n  beteiligten Rollen (Zugriffsrechte auf sensible Daten) in Ihrem Bewerbe\n rmanagement gestaltet werden können. Bringen Sie sich hier ein\\, damit d\n ie Anforderungen eines rechtssicheren Bewerbermanagements den betrieblic\n hen Abläufen Ihres Unternehmens gerecht werden. Sofern Ihr Bewerbermanag\n ement durch ein BMS integriert ist\\, lernen Sie hier Best Practices kenn\n en\\, um die Prozessqualität Ihres bestehenden BMS zu bewerten.\\n\nURL:https://www.empfehlungsbund.de/events/35\nSUMMARY:Empfehlungsbund Community Workshops in Chemnitz\\, Leipzig\\, Münch\n en und Berlin\nORGANIZER;CN=Denodo Technologies GmbH / Empfehlungsbund.de:https://www.em\n pfehlungsbund.de/events/35\nATTACH:https://www.empfehlungsbund.de/events/35\nLOCATION:Denodo Technologies GmbH\\, Karlstraße 10\\, 80333 München\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003ewir laden Sie herzlich zu uns\n eren \u003cstrong\u003eEmpfehlungsbund Community Workshops in Chemnitz, Leipzig, M\n ünchen und Berlin\u003c/strong\u003e zur aktiven Vernetzung mit den Mitgliedern de\n s Empfehlungsbundes zum Thema Personalgewinnung ein. Tauschen Sie sich h\n ier über die aktuell effektivsten Kanäle zur Fachkräftegewinnung in Ihre\n r Region mit den Experten aus. Sowohl am 26. als auch am 27. September 2\n 017 veranstalten wir die Plattform für Geschäftsführer und Personalmanag\n er mit Fachkräftebedarf. Unsere Experten stellen Ihnen das gesamte Fachw\n issen des \u003ca href=\"http://www.empfehlungsbund.de/arbeitgeber\"\u003eEmpfehlung\n sbundes\u003c/a\u003e, der Nr.1 Spezial-Jobbörse 2017, aus erster Hand zur Verfügu\n ng.\u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter anderem die Sicherstellung des\u003cstr\n ong\u003e AGG sowie Datenschutz und Prozesseffizienz von Bewerbermanagementsy\n stemen (BMS)\u003c/strong\u003e. Außerdem stellen wir Ihnen die systematische \u003cstr\n ong\u003eVerbesserung der Candidate Experience auf Grundlage von aktuellen St\n udien\u003c/strong\u003e vor. Profitieren Sie vom Erfahrungsschatz unserer Mitglie\n der und bringen Sie Ihre Expertise mit ins Gespräch. Wie gestalten Sie a\n ls Arbeitgeber Ihre Personalgewinnung effektiv?\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Te\n ilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltun\n g aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebn\n d.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effiz\n ienten Personalgewinnung insbesondere für Informatiker und Ingenieure in\n  Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eExternes Bewerbermanagement \n – So gestalten Sie ein Standard-Nutzerverhalten Ihrer Bewerber\u0026nbsp; \u003c/s\n trong\u003e\u003cbr\u003eAuf Basis der Ergebnisse des Workshops vom Mai 2017 werden wir\n  Ihnen erste Entwicklungen für ein professionelles Bewerbermanagement vo\n rstellen. Anhand kleinerer Module demonstrieren wir Ihnen Einblicke in d\n as Nutzerverhalten des Bewerbers. Wir zeigen, wie ein \u003cstrong\u003eBewerbungs\n formular und ein Stellenanzeigen-Widget auf der Karrierewebseite\u003c/strong\n \u003e den Eingangskanal für Bewerbungen vereinheitlicht und damit dem Bewerb\n er eine stete Orientierungshilfe bietet. Auch die \u003cstrong\u003eVereinfachung \n Ihres Anzeigenmanagements \u003c/strong\u003ekann so realisiert werden. Zeitgleich\n  schaffen Sie die Voraussetzungen für ein BMS.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\n \u003eKanaleo Update – Verbesserung der Bewerbererfahrungen auf Grundlage von\n  aktuellen Studien\u003c/strong\u003e\u003cbr\u003eAls Ergänzung zum bereits vorhandenen ver\n haltensorientierten Fragebogen zu Bewerberrückläufen stellen wir Ihnen d\n en \u003cstrong\u003eAnschlussfragebogen zur Candidate Experience \u003c/strong\u003evor. De\n r aktuelle Forschungsstand konnte zeigen, dass \u003cstrong\u003e80% der Bewerber \n mit bis zu 7 Personen (Kollegen, Freunde, Bekannte)\u003c/strong\u003e über ihre B\n ewerbererfahrungen bewertend sprechen. Der Anschlussfragebogen zur Candi\n date Experience erlaubt es Ihnen, die Bewerbungserfahrung in Ihrem Unter\n nehmen zu optimieren. Sie erhalten systematisch Einblicke, welche Etappe\n n Ihres Bewerbungsprozesses von den Kandidaten positiv wahrgenommen wurd\n en und welche verbesserungswürdig sind. Außerdem können Sie sich \u003cstrong\n \u003emit anderen Unternehmen Ihrer Branche vergleichen\u003c/strong\u003e.\u0026nbsp;\u003cbr\u003e\u003cb\n r\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eZweiter Workshop zum Bewerbermanagement des Empfehl\n ungsbundes – Internes Bewerbermanagement \u003c/strong\u003e\u003cbr\u003eIn unserem Worksho\n p wollen wir mit Ihnen die Anforderungen besprechen, die bei der interne\n n Steuerung eines Bewerbungseingangs zu berücksichtigen sind. Dabei disk\n utieren wir gemeinsam mit Ihnen, wie \u003cstrong\u003edie Koordination und Bewert\n ung von Bewerbungen und der beteiligten Rollen\u003c/strong\u003e (Zugriffsrechte \n auf sensible Daten) in Ihrem Bewerbermanagement gestaltet werden können.\n  Bringen Sie sich hier ein, damit die Anforderungen eines \u003cstrong\u003erechts\n sicheren Bewerbermanagements \u003c/strong\u003eden betrieblichen Abläufen Ihres U\n nternehmens gerecht werden. Sofern Ihr Bewerbermanagement durch ein BMS \n integriert ist, \u003cstrong\u003elernen Sie hier Best Practices kennen, um die Pr\n ozessqualität Ihres bestehenden BMS zu bewerten\u003c/strong\u003e.\u003c/div\u003e\u003c/BODY\u003e\u003c/\n HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9212167,"Bezeichnung":"Denodo Technologies GmbH","Kommentar":"","Typ":10,"Nutzername":"denodo","Website":"https://www.denodo.com/en/company/careers/list","created_at":"2015-06-29T10:18:38.000+02:00","updated_at":"2021-06-18T10:59:13.000+02:00"}},{"id":79,"display_line":"27.09.2017 - 15 bis 18:00 Uhr Leipzig - Emp­feh­lungs­bund Com­mu­ni­ty Work­shop in Leip­zig - Gastgeber: BE-terna GmbH","subtitle":"Emp­feh­lungs­bund Com­mu­ni­ty Work­shop in Leip­zig","city":"Leipzig","start":"2017-09-27T15:00:00.000+02:00","finish":"2017-09-27T18:00:00.000+02:00","address":"Bornaer Straße 19, 04288 Leipzig (Liebertwolkwitz)","event_host":"BE-terna GmbH","lat":51.2813,"lon":12.4562,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20170326T020000\nRDATE:20170326T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20170927T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20170927T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:wir laden Sie herzlich zu unseren Empfehlungsbund Community W\n orkshops in Chemnitz\\, Leipzig\\, München und Berlin zur aktiven Vernetzu\n ng mit den Mitgliedern des Empfehlungsbundes zum Thema Personalgewinnung\n  ein. Tauschen Sie sich hier über die aktuell effektivsten Kanäle zur Fa\n chkräftegewinnung in Ihrer Region mit den Experten aus. Sowohl am 26. al\n s auch am 27. September 2017 veranstalten wir die Plattform für Geschäft\n sführer und Personalmanager mit Fachkräftebedarf. Unsere Experten stelle\n n Ihnen das gesamte Fachwissen des Empfehlungsbundes\\, der Nr.1 Spezial-\n Jobbörse 2017\\, aus erster Hand zur Verfügung.\\n\\nAuf der Agenda steht u\n nter anderem die Sicherstellung des AGG sowie Datenschutz und Prozesseff\n izienz von Bewerbermanagementsystemen (BMS). Außerdem stellen wir Ihnen \n die systematische Verbesserung der Candidate Experience auf Grundlage vo\n n aktuellen Studien vor. Profitieren Sie vom Erfahrungsschatz unserer Mi\n tglieder und bringen Sie Ihre Expertise mit ins Gespräch. Wie gestalten \n Sie als Arbeitgeber Ihre Personalgewinnung effektiv?\\n\\n\\nDie Teilnahme \n ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus or\n ganisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führe\n nde Netzwerk zur effizienten Personalgewinnung insbesondere für Informat\n iker und Ingenieure in Deutschland.\\n\\n\\n\\nExternes Bewerbermanagement –\n  So gestalten Sie ein Standard-Nutzerverhalten Ihrer Bewerber  \\nAuf Bas\n is der Ergebnisse des Workshops vom Mai 2017 werden wir Ihnen erste Entw\n icklungen für ein professionelles Bewerbermanagement vorstellen. Anhand \n kleinerer Module demonstrieren wir Ihnen Einblicke in das Nutzerverhalte\n n des Bewerbers. Wir zeigen\\, wie ein Bewerbungsformular und ein Stellen\n anzeigen-Widget auf der Karrierewebseite den Eingangskanal für Bewerbung\n en vereinheitlicht und damit dem Bewerber eine stete Orientierungshilfe \n bietet. Auch die Vereinfachung Ihres Anzeigenmanagements kann so realisi\n ert werden. Zeitgleich schaffen Sie die Voraussetzungen für ein BMS.\\n\\n\n \\nKanaleo Update – Verbesserung der Bewerbererfahrungen auf Grundlage vo\n n aktuellen Studien\\nAls Ergänzung zum bereits vorhandenen verhaltensori\n entierten Fragebogen zu Bewerberrückläufen stellen wir Ihnen den Anschlu\n ssfragebogen zur Candidate Experience vor. Der aktuelle Forschungsstand \n konnte zeigen\\, dass 80% der Bewerber mit bis zu 7 Personen (Kollegen\\, \n Freunde\\, Bekannte) über ihre Bewerbererfahrungen bewertend sprechen. De\n r Anschlussfragebogen zur Candidate Experience erlaubt es Ihnen\\, die Be\n werbungserfahrung in Ihrem Unternehmen zu optimieren. Sie erhalten syste\n matisch Einblicke\\, welche Etappen Ihres Bewerbungsprozesses von den Kan\n didaten positiv wahrgenommen wurden und welche verbesserungswürdig sind.\n  Außerdem können Sie sich mit anderen Unternehmen Ihrer Branche vergleic\n hen. \\n\\n\\nZweiter Workshop zum Bewerbermanagement des Empfehlungsbundes\n  – Internes Bewerbermanagement \\nIn unserem Workshop wollen wir mit Ihne\n n die Anforderungen besprechen\\, die bei der internen Steuerung eines Be\n werbungseingangs zu berücksichtigen sind. Dabei diskutieren wir gemeinsa\n m mit Ihnen\\, wie die Koordination und Bewertung von Bewerbungen und der\n  beteiligten Rollen (Zugriffsrechte auf sensible Daten) in Ihrem Bewerbe\n rmanagement gestaltet werden können. Bringen Sie sich hier ein\\, damit d\n ie Anforderungen eines rechtssicheren Bewerbermanagements den betrieblic\n hen Abläufen Ihres Unternehmens gerecht werden. Sofern Ihr Bewerbermanag\n ement durch ein BMS integriert ist\\, lernen Sie hier Best Practices kenn\n en\\, um die Prozessqualität Ihres bestehenden BMS zu bewerten.\\n\nURL:https://www.empfehlungsbund.de/events/35\nSUMMARY:Empfehlungsbund Community Workshops in Chemnitz\\, Leipzig\\, Münch\n en und Berlin\nORGANIZER;CN=BE-terna GmbH / Empfehlungsbund.de:https://www.empfehlungsbu\n nd.de/events/35\nATTACH:https://www.empfehlungsbund.de/events/35\nLOCATION:BE-terna GmbH\\, Bornaer Straße 19\\, 04288 Leipzig (Liebertwolkwi\n tz)\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003ewir laden Sie herzlich zu uns\n eren \u003cstrong\u003eEmpfehlungsbund Community Workshops in Chemnitz, Leipzig, M\n ünchen und Berlin\u003c/strong\u003e zur aktiven Vernetzung mit den Mitgliedern de\n s Empfehlungsbundes zum Thema Personalgewinnung ein. Tauschen Sie sich h\n ier über die aktuell effektivsten Kanäle zur Fachkräftegewinnung in Ihre\n r Region mit den Experten aus. Sowohl am 26. als auch am 27. September 2\n 017 veranstalten wir die Plattform für Geschäftsführer und Personalmanag\n er mit Fachkräftebedarf. Unsere Experten stellen Ihnen das gesamte Fachw\n issen des \u003ca href=\"http://www.empfehlungsbund.de/arbeitgeber\"\u003eEmpfehlung\n sbundes\u003c/a\u003e, der Nr.1 Spezial-Jobbörse 2017, aus erster Hand zur Verfügu\n ng.\u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter anderem die Sicherstellung des\u003cstr\n ong\u003e AGG sowie Datenschutz und Prozesseffizienz von Bewerbermanagementsy\n stemen (BMS)\u003c/strong\u003e. Außerdem stellen wir Ihnen die systematische \u003cstr\n ong\u003eVerbesserung der Candidate Experience auf Grundlage von aktuellen St\n udien\u003c/strong\u003e vor. Profitieren Sie vom Erfahrungsschatz unserer Mitglie\n der und bringen Sie Ihre Expertise mit ins Gespräch. Wie gestalten Sie a\n ls Arbeitgeber Ihre Personalgewinnung effektiv?\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Te\n ilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltun\n g aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebn\n d.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effiz\n ienten Personalgewinnung insbesondere für Informatiker und Ingenieure in\n  Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eExternes Bewerbermanagement \n – So gestalten Sie ein Standard-Nutzerverhalten Ihrer Bewerber\u0026nbsp; \u003c/s\n trong\u003e\u003cbr\u003eAuf Basis der Ergebnisse des Workshops vom Mai 2017 werden wir\n  Ihnen erste Entwicklungen für ein professionelles Bewerbermanagement vo\n rstellen. Anhand kleinerer Module demonstrieren wir Ihnen Einblicke in d\n as Nutzerverhalten des Bewerbers. Wir zeigen, wie ein \u003cstrong\u003eBewerbungs\n formular und ein Stellenanzeigen-Widget auf der Karrierewebseite\u003c/strong\n \u003e den Eingangskanal für Bewerbungen vereinheitlicht und damit dem Bewerb\n er eine stete Orientierungshilfe bietet. Auch die \u003cstrong\u003eVereinfachung \n Ihres Anzeigenmanagements \u003c/strong\u003ekann so realisiert werden. Zeitgleich\n  schaffen Sie die Voraussetzungen für ein BMS.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\n \u003eKanaleo Update – Verbesserung der Bewerbererfahrungen auf Grundlage von\n  aktuellen Studien\u003c/strong\u003e\u003cbr\u003eAls Ergänzung zum bereits vorhandenen ver\n haltensorientierten Fragebogen zu Bewerberrückläufen stellen wir Ihnen d\n en \u003cstrong\u003eAnschlussfragebogen zur Candidate Experience \u003c/strong\u003evor. De\n r aktuelle Forschungsstand konnte zeigen, dass \u003cstrong\u003e80% der Bewerber \n mit bis zu 7 Personen (Kollegen, Freunde, Bekannte)\u003c/strong\u003e über ihre B\n ewerbererfahrungen bewertend sprechen. Der Anschlussfragebogen zur Candi\n date Experience erlaubt es Ihnen, die Bewerbungserfahrung in Ihrem Unter\n nehmen zu optimieren. Sie erhalten systematisch Einblicke, welche Etappe\n n Ihres Bewerbungsprozesses von den Kandidaten positiv wahrgenommen wurd\n en und welche verbesserungswürdig sind. Außerdem können Sie sich \u003cstrong\n \u003emit anderen Unternehmen Ihrer Branche vergleichen\u003c/strong\u003e.\u0026nbsp;\u003cbr\u003e\u003cb\n r\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eZweiter Workshop zum Bewerbermanagement des Empfehl\n ungsbundes – Internes Bewerbermanagement \u003c/strong\u003e\u003cbr\u003eIn unserem Worksho\n p wollen wir mit Ihnen die Anforderungen besprechen, die bei der interne\n n Steuerung eines Bewerbungseingangs zu berücksichtigen sind. Dabei disk\n utieren wir gemeinsam mit Ihnen, wie \u003cstrong\u003edie Koordination und Bewert\n ung von Bewerbungen und der beteiligten Rollen\u003c/strong\u003e (Zugriffsrechte \n auf sensible Daten) in Ihrem Bewerbermanagement gestaltet werden können.\n  Bringen Sie sich hier ein, damit die Anforderungen eines \u003cstrong\u003erechts\n sicheren Bewerbermanagements \u003c/strong\u003eden betrieblichen Abläufen Ihres U\n nternehmens gerecht werden. Sofern Ihr Bewerbermanagement durch ein BMS \n integriert ist, \u003cstrong\u003elernen Sie hier Best Practices kennen, um die Pr\n ozessqualität Ihres bestehenden BMS zu bewerten\u003c/strong\u003e.\u003c/div\u003e\u003c/BODY\u003e\u003c/\n HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210876,"Bezeichnung":"BE-terna GmbH","Kommentar":"Bei Änderung zum Profil bitte immer mit Frau Dornick absprechen\r\n\r\nZusammenschluss von BEDAV und terna zu BE-terna Gruppe mit 340 MA, Leipzig aber eigenständige GmbH","Typ":10,"Nutzername":"be-terna","Website":"https://www.be-terna.com/careers","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-12T14:15:51.000+02:00"}},{"id":80,"display_line":"27.09.2017 - 15 bis 18:00 Uhr Berlin - Emp­feh­lungs­bund Com­mu­ni­ty Work­shop in Ber­lin - Gastgeber: Fastlane Automotive GmbH","subtitle":"Emp­feh­lungs­bund Com­mu­ni­ty Work­shop in Ber­lin","city":"Berlin","start":"2017-09-27T15:00:00.000+02:00","finish":"2017-09-27T18:00:00.000+02:00","address":"Stralauer Platz 33/34, 10243 Berlin","event_host":"Fastlane Automotive GmbH","lat":52.509,"lon":13.4327,"community_training_id":null,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20170326T020000\nRDATE:20170326T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20170927T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20170927T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:wir laden Sie herzlich zu unseren Empfehlungsbund Community W\n orkshops in Chemnitz\\, Leipzig\\, München und Berlin zur aktiven Vernetzu\n ng mit den Mitgliedern des Empfehlungsbundes zum Thema Personalgewinnung\n  ein. Tauschen Sie sich hier über die aktuell effektivsten Kanäle zur Fa\n chkräftegewinnung in Ihrer Region mit den Experten aus. Sowohl am 26. al\n s auch am 27. September 2017 veranstalten wir die Plattform für Geschäft\n sführer und Personalmanager mit Fachkräftebedarf. Unsere Experten stelle\n n Ihnen das gesamte Fachwissen des Empfehlungsbundes\\, der Nr.1 Spezial-\n Jobbörse 2017\\, aus erster Hand zur Verfügung.\\n\\nAuf der Agenda steht u\n nter anderem die Sicherstellung des AGG sowie Datenschutz und Prozesseff\n izienz von Bewerbermanagementsystemen (BMS). Außerdem stellen wir Ihnen \n die systematische Verbesserung der Candidate Experience auf Grundlage vo\n n aktuellen Studien vor. Profitieren Sie vom Erfahrungsschatz unserer Mi\n tglieder und bringen Sie Ihre Expertise mit ins Gespräch. Wie gestalten \n Sie als Arbeitgeber Ihre Personalgewinnung effektiv?\\n\\n\\nDie Teilnahme \n ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus or\n ganisatorischen Gründen erforderlich.\\nDer Empfehlungsbund ist das führe\n nde Netzwerk zur effizienten Personalgewinnung insbesondere für Informat\n iker und Ingenieure in Deutschland.\\n\\n\\n\\nExternes Bewerbermanagement –\n  So gestalten Sie ein Standard-Nutzerverhalten Ihrer Bewerber  \\nAuf Bas\n is der Ergebnisse des Workshops vom Mai 2017 werden wir Ihnen erste Entw\n icklungen für ein professionelles Bewerbermanagement vorstellen. Anhand \n kleinerer Module demonstrieren wir Ihnen Einblicke in das Nutzerverhalte\n n des Bewerbers. Wir zeigen\\, wie ein Bewerbungsformular und ein Stellen\n anzeigen-Widget auf der Karrierewebseite den Eingangskanal für Bewerbung\n en vereinheitlicht und damit dem Bewerber eine stete Orientierungshilfe \n bietet. Auch die Vereinfachung Ihres Anzeigenmanagements kann so realisi\n ert werden. Zeitgleich schaffen Sie die Voraussetzungen für ein BMS.\\n\\n\n \\nKanaleo Update – Verbesserung der Bewerbererfahrungen auf Grundlage vo\n n aktuellen Studien\\nAls Ergänzung zum bereits vorhandenen verhaltensori\n entierten Fragebogen zu Bewerberrückläufen stellen wir Ihnen den Anschlu\n ssfragebogen zur Candidate Experience vor. Der aktuelle Forschungsstand \n konnte zeigen\\, dass 80% der Bewerber mit bis zu 7 Personen (Kollegen\\, \n Freunde\\, Bekannte) über ihre Bewerbererfahrungen bewertend sprechen. De\n r Anschlussfragebogen zur Candidate Experience erlaubt es Ihnen\\, die Be\n werbungserfahrung in Ihrem Unternehmen zu optimieren. Sie erhalten syste\n matisch Einblicke\\, welche Etappen Ihres Bewerbungsprozesses von den Kan\n didaten positiv wahrgenommen wurden und welche verbesserungswürdig sind.\n  Außerdem können Sie sich mit anderen Unternehmen Ihrer Branche vergleic\n hen. \\n\\n\\nZweiter Workshop zum Bewerbermanagement des Empfehlungsbundes\n  – Internes Bewerbermanagement \\nIn unserem Workshop wollen wir mit Ihne\n n die Anforderungen besprechen\\, die bei der internen Steuerung eines Be\n werbungseingangs zu berücksichtigen sind. Dabei diskutieren wir gemeinsa\n m mit Ihnen\\, wie die Koordination und Bewertung von Bewerbungen und der\n  beteiligten Rollen (Zugriffsrechte auf sensible Daten) in Ihrem Bewerbe\n rmanagement gestaltet werden können. Bringen Sie sich hier ein\\, damit d\n ie Anforderungen eines rechtssicheren Bewerbermanagements den betrieblic\n hen Abläufen Ihres Unternehmens gerecht werden. Sofern Ihr Bewerbermanag\n ement durch ein BMS integriert ist\\, lernen Sie hier Best Practices kenn\n en\\, um die Prozessqualität Ihres bestehenden BMS zu bewerten.\\n\nURL:https://www.empfehlungsbund.de/events/35\nSUMMARY:Empfehlungsbund Community Workshops in Chemnitz\\, Leipzig\\, Münch\n en und Berlin\nORGANIZER;CN=Fastlane Automotive GmbH / Empfehlungsbund.de:https://www.em\n pfehlungsbund.de/events/35\nATTACH:https://www.empfehlungsbund.de/events/35\nLOCATION:Fastlane Automotive GmbH\\, Stralauer Platz 33/34\\, 10243 Berlin\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003ewir laden Sie herzlich zu uns\n eren \u003cstrong\u003eEmpfehlungsbund Community Workshops in Chemnitz, Leipzig, M\n ünchen und Berlin\u003c/strong\u003e zur aktiven Vernetzung mit den Mitgliedern de\n s Empfehlungsbundes zum Thema Personalgewinnung ein. Tauschen Sie sich h\n ier über die aktuell effektivsten Kanäle zur Fachkräftegewinnung in Ihre\n r Region mit den Experten aus. Sowohl am 26. als auch am 27. September 2\n 017 veranstalten wir die Plattform für Geschäftsführer und Personalmanag\n er mit Fachkräftebedarf. Unsere Experten stellen Ihnen das gesamte Fachw\n issen des \u003ca href=\"http://www.empfehlungsbund.de/arbeitgeber\"\u003eEmpfehlung\n sbundes\u003c/a\u003e, der Nr.1 Spezial-Jobbörse 2017, aus erster Hand zur Verfügu\n ng.\u003cbr\u003e\u003cbr\u003eAuf der Agenda steht unter anderem die Sicherstellung des\u003cstr\n ong\u003e AGG sowie Datenschutz und Prozesseffizienz von Bewerbermanagementsy\n stemen (BMS)\u003c/strong\u003e. Außerdem stellen wir Ihnen die systematische \u003cstr\n ong\u003eVerbesserung der Candidate Experience auf Grundlage von aktuellen St\n udien\u003c/strong\u003e vor. Profitieren Sie vom Erfahrungsschatz unserer Mitglie\n der und bringen Sie Ihre Expertise mit ins Gespräch. Wie gestalten Sie a\n ls Arbeitgeber Ihre Personalgewinnung effektiv?\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Te\n ilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltun\n g aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003ca href=\"http://www.ebn\n d.de/mediadaten\"\u003eDer Empfehlungsbund ist das führende Netzwerk zur effiz\n ienten Personalgewinnung insbesondere für Informatiker und Ingenieure in\n  Deutschland.\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eExternes Bewerbermanagement \n – So gestalten Sie ein Standard-Nutzerverhalten Ihrer Bewerber\u0026nbsp; \u003c/s\n trong\u003e\u003cbr\u003eAuf Basis der Ergebnisse des Workshops vom Mai 2017 werden wir\n  Ihnen erste Entwicklungen für ein professionelles Bewerbermanagement vo\n rstellen. Anhand kleinerer Module demonstrieren wir Ihnen Einblicke in d\n as Nutzerverhalten des Bewerbers. Wir zeigen, wie ein \u003cstrong\u003eBewerbungs\n formular und ein Stellenanzeigen-Widget auf der Karrierewebseite\u003c/strong\n \u003e den Eingangskanal für Bewerbungen vereinheitlicht und damit dem Bewerb\n er eine stete Orientierungshilfe bietet. Auch die \u003cstrong\u003eVereinfachung \n Ihres Anzeigenmanagements \u003c/strong\u003ekann so realisiert werden. Zeitgleich\n  schaffen Sie die Voraussetzungen für ein BMS.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\n \u003eKanaleo Update – Verbesserung der Bewerbererfahrungen auf Grundlage von\n  aktuellen Studien\u003c/strong\u003e\u003cbr\u003eAls Ergänzung zum bereits vorhandenen ver\n haltensorientierten Fragebogen zu Bewerberrückläufen stellen wir Ihnen d\n en \u003cstrong\u003eAnschlussfragebogen zur Candidate Experience \u003c/strong\u003evor. De\n r aktuelle Forschungsstand konnte zeigen, dass \u003cstrong\u003e80% der Bewerber \n mit bis zu 7 Personen (Kollegen, Freunde, Bekannte)\u003c/strong\u003e über ihre B\n ewerbererfahrungen bewertend sprechen. Der Anschlussfragebogen zur Candi\n date Experience erlaubt es Ihnen, die Bewerbungserfahrung in Ihrem Unter\n nehmen zu optimieren. Sie erhalten systematisch Einblicke, welche Etappe\n n Ihres Bewerbungsprozesses von den Kandidaten positiv wahrgenommen wurd\n en und welche verbesserungswürdig sind. Außerdem können Sie sich \u003cstrong\n \u003emit anderen Unternehmen Ihrer Branche vergleichen\u003c/strong\u003e.\u0026nbsp;\u003cbr\u003e\u003cb\n r\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eZweiter Workshop zum Bewerbermanagement des Empfehl\n ungsbundes – Internes Bewerbermanagement \u003c/strong\u003e\u003cbr\u003eIn unserem Worksho\n p wollen wir mit Ihnen die Anforderungen besprechen, die bei der interne\n n Steuerung eines Bewerbungseingangs zu berücksichtigen sind. Dabei disk\n utieren wir gemeinsam mit Ihnen, wie \u003cstrong\u003edie Koordination und Bewert\n ung von Bewerbungen und der beteiligten Rollen\u003c/strong\u003e (Zugriffsrechte \n auf sensible Daten) in Ihrem Bewerbermanagement gestaltet werden können.\n  Bringen Sie sich hier ein, damit die Anforderungen eines \u003cstrong\u003erechts\n sicheren Bewerbermanagements \u003c/strong\u003eden betrieblichen Abläufen Ihres U\n nternehmens gerecht werden. Sofern Ihr Bewerbermanagement durch ein BMS \n integriert ist, \u003cstrong\u003elernen Sie hier Best Practices kennen, um die Pr\n ozessqualität Ihres bestehenden BMS zu bewerten\u003c/strong\u003e.\u003c/div\u003e\u003c/BODY\u003e\u003c/\n HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9213030,"Bezeichnung":"Fastlane Automotive GmbH","Kommentar":"","Typ":10,"Nutzername":"fastlane","Website":"https://www.fastlane-automotive.de/jobs/","created_at":"2016-07-27T16:06:32.000+02:00","updated_at":"2021-06-18T10:59:28.000+02:00"}}]},{"id":34,"name":"oxfp_17","hashtag":"ofxp","title":"Offenes Expertenforum Personalmanagement in Dresden/Leipzig","teaser":"","teaser_hrfilter":"","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eDas offene Expertenforum Personalmanagement lädt Sie recht herzlich zur aktiven Vernetzung und zum Wissensaustausch rund um das Thema Personalgewinnung ein! Sowohl am 23. Mai in Dresden, als auch am 24. Mai in Leipzig veranstalten wir die Plattform für Geschäftsführer und Personalmanager mit Fachkräftebedarf aus der Region Mitteldeutschland und Sachsen. Wenn Sie Interesse an aktuellen Themen der Personalgewinnung und des Personalmarketings haben, dann stellt Ihnen das offene Expertenforum Personalmanagement das gesammelte Fachwissen des Empfehlungsbundes aus erster Hand zur Verfügung. Neben den Studien und Benchmarks zu relevanten Themen der Fachkräftegewinnung, präsentieren wir Ihnen neueste Trends technischer Innovationen und aktueller Methoden moderner Personalgewinnung. Profitieren Sie vom Erfahrungsschatz unserer Mitglieder und bringen Sie Ihre Expertise mit ins Gespräch; Wie gestalten Sie eine nachhaltige Steigerung Ihres Engagements als Arbeitgeber?\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWann: 23.05.2017 15.00 – 18.00 Uhr\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eDas sind unsere Themen\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eEntwicklungen zu Coworkr.de aus dem Anforderungsworkshop im Januar\u003cbr\u003e\u0026nbsp;Die Mitarbeiterempfehlung entpuppte sich als einer der leistungsfähigsten Recruitingkanäle im Methodenmix der Personalgewinnung. Mit Coworkr.de wollen wir unseren Mitgliedern eine Hilfestellung für eine erfolgreiche Mitarbeiter-werben-Mitarbeiter-Kampagne anbieten. In unseren Anforderungsworkshops des Januars 2017 haben wir gemeinsam mit den Teilnehmenden eine technische Checkliste erstellt, welche Funktionen Coworkr.de unbedingt mitbringen sollte. Wir haben diese Checkliste nun umgesetzt und werden Ihnen unsere Anpassungen im Detail vorstellen.\u003c/li\u003e\u003cli\u003eOptimale Gehälter dank optimalem Überblick – Auswertung des Gehaltsbenchmarks 2017\u003cbr\u003e\u0026nbsp;In dieser Keynote möchten wir Ihnen die Auswertungsergebnisse des Gehaltsbenchmarks für das Jahr 2017 vorstellen. Mit Jobwert.info veranlassen wir vom Empfehlungsbund innerhalb eines dreimonatigen Zeitraumes unsere jährliche Gehaltsvergleichserhebung. Die gewonnen Datensätze stammen ausschließlich aus den Lohnbuchhaltungen unserer teilnehmenden Unternehmen. Dank unserer Methode sind wir in der Lage einen Überblick tatsächlich gezahlter Gehälter zu liefern und sind somit nicht auf die üblichen unnachvollziehbaren Wichtungsverfahren angewiesen.\u003c/li\u003e\u003cli\u003eEinführungsworkshop zum neuen Bewerbermanagementsystem (BMS) des Empfehlungsbundes\u003cbr\u003e\u0026nbsp;Wir vom Empfehlungsbund möchten ein Bewerbermanagementsystem zur Verfügung stellen, das perfekt auf den Bedarf unserer Mitglieder abgestimmt ist. Um unser Ziel zu erreichen, führen wir einen Workshop mit dem Personalmanagement kleiner und mittelständischer Unternehmen durch. Gemeinsam mit Ihnen möchten wir das Anforderungsprofil eines BMS ausloten. Welche Funktionen muss ein BMS notwendig beherrschen um eine Hilfestellung für die Personalarbeit zu sein, was dagegen ist unnötiger Ballast und bürgt Risiken für Ihre Arbeit? In Zusammenarbeit mit unseren Expertenforum-Teilnehmern werden wir in diesem Workshop einen praktischen Gestaltungsplan für das BMS des Empfehlungsbundes entwickeln.\u003c/li\u003e\u003cli\u003eKanaleo.de – Bewerberrücklaufe richtig analysieren\u0026nbsp;\u003cbr\u003e\u0026nbsp;Durch unsere Überarbeitung des Kanaleo-Umfragebogens konnten wir die Bewerberrücklaufanalyse an den Standards heutiger empirischer Verhaltensforschung anpassen. In dieser Keynote möchten wir Ihnen unsere neueste Version des Kanaleo-Umfragebogens vorstellen. Wir sind überzeugt, die Irrtümer herkömmlicher Bewerbertrackingsysteme können durch Kanaleo vermieden werden. Wir werden Ihnen einen Einblick geben, was die gängigsten Fehler dieser Trackingsysteme sind und welche Vorteile verhaltensorientierte Fragebögen zur richtigen Evaluierung Ihrer Recruitingkanäle haben.\u003c/li\u003e\u003c/ul\u003e","agenda":"","start":"2017-05-23T15:00:00.000+02:00","finish":"2017-05-23T18:00:00.000+02:00","visible":true,"is_open_network":true,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/34/register","show_url":"https://www.empfehlungsbund.de/events/34","events":[{"id":69,"display_line":"23.05.2017 - 15 bis 18:00 Uhr Dresden - Offenes Expertenforum Personalmanagement in Dresden - Gastgeber: T-Systems Multimedia Solutions GmbH","subtitle":"Offenes Expertenforum Personalmanagement in Dresden","city":"Dresden","start":"2017-05-23T15:00:00.000+02:00","finish":"2017-05-23T18:00:00.000+02:00","address":"Riesaer Straße 5, 01129 Dresden","event_host":"T-Systems Multimedia Solutions GmbH","lat":51.0827,"lon":13.7256,"community_training_id":32,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20170326T020000\nRDATE:20170326T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20170523T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20170523T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:Das offene Expertenforum Personalmanagement lädt Sie recht he\n rzlich zur aktiven Vernetzung und zum Wissensaustausch rund um das Thema\n  Personalgewinnung ein! Sowohl am 23. Mai in Dresden\\, als auch am 24. M\n ai in Leipzig veranstalten wir die Plattform für Geschäftsführer und Per\n sonalmanager mit Fachkräftebedarf aus der Region Mitteldeutschland und S\n achsen. Wenn Sie Interesse an aktuellen Themen der Personalgewinnung und\n  des Personalmarketings haben\\, dann stellt Ihnen das offene Expertenfor\n um Personalmanagement das gesammelte Fachwissen des Empfehlungsbundes au\n s erster Hand zur Verfügung. Neben den Studien und Benchmarks zu relevan\n ten Themen der Fachkräftegewinnung\\, präsentieren wir Ihnen neueste Tren\n ds technischer Innovationen und aktueller Methoden moderner Personalgewi\n nnung. Profitieren Sie vom Erfahrungsschatz unserer Mitglieder und bring\n en Sie Ihre Expertise mit ins Gespräch\\; Wie gestalten Sie eine nachhalt\n ige Steigerung Ihres Engagements als Arbeitgeber?\\n\\n\\nDie Teilnahme ist\n  kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organ\n isatorischen Gründen erforderlich.\\n\\n\\nWann: 23.05.2017 15.00 – 18.00 U\n hr\\n\\n\\nDas sind unsere Themen\\n\\n\\n* Entwicklungen zu Coworkr.de aus de\n m Anforderungsworkshop im Januar\\n Die Mitarbeiterempfehlung entpuppte s\n ich als einer der leistungsfähigsten Recruitingkanäle im Methodenmix der\n  Personalgewinnung. Mit Coworkr.de wollen wir unseren Mitgliedern eine H\n ilfestellung für eine erfolgreiche Mitarbeiter-werben-Mitarbeiter-Kampag\n ne anbieten. In unseren Anforderungsworkshops des Januars 2017 haben wir\n  gemeinsam mit den Teilnehmenden eine technische Checkliste erstellt\\, w\n elche Funktionen Coworkr.de unbedingt mitbringen sollte. Wir haben diese\n  Checkliste nun umgesetzt und werden Ihnen unsere Anpassungen im Detail \n vorstellen.* Optimale Gehälter dank optimalem Überblick – Auswertung des\n  Gehaltsbenchmarks 2017\\n In dieser Keynote möchten wir Ihnen die Auswer\n tungsergebnisse des Gehaltsbenchmarks für das Jahr 2017 vorstellen. Mit \n Jobwert.info veranlassen wir vom Empfehlungsbund innerhalb eines dreimon\n atigen Zeitraumes unsere jährliche Gehaltsvergleichserhebung. Die gewonn\n en Datensätze stammen ausschließlich aus den Lohnbuchhaltungen unserer t\n eilnehmenden Unternehmen. Dank unserer Methode sind wir in der Lage eine\n n Überblick tatsächlich gezahlter Gehälter zu liefern und sind somit nic\n ht auf die üblichen unnachvollziehbaren Wichtungsverfahren angewiesen.* \n Einführungsworkshop zum neuen Bewerbermanagementsystem (BMS) des Empfehl\n ungsbundes\\n Wir vom Empfehlungsbund möchten ein Bewerbermanagementsyste\n m zur Verfügung stellen\\, das perfekt auf den Bedarf unserer Mitglieder \n abgestimmt ist. Um unser Ziel zu erreichen\\, führen wir einen Workshop m\n it dem Personalmanagement kleiner und mittelständischer Unternehmen durc\n h. Gemeinsam mit Ihnen möchten wir das Anforderungsprofil eines BMS ausl\n oten. Welche Funktionen muss ein BMS notwendig beherrschen um eine Hilfe\n stellung für die Personalarbeit zu sein\\, was dagegen ist unnötiger Ball\n ast und bürgt Risiken für Ihre Arbeit? In Zusammenarbeit mit unseren Exp\n ertenforum-Teilnehmern werden wir in diesem Workshop einen praktischen G\n estaltungsplan für das BMS des Empfehlungsbundes entwickeln.* Kanaleo.de\n  – Bewerberrücklaufe richtig analysieren \\n Durch unsere Überarbeitung d\n es Kanaleo-Umfragebogens konnten wir die Bewerberrücklaufanalyse an den \n Standards heutiger empirischer Verhaltensforschung anpassen. In dieser K\n eynote möchten wir Ihnen unsere neueste Version des Kanaleo-Umfragebogen\n s vorstellen. Wir sind überzeugt\\, die Irrtümer herkömmlicher Bewerbertr\n ackingsysteme können durch Kanaleo vermieden werden. Wir werden Ihnen ei\n nen Einblick geben\\, was die gängigsten Fehler dieser Trackingsysteme si\n nd und welche Vorteile verhaltensorientierte Fragebögen zur richtigen Ev\n aluierung Ihrer Recruitingkanäle haben.\\n\nURL:https://www.empfehlungsbund.de/events/34\nSUMMARY:Offenes Expertenforum Personalmanagement in Dresden/Leipzig\nORGANIZER;CN=T-Systems Multimedia Solutions GmbH / Empfehlungsbund.de:htt\n ps://www.empfehlungsbund.de/events/34\nATTACH:https://www.empfehlungsbund.de/events/34\nLOCATION:T-Systems Multimedia Solutions GmbH\\, Riesaer Straße 5\\, 01129 D\n resden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDas offene Expertenforum Pers\n onalmanagement lädt Sie recht herzlich zur aktiven Vernetzung und zum Wi\n ssensaustausch rund um das Thema Personalgewinnung ein! Sowohl am 23. Ma\n i in Dresden, als auch am 24. Mai in Leipzig veranstalten wir die Plattf\n orm für Geschäftsführer und Personalmanager mit Fachkräftebedarf aus der\n  Region Mitteldeutschland und Sachsen. Wenn Sie Interesse an aktuellen T\n hemen der Personalgewinnung und des Personalmarketings haben, dann stell\n t Ihnen das offene Expertenforum Personalmanagement das gesammelte Fachw\n issen des Empfehlungsbundes aus erster Hand zur Verfügung. Neben den Stu\n dien und Benchmarks zu relevanten Themen der Fachkräftegewinnung, präsen\n tieren wir Ihnen neueste Trends technischer Innovationen und aktueller M\n ethoden moderner Personalgewinnung. Profitieren Sie vom Erfahrungsschatz\n  unserer Mitglieder und bringen Sie Ihre Expertise mit ins Gespräch; Wie\n  gestalten Sie eine nachhaltige Steigerung Ihres Engagements als Arbeitg\n eber?\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine ku\n rze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderli\n ch.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWann: 23.05.2017 15.00 – 18.00 Uhr\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cd\n iv\u003e\u003cstrong\u003eDas sind unsere Themen\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eEntwickl\n ungen zu Coworkr.de aus dem Anforderungsworkshop im Januar\u003cbr\u003e\u0026nbsp;Die \n Mitarbeiterempfehlung entpuppte sich als einer der leistungsfähigsten Re\n cruitingkanäle im Methodenmix der Personalgewinnung. Mit Coworkr.de woll\n en wir unseren Mitgliedern eine Hilfestellung für eine erfolgreiche Mita\n rbeiter-werben-Mitarbeiter-Kampagne anbieten. In unseren Anforderungswor\n kshops des Januars 2017 haben wir gemeinsam mit den Teilnehmenden eine t\n echnische Checkliste erstellt, welche Funktionen Coworkr.de unbedingt mi\n tbringen sollte. Wir haben diese Checkliste nun umgesetzt und werden Ihn\n en unsere Anpassungen im Detail vorstellen.\u003c/li\u003e\u003cli\u003eOptimale Gehälter da\n nk optimalem Überblick – Auswertung des Gehaltsbenchmarks 2017\u003cbr\u003e\u0026nbsp;\n In dieser Keynote möchten wir Ihnen die Auswertungsergebnisse des Gehalt\n sbenchmarks für das Jahr 2017 vorstellen. Mit Jobwert.info veranlassen w\n ir vom Empfehlungsbund innerhalb eines dreimonatigen Zeitraumes unsere j\n ährliche Gehaltsvergleichserhebung. Die gewonnen Datensätze stammen auss\n chließlich aus den Lohnbuchhaltungen unserer teilnehmenden Unternehmen. \n Dank unserer Methode sind wir in der Lage einen Überblick tatsächlich ge\n zahlter Gehälter zu liefern und sind somit nicht auf die üblichen unnach\n vollziehbaren Wichtungsverfahren angewiesen.\u003c/li\u003e\u003cli\u003eEinführungsworkshop\n  zum neuen Bewerbermanagementsystem (BMS) des Empfehlungsbundes\u003cbr\u003e\u0026nbsp\n ;Wir vom Empfehlungsbund möchten ein Bewerbermanagementsystem zur Verfüg\n ung stellen, das perfekt auf den Bedarf unserer Mitglieder abgestimmt is\n t. Um unser Ziel zu erreichen, führen wir einen Workshop mit dem Persona\n lmanagement kleiner und mittelständischer Unternehmen durch. Gemeinsam m\n it Ihnen möchten wir das Anforderungsprofil eines BMS ausloten. Welche F\n unktionen muss ein BMS notwendig beherrschen um eine Hilfestellung für d\n ie Personalarbeit zu sein, was dagegen ist unnötiger Ballast und bürgt R\n isiken für Ihre Arbeit? In Zusammenarbeit mit unseren Expertenforum-Teil\n nehmern werden wir in diesem Workshop einen praktischen Gestaltungsplan \n für das BMS des Empfehlungsbundes entwickeln.\u003c/li\u003e\u003cli\u003eKanaleo.de – Bewer\n berrücklaufe richtig analysieren\u0026nbsp;\u003cbr\u003e\u0026nbsp;Durch unsere Überarbeitu\n ng des Kanaleo-Umfragebogens konnten wir die Bewerberrücklaufanalyse an \n den Standards heutiger empirischer Verhaltensforschung anpassen. In dies\n er Keynote möchten wir Ihnen unsere neueste Version des Kanaleo-Umfrageb\n ogens vorstellen. Wir sind überzeugt, die Irrtümer herkömmlicher Bewerbe\n rtrackingsysteme können durch Kanaleo vermieden werden. Wir werden Ihnen\n  einen Einblick geben, was die gängigsten Fehler dieser Trackingsysteme \n sind und welche Vorteile verhaltensorientierte Fragebögen zur richtigen \n Evaluierung Ihrer Recruitingkanäle haben.\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210013,"Bezeichnung":"T-Systems Multimedia Solutions GmbH","Kommentar":"Rechnung per Post zuschicken.\r\n\r\n","Typ":10,"Nutzername":"tsystemsmms","Website":"https://www.t-systems.com/de/en","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-09-30T10:38:54.000+02:00"}},{"id":70,"display_line":"24.05.2017 - 15 bis 18:00 Uhr Leipzig - Offenes Expertenforum Personalmanagement in Leipzig - Gastgeber: Aufbauwerk Region Leipzig GmbH","subtitle":"Offenes Expertenforum Personalmanagement in Leipzig","city":"Leipzig","start":"2017-05-24T15:00:00.000+02:00","finish":"2017-05-24T18:00:00.000+02:00","address":"Otto-Schill-Straße 1, 04109 Leipzig","event_host":"Aufbauwerk Region Leipzig GmbH","lat":51.3381,"lon":12.3704,"community_training_id":33,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20170326T020000\nRDATE:20170326T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20170524T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20170524T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:Das offene Expertenforum Personalmanagement lädt Sie recht he\n rzlich zur aktiven Vernetzung und zum Wissensaustausch rund um das Thema\n  Personalgewinnung ein! Sowohl am 23. Mai in Dresden\\, als auch am 24. M\n ai in Leipzig veranstalten wir die Plattform für Geschäftsführer und Per\n sonalmanager mit Fachkräftebedarf aus der Region Mitteldeutschland und S\n achsen. Wenn Sie Interesse an aktuellen Themen der Personalgewinnung und\n  des Personalmarketings haben\\, dann stellt Ihnen das offene Expertenfor\n um Personalmanagement das gesammelte Fachwissen des Empfehlungsbundes au\n s erster Hand zur Verfügung. Neben den Studien und Benchmarks zu relevan\n ten Themen der Fachkräftegewinnung\\, präsentieren wir Ihnen neueste Tren\n ds technischer Innovationen und aktueller Methoden moderner Personalgewi\n nnung. Profitieren Sie vom Erfahrungsschatz unserer Mitglieder und bring\n en Sie Ihre Expertise mit ins Gespräch\\; Wie gestalten Sie eine nachhalt\n ige Steigerung Ihres Engagements als Arbeitgeber?\\n\\n\\nDie Teilnahme ist\n  kostenfrei. Jedoch ist eine kurze Anmeldung zur Freischaltung aus organ\n isatorischen Gründen erforderlich.\\n\\n\\nWann: 23.05.2017 15.00 – 18.00 U\n hr\\n\\n\\nDas sind unsere Themen\\n\\n\\n* Entwicklungen zu Coworkr.de aus de\n m Anforderungsworkshop im Januar\\n Die Mitarbeiterempfehlung entpuppte s\n ich als einer der leistungsfähigsten Recruitingkanäle im Methodenmix der\n  Personalgewinnung. Mit Coworkr.de wollen wir unseren Mitgliedern eine H\n ilfestellung für eine erfolgreiche Mitarbeiter-werben-Mitarbeiter-Kampag\n ne anbieten. In unseren Anforderungsworkshops des Januars 2017 haben wir\n  gemeinsam mit den Teilnehmenden eine technische Checkliste erstellt\\, w\n elche Funktionen Coworkr.de unbedingt mitbringen sollte. Wir haben diese\n  Checkliste nun umgesetzt und werden Ihnen unsere Anpassungen im Detail \n vorstellen.* Optimale Gehälter dank optimalem Überblick – Auswertung des\n  Gehaltsbenchmarks 2017\\n In dieser Keynote möchten wir Ihnen die Auswer\n tungsergebnisse des Gehaltsbenchmarks für das Jahr 2017 vorstellen. Mit \n Jobwert.info veranlassen wir vom Empfehlungsbund innerhalb eines dreimon\n atigen Zeitraumes unsere jährliche Gehaltsvergleichserhebung. Die gewonn\n en Datensätze stammen ausschließlich aus den Lohnbuchhaltungen unserer t\n eilnehmenden Unternehmen. Dank unserer Methode sind wir in der Lage eine\n n Überblick tatsächlich gezahlter Gehälter zu liefern und sind somit nic\n ht auf die üblichen unnachvollziehbaren Wichtungsverfahren angewiesen.* \n Einführungsworkshop zum neuen Bewerbermanagementsystem (BMS) des Empfehl\n ungsbundes\\n Wir vom Empfehlungsbund möchten ein Bewerbermanagementsyste\n m zur Verfügung stellen\\, das perfekt auf den Bedarf unserer Mitglieder \n abgestimmt ist. Um unser Ziel zu erreichen\\, führen wir einen Workshop m\n it dem Personalmanagement kleiner und mittelständischer Unternehmen durc\n h. Gemeinsam mit Ihnen möchten wir das Anforderungsprofil eines BMS ausl\n oten. Welche Funktionen muss ein BMS notwendig beherrschen um eine Hilfe\n stellung für die Personalarbeit zu sein\\, was dagegen ist unnötiger Ball\n ast und bürgt Risiken für Ihre Arbeit? In Zusammenarbeit mit unseren Exp\n ertenforum-Teilnehmern werden wir in diesem Workshop einen praktischen G\n estaltungsplan für das BMS des Empfehlungsbundes entwickeln.* Kanaleo.de\n  – Bewerberrücklaufe richtig analysieren \\n Durch unsere Überarbeitung d\n es Kanaleo-Umfragebogens konnten wir die Bewerberrücklaufanalyse an den \n Standards heutiger empirischer Verhaltensforschung anpassen. In dieser K\n eynote möchten wir Ihnen unsere neueste Version des Kanaleo-Umfragebogen\n s vorstellen. Wir sind überzeugt\\, die Irrtümer herkömmlicher Bewerbertr\n ackingsysteme können durch Kanaleo vermieden werden. Wir werden Ihnen ei\n nen Einblick geben\\, was die gängigsten Fehler dieser Trackingsysteme si\n nd und welche Vorteile verhaltensorientierte Fragebögen zur richtigen Ev\n aluierung Ihrer Recruitingkanäle haben.\\n\nURL:https://www.empfehlungsbund.de/events/34\nSUMMARY:Offenes Expertenforum Personalmanagement in Dresden/Leipzig\nORGANIZER;CN=Aufbauwerk Region Leipzig GmbH / Empfehlungsbund.de:https://\n www.empfehlungsbund.de/events/34\nATTACH:https://www.empfehlungsbund.de/events/34\nLOCATION:Aufbauwerk Region Leipzig GmbH\\, Otto-Schill-Straße 1\\, 04109 Le\n ipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eDas offene Expertenforum Pers\n onalmanagement lädt Sie recht herzlich zur aktiven Vernetzung und zum Wi\n ssensaustausch rund um das Thema Personalgewinnung ein! Sowohl am 23. Ma\n i in Dresden, als auch am 24. Mai in Leipzig veranstalten wir die Plattf\n orm für Geschäftsführer und Personalmanager mit Fachkräftebedarf aus der\n  Region Mitteldeutschland und Sachsen. Wenn Sie Interesse an aktuellen T\n hemen der Personalgewinnung und des Personalmarketings haben, dann stell\n t Ihnen das offene Expertenforum Personalmanagement das gesammelte Fachw\n issen des Empfehlungsbundes aus erster Hand zur Verfügung. Neben den Stu\n dien und Benchmarks zu relevanten Themen der Fachkräftegewinnung, präsen\n tieren wir Ihnen neueste Trends technischer Innovationen und aktueller M\n ethoden moderner Personalgewinnung. Profitieren Sie vom Erfahrungsschatz\n  unserer Mitglieder und bringen Sie Ihre Expertise mit ins Gespräch; Wie\n  gestalten Sie eine nachhaltige Steigerung Ihres Engagements als Arbeitg\n eber?\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eDie Teilnahme ist kostenfrei. Jedoch ist eine ku\n rze Anmeldung zur Freischaltung aus organisatorischen Gründen erforderli\n ch.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWann: 23.05.2017 15.00 – 18.00 Uhr\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cd\n iv\u003e\u003cstrong\u003eDas sind unsere Themen\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eEntwickl\n ungen zu Coworkr.de aus dem Anforderungsworkshop im Januar\u003cbr\u003e\u0026nbsp;Die \n Mitarbeiterempfehlung entpuppte sich als einer der leistungsfähigsten Re\n cruitingkanäle im Methodenmix der Personalgewinnung. Mit Coworkr.de woll\n en wir unseren Mitgliedern eine Hilfestellung für eine erfolgreiche Mita\n rbeiter-werben-Mitarbeiter-Kampagne anbieten. In unseren Anforderungswor\n kshops des Januars 2017 haben wir gemeinsam mit den Teilnehmenden eine t\n echnische Checkliste erstellt, welche Funktionen Coworkr.de unbedingt mi\n tbringen sollte. Wir haben diese Checkliste nun umgesetzt und werden Ihn\n en unsere Anpassungen im Detail vorstellen.\u003c/li\u003e\u003cli\u003eOptimale Gehälter da\n nk optimalem Überblick – Auswertung des Gehaltsbenchmarks 2017\u003cbr\u003e\u0026nbsp;\n In dieser Keynote möchten wir Ihnen die Auswertungsergebnisse des Gehalt\n sbenchmarks für das Jahr 2017 vorstellen. Mit Jobwert.info veranlassen w\n ir vom Empfehlungsbund innerhalb eines dreimonatigen Zeitraumes unsere j\n ährliche Gehaltsvergleichserhebung. Die gewonnen Datensätze stammen auss\n chließlich aus den Lohnbuchhaltungen unserer teilnehmenden Unternehmen. \n Dank unserer Methode sind wir in der Lage einen Überblick tatsächlich ge\n zahlter Gehälter zu liefern und sind somit nicht auf die üblichen unnach\n vollziehbaren Wichtungsverfahren angewiesen.\u003c/li\u003e\u003cli\u003eEinführungsworkshop\n  zum neuen Bewerbermanagementsystem (BMS) des Empfehlungsbundes\u003cbr\u003e\u0026nbsp\n ;Wir vom Empfehlungsbund möchten ein Bewerbermanagementsystem zur Verfüg\n ung stellen, das perfekt auf den Bedarf unserer Mitglieder abgestimmt is\n t. Um unser Ziel zu erreichen, führen wir einen Workshop mit dem Persona\n lmanagement kleiner und mittelständischer Unternehmen durch. Gemeinsam m\n it Ihnen möchten wir das Anforderungsprofil eines BMS ausloten. Welche F\n unktionen muss ein BMS notwendig beherrschen um eine Hilfestellung für d\n ie Personalarbeit zu sein, was dagegen ist unnötiger Ballast und bürgt R\n isiken für Ihre Arbeit? In Zusammenarbeit mit unseren Expertenforum-Teil\n nehmern werden wir in diesem Workshop einen praktischen Gestaltungsplan \n für das BMS des Empfehlungsbundes entwickeln.\u003c/li\u003e\u003cli\u003eKanaleo.de – Bewer\n berrücklaufe richtig analysieren\u0026nbsp;\u003cbr\u003e\u0026nbsp;Durch unsere Überarbeitu\n ng des Kanaleo-Umfragebogens konnten wir die Bewerberrücklaufanalyse an \n den Standards heutiger empirischer Verhaltensforschung anpassen. In dies\n er Keynote möchten wir Ihnen unsere neueste Version des Kanaleo-Umfrageb\n ogens vorstellen. Wir sind überzeugt, die Irrtümer herkömmlicher Bewerbe\n rtrackingsysteme können durch Kanaleo vermieden werden. Wir werden Ihnen\n  einen Einblick geben, was die gängigsten Fehler dieser Trackingsysteme \n sind und welche Vorteile verhaltensorientierte Fragebögen zur richtigen \n Evaluierung Ihrer Recruitingkanäle haben.\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9213076,"Bezeichnung":"Aufbauwerk Region Leipzig GmbH","Kommentar":"","Typ":10,"Nutzername":"aufbauwerkleipzig","Website":"","created_at":"2017-01-11T16:28:27.000+01:00","updated_at":"2021-06-18T10:59:29.000+02:00"}}]},{"id":33,"name":"oxfp2017","hashtag":"ofxp","title":"2. Expertenforum Personal München - Gewinnung von IT-Fachkräften in Bayern","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eUnser Forum bietet Ihnen eine Plattform zur Vernetzung und zum Wissensaustausch zu den aktuellsten Neuigkeiten des Personalmarketings und der Personalgewinnung. Und das gleich in Ihrer Nähe. In unseren regelmäßigen Expertenforen finden Geschäftsführer sowie Personaler mit IT-Fachkräftebedarf aus Bayern zueinander. Wir teilen unser Wissen über Themen, Tools und Trends in der Personalgewinnung untereinander. Gemeinsam bauen wir unser Know-How und unsere Expertise in der gekonnten Suche nach Informatikern, Softwareentwicklern, Beratern und Projektleiter weiter aus.\u003c/p\u003e\n\u003cp\u003eMachen Sie mit und profitieren Sie vom Expertenpool in Ihrer Region!\u003cbr /\u003e\nDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Registrierung und eine Freischaltung aus organisatorischen Gründen erforderlich.\u003c/p\u003e\n\u003cp\u003eWann: 16.02.2017 15.00 \u0026#8211; 18.00 Uhr\u003cbr /\u003e\nWo: CompuSafe Data Systems AG, Oetztaler Str. 18, 81373 München\u003c/p\u003e\n\u003cp\u003e\u003cb\u003eThemen:\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eEmpfehlungsbund.de oder 6.782 vermittelte IT-Fachkräfte ohne Provision \u0026#8211; Wie geht das?\u003c/li\u003e\n\t\u003cli\u003eCoworkr.de oder Wie erscheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialisten?\u003c/li\u003e\n\t\u003cli\u003eMittlr.de oder Wie unterstützen Sie Ihr Active Sourcing?\u003c/li\u003e\n\t\u003cli\u003eJobwert.info \u0026#8211; Optimale Gehälter dank optimalem Überblick \u0026#8211; Gehaltsbenchmarks 2017!\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2017-02-16T15:00:00.000+01:00","finish":"2017-02-16T18:00:00.000+01:00","visible":true,"is_open_network":true,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/33/register","show_url":"https://www.empfehlungsbund.de/events/33","events":[{"id":68,"display_line":"16.02.2017 - 15 bis 18:00 Uhr München - 2. Expertenforum Personal München - Gewinnung von IT-Fachkräften in Bayern - Gastgeber: CompuSafe Data Systems AG","subtitle":"2. Expertenforum Personal München - Gewinnung von IT-Fachkräften in Bayern","city":"München","start":"2017-02-16T15:00:00.000+01:00","finish":"2017-02-16T18:00:00.000+01:00","address":"Oetztaler Str. 18, 81373 München","event_host":"CompuSafe Data Systems AG","lat":48.1197,"lon":11.5308,"community_training_id":31,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20161030T030000\nRDATE:20161030T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20170216T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20170216T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:Unser Forum bietet Ihnen eine Plattform zur Vernetzung und zu\n m Wissensaustausch zu den aktuellsten Neuigkeiten des Personalmarketings\n  und der Personalgewinnung. Und das gleich in Ihrer Nähe. In unseren reg\n elmäßigen Expertenforen finden Geschäftsführer sowie Personaler mit IT-F\n achkräftebedarf aus Bayern zueinander. Wir teilen unser Wissen über Them\n en\\, Tools und Trends in der Personalgewinnung untereinander. Gemeinsam \n bauen wir unser Know-How und unsere Expertise in der gekonnten Suche nac\n h Informatikern\\, Softwareentwicklern\\, Beratern und Projektleiter weite\n r aus.\\nMachen Sie mit und profitieren Sie vom Expertenpool in Ihrer Reg\n ion!\\nDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Registrierung \n und eine Freischaltung aus organisatorischen Gründen erforderlich.\\nWann\n : 16.02.2017 15.00 – 18.00 Uhr\\nWo: CompuSafe Data Systems AG\\, Oetztale\n r Str. 18\\, 81373 München\\nThemen:\\n\\n\t* Empfehlungsbund.de oder 6.782 v\n ermittelte IT-Fachkräfte ohne Provision – Wie geht das?\\n\t* Coworkr.de o\n der Wie erscheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialiste\n n?\\n\t* Mittlr.de oder Wie unterstützen Sie Ihr Active Sourcing?\\n\t* Jobw\n ert.info – Optimale Gehälter dank optimalem Überblick – Gehaltsbenchmark\n s 2017!\\n\\n\nURL:https://www.empfehlungsbund.de/events/33\nSUMMARY:2. Expertenforum Personal München - Gewinnung von IT-Fachkräften \n in Bayern\nORGANIZER;CN=CompuSafe Data Systems AG / Empfehlungsbund.de:https://www.e\n mpfehlungsbund.de/events/33\nATTACH:https://www.empfehlungsbund.de/events/33\nLOCATION:CompuSafe Data Systems AG\\, Oetztaler Str. 18\\, 81373 München\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eUnser Forum bietet Ihnen eine P\n lattform zur Vernetzung und zum Wissensaustausch zu den aktuellsten Neui\n gkeiten des Personalmarketings und der Personalgewinnung. Und das gleich\n  in Ihrer Nähe. In unseren regelmäßigen Expertenforen finden Geschäftsfü\n hrer sowie Personaler mit IT-Fachkräftebedarf aus Bayern zueinander. Wir\n  teilen unser Wissen über Themen, Tools und Trends in der Personalgewinn\n ung untereinander. Gemeinsam bauen wir unser Know-How und unsere Experti\n se in der gekonnten Suche nach Informatikern, Softwareentwicklern, Berat\n ern und Projektleiter weiter aus.\u003c/p\u003e\u003cp\u003eMachen Sie mit und profitieren S\n ie vom Expertenpool in Ihrer Region!\u003cbr /\u003eDie Teilnahme ist kostenfrei. \n Jedoch ist eine kurze Registrierung und eine Freischaltung aus organisat\n orischen Gründen erforderlich.\u003c/p\u003e\u003cp\u003eWann: 16.02.2017 15.00 \u0026#8211; 18.0\n 0 Uhr\u003cbr /\u003eWo: CompuSafe Data Systems AG, Oetztaler Str. 18, 81373 Münch\n en\u003c/p\u003e\u003cp\u003e\u003cb\u003eThemen:\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eEmpfehlungsbund.de oder 6.782 vermit\n telte IT-Fachkräfte ohne Provision \u0026#8211; Wie geht das?\u003c/li\u003e\t\u003cli\u003eCowork\n r.de oder Wie erscheinen Ihre Stellenangebote in den Kreisen Ihrer Spezi\n alisten?\u003c/li\u003e\t\u003cli\u003eMittlr.de oder Wie unterstützen Sie Ihr Active Sourcin\n g?\u003c/li\u003e\t\u003cli\u003eJobwert.info \u0026#8211; Optimale Gehälter dank optimalem Überbl\n ick \u0026#8211; Gehaltsbenchmarks 2017!\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9212963,"Bezeichnung":"CompuSafe Data Systems AG","Kommentar":"","Typ":52,"Nutzername":"compusafe","Website":"https://www.compusafe.de/karriere/","created_at":"2016-06-14T20:57:11.000+02:00","updated_at":"2021-06-18T10:59:27.000+02:00"}}]},{"id":32,"name":"ebcw_20171","hashtag":"ebcw","title":"50/51. Community Training *SAX/MITTE","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eAm 24. Januar 2017 ist es wieder soweit. Wir heißen Sie herzlich willkommen zum 50. Community Training *SAX. Unser Forum bietet Ihnen eine Plattform zur Vernetzung und zum Wissensaustausch zu den aktuellsten Neuigkeiten des Personalmarketings und der Personalgewinnung. Und das gleich in Ihrer Nähe. In unseren regelmäßigen Community-Treffen finden Geschäftsführer sowie Personaler mit Fachkräftebedarf aus Sachsen zueinander. Wir teilen unser Wissen über Themen, Tools und Trends in der Personalgewinnung untereinander. Gemeinsam bauen wir unser Know-How und unsere Expertise in der gekonnten Suche nach Informatikern, Ingenieuren und Technikern weiter aus.\u003c/p\u003e\n\u003cp\u003eMachen Sie mit und profitieren Sie vom Expertenpool in Ihrer Region!\u003cbr /\u003e\nDie Teilnahme ist kostenfrei. Jedoch ist eine kurze Registrierung und eine Freischaltung aus organisatorischen Gründen erforderlich.\u003c/p\u003e\n\u003cp\u003eWann: 24.01.2017 15.00 \u0026#8211; 18.00 Uhr\u003c/p\u003e\n\u003cp\u003e\u003cb\u003eThemen\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eCoworkr.de oder Wie erscheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialisten?\u003c/li\u003e\n\t\u003cli\u003eIhre aktuellen Stellenangebote überall dabei, mit der Empfehlungsbund.de \u0026#8211; App\u003c/li\u003e\n\t\u003cli\u003eOptimale Gehälter dank optimalem Überblick \u0026#8211; Ankündigung des Gehaltsbenchmarks 2017\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2017-01-24T15:00:00.000+01:00","finish":"2017-01-25T18:00:00.000+01:00","visible":true,"is_open_network":false,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/32/register","show_url":"https://www.empfehlungsbund.de/events/32","events":[{"id":66,"display_line":"24.01.2017 - 15 bis 18:00 Uhr Wilsdruff - 50. Community Training *SAX - Gastgeber: Accenture Dienstleistungen GmbH","subtitle":"50. Community Training *SAX","city":"Wilsdruff","start":"2017-01-24T15:00:00.000+01:00","finish":"2017-01-24T18:00:00.000+01:00","address":"Zum Alten Dessauer 13, 01723 Kesselsdorf","event_host":"Accenture Dienstleistungen GmbH","lat":51.0355,"lon":13.5966,"community_training_id":29,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20161030T030000\nRDATE:20161030T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20170124T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20170124T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:Am 24. Januar 2017 ist es wieder soweit. Wir heißen Sie herzl\n ich willkommen zum 50. Community Training *SAX. Unser Forum bietet Ihnen\n  eine Plattform zur Vernetzung und zum Wissensaustausch zu den aktuellst\n en Neuigkeiten des Personalmarketings und der Personalgewinnung. Und das\n  gleich in Ihrer Nähe. In unseren regelmäßigen Community-Treffen finden \n Geschäftsführer sowie Personaler mit Fachkräftebedarf aus Sachsen zueina\n nder. Wir teilen unser Wissen über Themen\\, Tools und Trends in der Pers\n onalgewinnung untereinander. Gemeinsam bauen wir unser Know-How und unse\n re Expertise in der gekonnten Suche nach Informatikern\\, Ingenieuren und\n  Technikern weiter aus.\\nMachen Sie mit und profitieren Sie vom Experten\n pool in Ihrer Region!\\nDie Teilnahme ist kostenfrei. Jedoch ist eine kur\n ze Registrierung und eine Freischaltung aus organisatorischen Gründen er\n forderlich.\\nWann: 24.01.2017 15.00 – 18.00 Uhr\\nThemen\\n\\n\t* Coworkr.de\n  oder Wie erscheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialis\n ten?\\n\t* Ihre aktuellen Stellenangebote überall dabei\\, mit der Empfehlu\n ngsbund.de – App\\n\t* Optimale Gehälter dank optimalem Überblick – Ankünd\n igung des Gehaltsbenchmarks 2017\\n\\n\nURL:https://www.empfehlungsbund.de/events/32\nSUMMARY:50/51. Community Training *SAX/MITTE\nORGANIZER;CN=Accenture Dienstleistungen GmbH / Empfehlungsbund.de:https:/\n /www.empfehlungsbund.de/events/32\nATTACH:https://www.empfehlungsbund.de/events/32\nLOCATION:Accenture Dienstleistungen GmbH\\, Zum Alten Dessauer 13\\, 01723 \n Kesselsdorf\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eAm 24. Januar 2017 ist es wiede\n r soweit. Wir heißen Sie herzlich willkommen zum 50. Community Training \n *SAX. Unser Forum bietet Ihnen eine Plattform zur Vernetzung und zum Wis\n sensaustausch zu den aktuellsten Neuigkeiten des Personalmarketings und \n der Personalgewinnung. Und das gleich in Ihrer Nähe. In unseren regelmäß\n igen Community-Treffen finden Geschäftsführer sowie Personaler mit Fachk\n räftebedarf aus Sachsen zueinander. Wir teilen unser Wissen über Themen,\n  Tools und Trends in der Personalgewinnung untereinander. Gemeinsam baue\n n wir unser Know-How und unsere Expertise in der gekonnten Suche nach In\n formatikern, Ingenieuren und Technikern weiter aus.\u003c/p\u003e\u003cp\u003eMachen Sie mit\n  und profitieren Sie vom Expertenpool in Ihrer Region!\u003cbr /\u003eDie Teilnahm\n e ist kostenfrei. Jedoch ist eine kurze Registrierung und eine Freischal\n tung aus organisatorischen Gründen erforderlich.\u003c/p\u003e\u003cp\u003eWann: 24.01.2017 \n 15.00 \u0026#8211; 18.00 Uhr\u003c/p\u003e\u003cp\u003e\u003cb\u003eThemen\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eCoworkr.de oder \n Wie erscheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialisten?\u003c/\n li\u003e\t\u003cli\u003eIhre aktuellen Stellenangebote überall dabei, mit der Empfehlung\n sbund.de \u0026#8211; App\u003c/li\u003e\t\u003cli\u003eOptimale Gehälter dank optimalem Überblick\n  \u0026#8211; Ankündigung des Gehaltsbenchmarks 2017\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9211013,"Bezeichnung":"Accenture Dienstleistungen GmbH","Kommentar":"Rechnung senden an: acn.germany.inv@accenture.com\r\n\r\nURN : 8502904020. NUR FÜR DIE 2020 RECHNUNG. (Alex)\r\n\r\nBitte nicht mehr Frau Neumerkel anschreiben sondern Frau Nina Simmons und Frau Claudia Rudek, die jetzt für das Recruting zuständig sind","Typ":10,"Nutzername":"accenture","Website":"http://www.solid-servision.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-08-18T16:48:30.000+02:00"}},{"id":67,"display_line":"25.01.2017 - 15 bis 18:00 Uhr Halle (Saale) - 51. Community Training *MITTE - Gastgeber: Gisa GmbH","subtitle":"51. Community Training *MITTE","city":"Halle (Saale)","start":"2017-01-25T15:00:00.000+01:00","finish":"2017-01-25T18:00:00.000+01:00","address":"Leipziger Chaussee 191a, 06112 Halle (Saale)","event_host":"Gisa GmbH","lat":51.449,"lon":12.0246,"community_training_id":30,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20161030T030000\nRDATE:20161030T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20170125T180000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20170125T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:Am 24. Januar 2017 ist es wieder soweit. Wir heißen Sie herzl\n ich willkommen zum 50. Community Training *SAX. Unser Forum bietet Ihnen\n  eine Plattform zur Vernetzung und zum Wissensaustausch zu den aktuellst\n en Neuigkeiten des Personalmarketings und der Personalgewinnung. Und das\n  gleich in Ihrer Nähe. In unseren regelmäßigen Community-Treffen finden \n Geschäftsführer sowie Personaler mit Fachkräftebedarf aus Sachsen zueina\n nder. Wir teilen unser Wissen über Themen\\, Tools und Trends in der Pers\n onalgewinnung untereinander. Gemeinsam bauen wir unser Know-How und unse\n re Expertise in der gekonnten Suche nach Informatikern\\, Ingenieuren und\n  Technikern weiter aus.\\nMachen Sie mit und profitieren Sie vom Experten\n pool in Ihrer Region!\\nDie Teilnahme ist kostenfrei. Jedoch ist eine kur\n ze Registrierung und eine Freischaltung aus organisatorischen Gründen er\n forderlich.\\nWann: 24.01.2017 15.00 – 18.00 Uhr\\nThemen\\n\\n\t* Coworkr.de\n  oder Wie erscheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialis\n ten?\\n\t* Ihre aktuellen Stellenangebote überall dabei\\, mit der Empfehlu\n ngsbund.de – App\\n\t* Optimale Gehälter dank optimalem Überblick – Ankünd\n igung des Gehaltsbenchmarks 2017\\n\\n\nURL:https://www.empfehlungsbund.de/events/32\nSUMMARY:50/51. Community Training *SAX/MITTE\nORGANIZER;CN=Gisa GmbH / Empfehlungsbund.de:https://www.empfehlungsbund.d\n e/events/32\nATTACH:https://www.empfehlungsbund.de/events/32\nLOCATION:Gisa GmbH\\, Leipziger Chaussee 191a\\, 06112 Halle (Saale)\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eAm 24. Januar 2017 ist es wiede\n r soweit. Wir heißen Sie herzlich willkommen zum 50. Community Training \n *SAX. Unser Forum bietet Ihnen eine Plattform zur Vernetzung und zum Wis\n sensaustausch zu den aktuellsten Neuigkeiten des Personalmarketings und \n der Personalgewinnung. Und das gleich in Ihrer Nähe. In unseren regelmäß\n igen Community-Treffen finden Geschäftsführer sowie Personaler mit Fachk\n räftebedarf aus Sachsen zueinander. Wir teilen unser Wissen über Themen,\n  Tools und Trends in der Personalgewinnung untereinander. Gemeinsam baue\n n wir unser Know-How und unsere Expertise in der gekonnten Suche nach In\n formatikern, Ingenieuren und Technikern weiter aus.\u003c/p\u003e\u003cp\u003eMachen Sie mit\n  und profitieren Sie vom Expertenpool in Ihrer Region!\u003cbr /\u003eDie Teilnahm\n e ist kostenfrei. Jedoch ist eine kurze Registrierung und eine Freischal\n tung aus organisatorischen Gründen erforderlich.\u003c/p\u003e\u003cp\u003eWann: 24.01.2017 \n 15.00 \u0026#8211; 18.00 Uhr\u003c/p\u003e\u003cp\u003e\u003cb\u003eThemen\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eCoworkr.de oder \n Wie erscheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialisten?\u003c/\n li\u003e\t\u003cli\u003eIhre aktuellen Stellenangebote überall dabei, mit der Empfehlung\n sbund.de \u0026#8211; App\u003c/li\u003e\t\u003cli\u003eOptimale Gehälter dank optimalem Überblick\n  \u0026#8211; Ankündigung des Gehaltsbenchmarks 2017\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210031,"Bezeichnung":"Gisa GmbH","Kommentar":"ab 11_2020: ato","Typ":10,"Nutzername":"gisa","Website":"https://www.gisa.de/karriere/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-12T15:36:43.000+02:00"}}]},{"id":31,"name":"ebcw_20164","hashtag":"ebcw","title":"48/49. Expertenforum - Personalmanagement und Community Training *SAX/MITTE","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eAm 27. September 2016 ist es wieder soweit. Wir heißen Sie herzlich willkommen zum 48. Expertenforum \u0026#8211; Personalmanagement und Community Training *SAX. Unser Forum bietet Ihnen eine Plattform zur Vernetzung und zum Wissensaustausch zu den aktuellsten Neuigkeiten des Personalmarketings und der Personalgewinnung. Und das gleich in Ihrer Nähe. In unseren regelmäßigen Expertenforen und Community-Treffen finden Geschäftsführer sowie Personaler mit Fachkräftebedarf aus Sachsen zueinander. Wir teilen unser Wissen über Themen, Tools und Trends in der Personalgewinnung untereinander. Gemeinsam bauen wir unser Know-How und unsere Expertise in der gekonnten Suche nach Informatikern, Ingenieuren und Technikern weiter aus.\u003c/p\u003e\n\u003cp\u003eMachen Sie mit und profitieren Sie vom Expertenpool in Ihrer Region!\u003cbr /\u003e\nDie Teilnahme an unseren Expertenforen ist wie immer kostenfrei. Jedoch ist eine kurze Registrierung und eine Freischaltung aus organisatorischen Gründen erforderlich.\u003c/p\u003e\n\u003cp\u003eWann: 27.09.2016 17.00 \u0026#8211; 19.00 Uhr\u003c/p\u003e\n\u003cp\u003e\u003cb\u003e\u003cspan class=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eBegrüßung durch die \u003cspan class=\"caps\"\u003eKOMSA\u003c/span\u003e Kommunikation Sachsen AG\u003c/li\u003e\n\t\u003cli\u003eErfahrungsaustausch über die am meisten genutzten Bewerberkanäle\u003c/li\u003e\n\t\u003cli\u003eKurzes Community Update: Kennzahlen, neue Kooperationen, neue Funktionalitäten\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cb\u003eKeynotes\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eMitarbeiter-werben-Mitarbeiter oder Wie erscheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialisten?\u003c/li\u003e\n\t\u003cli\u003eMittlr Update \u0026#8211; Die andere Art Spezialisten zu finden\u003c/li\u003e\n\t\u003cli\u003eRegionale Trends von Trendea.de \u0026#8211; Welche Fachkräftemessen lohnen sich wirklich?\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2016-09-27T17:00:00.000+02:00","finish":"2016-09-28T19:00:00.000+02:00","visible":true,"is_open_network":false,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/31/register","show_url":"https://www.empfehlungsbund.de/events/31","events":[{"id":64,"display_line":"27.09.2016 - 17 bis 19:00 Uhr Hartmannsdorf - 48. Expertenforum - Personalmanagement und Community Training *SAX - Gastgeber: Komsa Kommunikation Sachsen AG","subtitle":"48. Expertenforum - Personalmanagement und Community Training *SAX","city":"Hartmannsdorf","start":"2016-09-27T17:00:00.000+02:00","finish":"2016-09-27T19:00:00.000+02:00","address":"Niederfrohnaer Weg 1, 09232 Hartmannsdorf","event_host":"Komsa Kommunikation Sachsen AG","lat":50.8943,"lon":12.7879,"community_training_id":27,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20160327T020000\nRDATE:20160327T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20160927T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20160927T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Am 27. September 2016 ist es wieder soweit. Wir heißen Sie he\n rzlich willkommen zum 48. Expertenforum – Personalmanagement und Communi\n ty Training *SAX. Unser Forum bietet Ihnen eine Plattform zur Vernetzung\n  und zum Wissensaustausch zu den aktuellsten Neuigkeiten des Personalmar\n ketings und der Personalgewinnung. Und das gleich in Ihrer Nähe. In unse\n ren regelmäßigen Expertenforen und Community-Treffen finden Geschäftsfüh\n rer sowie Personaler mit Fachkräftebedarf aus Sachsen zueinander. Wir te\n ilen unser Wissen über Themen\\, Tools und Trends in der Personalgewinnun\n g untereinander. Gemeinsam bauen wir unser Know-How und unsere Expertise\n  in der gekonnten Suche nach Informatikern\\, Ingenieuren und Technikern \n weiter aus.\\nMachen Sie mit und profitieren Sie vom Expertenpool in Ihre\n r Region!\\nDie Teilnahme an unseren Expertenforen ist wie immer kostenfr\n ei. Jedoch ist eine kurze Registrierung und eine Freischaltung aus organ\n isatorischen Gründen erforderlich.\\nWann: 27.09.2016 17.00 – 19.00 Uhr\\n\n AGENDA\\n\\n\t* Begrüßung durch die KOMSA Kommunikation Sachsen AG\\n\t* Erfa\n hrungsaustausch über die am meisten genutzten Bewerberkanäle\\n\t* Kurzes \n Community Update: Kennzahlen\\, neue Kooperationen\\, neue Funktionalitäte\n n\\n\\nKeynotes\\n\\n\t* Mitarbeiter-werben-Mitarbeiter oder Wie erscheinen I\n hre Stellenangebote in den Kreisen Ihrer Spezialisten?\\n\t* Mittlr Update\n  – Die andere Art Spezialisten zu finden\\n\t* Regionale Trends von Trende\n a.de – Welche Fachkräftemessen lohnen sich wirklich?\\n\\n\nURL:https://www.empfehlungsbund.de/events/31\nSUMMARY:48/49. Expertenforum - Personalmanagement und Community Training \n *SAX/MITTE\nORGANIZER;CN=Komsa Kommunikation Sachsen AG / Empfehlungsbund.de:https://\n www.empfehlungsbund.de/events/31\nATTACH:https://www.empfehlungsbund.de/events/31\nLOCATION:Komsa Kommunikation Sachsen AG\\, Niederfrohnaer Weg 1\\, 09232 Ha\n rtmannsdorf\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eAm 27. September 2016 ist es wi\n eder soweit. Wir heißen Sie herzlich willkommen zum 48. Expertenforum \u0026#\n 8211; Personalmanagement und Community Training *SAX. Unser Forum bietet\n  Ihnen eine Plattform zur Vernetzung und zum Wissensaustausch zu den akt\n uellsten Neuigkeiten des Personalmarketings und der Personalgewinnung. U\n nd das gleich in Ihrer Nähe. In unseren regelmäßigen Expertenforen und C\n ommunity-Treffen finden Geschäftsführer sowie Personaler mit Fachkräfteb\n edarf aus Sachsen zueinander. Wir teilen unser Wissen über Themen, Tools\n  und Trends in der Personalgewinnung untereinander. Gemeinsam bauen wir \n unser Know-How und unsere Expertise in der gekonnten Suche nach Informat\n ikern, Ingenieuren und Technikern weiter aus.\u003c/p\u003e\u003cp\u003eMachen Sie mit und p\n rofitieren Sie vom Expertenpool in Ihrer Region!\u003cbr /\u003eDie Teilnahme an u\n nseren Expertenforen ist wie immer kostenfrei. Jedoch ist eine kurze Reg\n istrierung und eine Freischaltung aus organisatorischen Gründen erforder\n lich.\u003c/p\u003e\u003cp\u003eWann: 27.09.2016 17.00 \u0026#8211; 19.00 Uhr\u003c/p\u003e\u003cp\u003e\u003cb\u003e\u003cspan clas\n s=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch die \u003cspan class=\"\n caps\"\u003eKOMSA\u003c/span\u003e Kommunikation Sachsen AG\u003c/li\u003e\t\u003cli\u003eErfahrungsaustausch\n  über die am meisten genutzten Bewerberkanäle\u003c/li\u003e\t\u003cli\u003eKurzes Community \n Update: Kennzahlen, neue Kooperationen, neue Funktionalitäten\u003c/li\u003e\u003c/ul\u003e\u003c\n p\u003e\u003cb\u003eKeynotes\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eMitarbeiter-werben-Mitarbeiter oder Wie er\n scheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialisten?\u003c/li\u003e\t\u003cl\n i\u003eMittlr Update \u0026#8211; Die andere Art Spezialisten zu finden\u003c/li\u003e\t\u003cli\u003eR\n egionale Trends von Trendea.de \u0026#8211; Welche Fachkräftemessen lohnen si\n ch wirklich?\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210058,"Bezeichnung":"Komsa Kommunikation Sachsen AG","Kommentar":"","Typ":10,"Nutzername":"komsa","Website":"https://komsa.com/karriere/offene-stellen/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:35.000+02:00"}},{"id":65,"display_line":"28.09.2016 - 17 bis 19:00 Uhr Leipzig - 49. Expertenforum - Personalmanagement und Community Training *MITTE - Gastgeber: CHECK24 Vergleichsportal Reise GmbH","subtitle":"49. Expertenforum - Personalmanagement und Community Training *MITTE","city":"Leipzig","start":"2016-09-28T17:00:00.000+02:00","finish":"2016-09-28T19:00:00.000+02:00","address":"Nikolaistraße  20, 04109 Leipzig","event_host":"CHECK24 Vergleichsportal Reise GmbH","lat":51.3418,"lon":12.3783,"community_training_id":28,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20160327T020000\nRDATE:20160327T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20160928T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20160928T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Am 27. September 2016 ist es wieder soweit. Wir heißen Sie he\n rzlich willkommen zum 48. Expertenforum – Personalmanagement und Communi\n ty Training *SAX. Unser Forum bietet Ihnen eine Plattform zur Vernetzung\n  und zum Wissensaustausch zu den aktuellsten Neuigkeiten des Personalmar\n ketings und der Personalgewinnung. Und das gleich in Ihrer Nähe. In unse\n ren regelmäßigen Expertenforen und Community-Treffen finden Geschäftsfüh\n rer sowie Personaler mit Fachkräftebedarf aus Sachsen zueinander. Wir te\n ilen unser Wissen über Themen\\, Tools und Trends in der Personalgewinnun\n g untereinander. Gemeinsam bauen wir unser Know-How und unsere Expertise\n  in der gekonnten Suche nach Informatikern\\, Ingenieuren und Technikern \n weiter aus.\\nMachen Sie mit und profitieren Sie vom Expertenpool in Ihre\n r Region!\\nDie Teilnahme an unseren Expertenforen ist wie immer kostenfr\n ei. Jedoch ist eine kurze Registrierung und eine Freischaltung aus organ\n isatorischen Gründen erforderlich.\\nWann: 27.09.2016 17.00 – 19.00 Uhr\\n\n AGENDA\\n\\n\t* Begrüßung durch die KOMSA Kommunikation Sachsen AG\\n\t* Erfa\n hrungsaustausch über die am meisten genutzten Bewerberkanäle\\n\t* Kurzes \n Community Update: Kennzahlen\\, neue Kooperationen\\, neue Funktionalitäte\n n\\n\\nKeynotes\\n\\n\t* Mitarbeiter-werben-Mitarbeiter oder Wie erscheinen I\n hre Stellenangebote in den Kreisen Ihrer Spezialisten?\\n\t* Mittlr Update\n  – Die andere Art Spezialisten zu finden\\n\t* Regionale Trends von Trende\n a.de – Welche Fachkräftemessen lohnen sich wirklich?\\n\\n\nURL:https://www.empfehlungsbund.de/events/31\nSUMMARY:48/49. Expertenforum - Personalmanagement und Community Training \n *SAX/MITTE\nORGANIZER;CN=CHECK24 Vergleichsportal Reise GmbH / Empfehlungsbund.de:htt\n ps://www.empfehlungsbund.de/events/31\nATTACH:https://www.empfehlungsbund.de/events/31\nLOCATION:CHECK24 Vergleichsportal Reise GmbH\\, Nikolaistraße  20\\, 04109 \n Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eAm 27. September 2016 ist es wi\n eder soweit. Wir heißen Sie herzlich willkommen zum 48. Expertenforum \u0026#\n 8211; Personalmanagement und Community Training *SAX. Unser Forum bietet\n  Ihnen eine Plattform zur Vernetzung und zum Wissensaustausch zu den akt\n uellsten Neuigkeiten des Personalmarketings und der Personalgewinnung. U\n nd das gleich in Ihrer Nähe. In unseren regelmäßigen Expertenforen und C\n ommunity-Treffen finden Geschäftsführer sowie Personaler mit Fachkräfteb\n edarf aus Sachsen zueinander. Wir teilen unser Wissen über Themen, Tools\n  und Trends in der Personalgewinnung untereinander. Gemeinsam bauen wir \n unser Know-How und unsere Expertise in der gekonnten Suche nach Informat\n ikern, Ingenieuren und Technikern weiter aus.\u003c/p\u003e\u003cp\u003eMachen Sie mit und p\n rofitieren Sie vom Expertenpool in Ihrer Region!\u003cbr /\u003eDie Teilnahme an u\n nseren Expertenforen ist wie immer kostenfrei. Jedoch ist eine kurze Reg\n istrierung und eine Freischaltung aus organisatorischen Gründen erforder\n lich.\u003c/p\u003e\u003cp\u003eWann: 27.09.2016 17.00 \u0026#8211; 19.00 Uhr\u003c/p\u003e\u003cp\u003e\u003cb\u003e\u003cspan clas\n s=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch die \u003cspan class=\"\n caps\"\u003eKOMSA\u003c/span\u003e Kommunikation Sachsen AG\u003c/li\u003e\t\u003cli\u003eErfahrungsaustausch\n  über die am meisten genutzten Bewerberkanäle\u003c/li\u003e\t\u003cli\u003eKurzes Community \n Update: Kennzahlen, neue Kooperationen, neue Funktionalitäten\u003c/li\u003e\u003c/ul\u003e\u003c\n p\u003e\u003cb\u003eKeynotes\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eMitarbeiter-werben-Mitarbeiter oder Wie er\n scheinen Ihre Stellenangebote in den Kreisen Ihrer Spezialisten?\u003c/li\u003e\t\u003cl\n i\u003eMittlr Update \u0026#8211; Die andere Art Spezialisten zu finden\u003c/li\u003e\t\u003cli\u003eR\n egionale Trends von Trendea.de \u0026#8211; Welche Fachkräftemessen lohnen si\n ch wirklich?\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9212452,"Bezeichnung":"CHECK24 Vergleichsportal Reise GmbH","Kommentar":"","Typ":10,"Nutzername":"check24","Website":"","created_at":"2015-10-01T17:42:05.000+02:00","updated_at":"2021-06-18T10:59:18.000+02:00"}}]},{"id":30,"name":"oxfp_16","hashtag":"ofxp","title":"46/47. Expertenforum - Personalmanagement und OpenNetwork Event *SAX/MITTE","teaser":"","teaser_hrfilter":"","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003eAm 24. Mai ist es wieder soweit. Die Community *SAX heißt Sie willkommen zum 46. Expertenforum – Personalmanagement und OpenNetwork. Unser Forum bietet Ihnen eine Plattform zur Vernetzung und zum Wissensaustausch zu den aktuellsten Neuigkeiten des Personalmarketing und der Personalgewinnung. Und das gleich in Ihrer Nähe. In unseren regelmäßigen Expertenforen und Community-Treffen finden Geschäftsführer und Personaler mit Fachkräftebedarf aus Sachsen zueinander. Wir teilen unser Wissen über Themen, Tools und Trends in der Personalgewinnung untereinander. Gemeinsam bauen wir unser Know-How und unsere Expertise in der gekonnten Suche nach Informatikern, Ingenieuren und Technikern weiter aus.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eMachen Sie mit und profitieren Sie vom Expertenpool in Ihrer Region.\u003cbr\u003e\u0026nbsp;Die Teilnahme an unseren Expertenforen ist wie immer kostenfrei. Jedoch ist eine kurze Registrierung und eine Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eAußerdem bieten wir unseren Partnern an, ab 14:00 Uhr ein kostenfreies Informationsvideo zu drehen. Dafür wird ein Kamerateam vor Ort sein und ein ca. 15 minütiges Interview mit Ihnen durchführen.\u0026nbsp;\u003cbr\u003e\u0026nbsp;Sind Sie interessiert? Für weitere Informationen stehen wir Ihnen gerne zur Verfügung: beratung@pludoni.de\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWann: 24.05.2016 16-19Uhr\u003cbr\u003e\u0026nbsp;Gastgeber: T-Systems Multimedia Solutions GmbH\u003cbr\u003e\u0026nbsp;Ort: Riesaer Straße 5, 01129 Dresden\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstrong\u003eAGENDA\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eBegrüßung durch die T-Systems Multimedia Solutions GmbH\u003c/li\u003e\u003cli\u003eErfahrungsaustausch über die am meisten genutzten Bewerberkanäle\u003c/li\u003e\u003cli\u003eKurzes Community Update: Kennzahlen, neue Kooperationen, neue Funktionalitäten\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cstrong\u003eKeynotes\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eOptimale Gehälter dank optimalem Überblick – Auswertung des Gehaltsbenchmarks 2016\u003c/li\u003e\u003cli\u003eDas neueste Tool zur Personalgewinnung: Mittlr – Die andere Art Spezialisten zu finden\u003c/li\u003e\u003cli\u003eBewerbungsprozesse, die Bewerber überzeugen? – Auswertung der Candidate Experience Studie\u003c/li\u003e\u003c/ul\u003e","agenda":"","start":"2016-05-24T16:00:00.000+02:00","finish":"2016-05-24T19:00:00.000+02:00","visible":true,"is_open_network":true,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/30/register","show_url":"https://www.empfehlungsbund.de/events/30","events":[{"id":62,"display_line":"24.05.2016 - 16 bis 19:00 Uhr Dresden - 46. Expertenforum - Personalmanagement und OpenNetwork Event *SAX - Gastgeber: T-Systems Multimedia Solutions GmbH","subtitle":"46. Expertenforum - Personalmanagement und OpenNetwork Event *SAX","city":"Dresden","start":"2016-05-24T16:00:00.000+02:00","finish":"2016-05-24T19:00:00.000+02:00","address":"Riesaer Straße 5, 01129 Dresden","event_host":"T-Systems Multimedia Solutions GmbH","lat":51.0827,"lon":13.7256,"community_training_id":25,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20160327T020000\nRDATE:20160327T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20160524T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20160524T160000\nCATEGORIES:BUSINESS\nDESCRIPTION:Am 24. Mai ist es wieder soweit. Die Community *SAX heißt Sie\n  willkommen zum 46. Expertenforum – Personalmanagement und OpenNetwork. \n Unser Forum bietet Ihnen eine Plattform zur Vernetzung und zum Wissensau\n stausch zu den aktuellsten Neuigkeiten des Personalmarketing und der Per\n sonalgewinnung. Und das gleich in Ihrer Nähe. In unseren regelmäßigen Ex\n pertenforen und Community-Treffen finden Geschäftsführer und Personaler \n mit Fachkräftebedarf aus Sachsen zueinander. Wir teilen unser Wissen übe\n r Themen\\, Tools und Trends in der Personalgewinnung untereinander. Geme\n insam bauen wir unser Know-How und unsere Expertise in der gekonnten Suc\n he nach Informatikern\\, Ingenieuren und Technikern weiter aus.\\n\\n\\nMach\n en Sie mit und profitieren Sie vom Expertenpool in Ihrer Region.\\n Die T\n eilnahme an unseren Expertenforen ist wie immer kostenfrei. Jedoch ist e\n ine kurze Registrierung und eine Freischaltung aus organisatorischen Grü\n nden erforderlich.\\n\\n\\nAußerdem bieten wir unseren Partnern an\\, ab 14:\n 00 Uhr ein kostenfreies Informationsvideo zu drehen. Dafür wird ein Kame\n rateam vor Ort sein und ein ca. 15 minütiges Interview mit Ihnen durchfü\n hren. \\n Sind Sie interessiert? Für weitere Informationen stehen wir Ihn\n en gerne zur Verfügung: beratung@pludoni.de\\n\\n\\nWann: 24.05.2016 16-19U\n hr\\n Gastgeber: T-Systems Multimedia Solutions GmbH\\n Ort: Riesaer Straß\n e 5\\, 01129 Dresden\\n\\n\\nAGENDA\\n\\n\\n* Begrüßung durch die T-Systems Mul\n timedia Solutions GmbH* Erfahrungsaustausch über die am meisten genutzte\n n Bewerberkanäle* Kurzes Community Update: Kennzahlen\\, neue Kooperation\n en\\, neue FunktionalitätenKeynotes\\n\\n\\n* Optimale Gehälter dank optimal\n em Überblick – Auswertung des Gehaltsbenchmarks 2016* Das neueste Tool z\n ur Personalgewinnung: Mittlr – Die andere Art Spezialisten zu finden* Be\n werbungsprozesse\\, die Bewerber überzeugen? – Auswertung der Candidate E\n xperience Studie\\n\nURL:https://www.empfehlungsbund.de/events/30\nSUMMARY:46/47. Expertenforum - Personalmanagement und OpenNetwork Event *\n SAX/MITTE\nORGANIZER;CN=T-Systems Multimedia Solutions GmbH / Empfehlungsbund.de:htt\n ps://www.empfehlungsbund.de/events/30\nATTACH:https://www.empfehlungsbund.de/events/30\nLOCATION:T-Systems Multimedia Solutions GmbH\\, Riesaer Straße 5\\, 01129 D\n resden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eAm 24. Mai ist es wieder sowe\n it. Die Community *SAX heißt Sie willkommen zum 46. Expertenforum – Pers\n onalmanagement und OpenNetwork. Unser Forum bietet Ihnen eine Plattform \n zur Vernetzung und zum Wissensaustausch zu den aktuellsten Neuigkeiten d\n es Personalmarketing und der Personalgewinnung. Und das gleich in Ihrer \n Nähe. In unseren regelmäßigen Expertenforen und Community-Treffen finden\n  Geschäftsführer und Personaler mit Fachkräftebedarf aus Sachsen zueinan\n der. Wir teilen unser Wissen über Themen, Tools und Trends in der Person\n algewinnung untereinander. Gemeinsam bauen wir unser Know-How und unsere\n  Expertise in der gekonnten Suche nach Informatikern, Ingenieuren und Te\n chnikern weiter aus.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eMachen Sie mit und profitieren Si\n e vom Expertenpool in Ihrer Region.\u003cbr\u003e\u0026nbsp;Die Teilnahme an unseren Ex\n pertenforen ist wie immer kostenfrei. Jedoch ist eine kurze Registrierun\n g und eine Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\n \u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eAußerdem bieten wir unseren Partnern an, ab 14:00 Uhr ein\n  kostenfreies Informationsvideo zu drehen. Dafür wird ein Kamerateam vor\n  Ort sein und ein ca. 15 minütiges Interview mit Ihnen durchführen.\u0026nbsp\n ;\u003cbr\u003e\u0026nbsp;Sind Sie interessiert? Für weitere Informationen stehen wir I\n hnen gerne zur Verfügung: beratung@pludoni.de\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWann: 24\n .05.2016 16-19Uhr\u003cbr\u003e\u0026nbsp;Gastgeber: T-Systems Multimedia Solutions Gmb\n H\u003cbr\u003e\u0026nbsp;Ort: Riesaer Straße 5, 01129 Dresden\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstron\n g\u003eAGENDA\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eBegrüßung durch die T-Systems Mul\n timedia Solutions GmbH\u003c/li\u003e\u003cli\u003eErfahrungsaustausch über die am meisten g\n enutzten Bewerberkanäle\u003c/li\u003e\u003cli\u003eKurzes Community Update: Kennzahlen, neu\n e Kooperationen, neue Funktionalitäten\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cstrong\u003eKeynotes\u003cbr\n \u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eOptimale Gehälter dank optimalem Überblick –\n  Auswertung des Gehaltsbenchmarks 2016\u003c/li\u003e\u003cli\u003eDas neueste Tool zur Pers\n onalgewinnung: Mittlr – Die andere Art Spezialisten zu finden\u003c/li\u003e\u003cli\u003eBe\n werbungsprozesse, die Bewerber überzeugen? – Auswertung der Candidate Ex\n perience Studie\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210013,"Bezeichnung":"T-Systems Multimedia Solutions GmbH","Kommentar":"Rechnung per Post zuschicken.\r\n\r\n","Typ":10,"Nutzername":"tsystemsmms","Website":"https://www.t-systems.com/de/en","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-09-30T10:38:54.000+02:00"}},{"id":63,"display_line":"25.05.2016 - 16 bis 19:00 Uhr Leipzig - 47. Expertenforum - Personalmanagement und OpenNetwork Event *MITTE - Gastgeber: ccc software gmbh","subtitle":"47. Expertenforum - Personalmanagement und OpenNetwork Event *MITTE","city":"Leipzig","start":"2016-05-25T16:00:00.000+02:00","finish":"2016-05-25T19:00:00.000+02:00","address":"Mozartstraße 3, 04107 Leipzig","event_host":"ccc software gmbh","lat":51.3315,"lon":12.3689,"community_training_id":26,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20160327T020000\nRDATE:20160327T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20160525T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20160525T160000\nCATEGORIES:BUSINESS\nDESCRIPTION:Am 24. Mai ist es wieder soweit. Die Community *SAX heißt Sie\n  willkommen zum 46. Expertenforum – Personalmanagement und OpenNetwork. \n Unser Forum bietet Ihnen eine Plattform zur Vernetzung und zum Wissensau\n stausch zu den aktuellsten Neuigkeiten des Personalmarketing und der Per\n sonalgewinnung. Und das gleich in Ihrer Nähe. In unseren regelmäßigen Ex\n pertenforen und Community-Treffen finden Geschäftsführer und Personaler \n mit Fachkräftebedarf aus Sachsen zueinander. Wir teilen unser Wissen übe\n r Themen\\, Tools und Trends in der Personalgewinnung untereinander. Geme\n insam bauen wir unser Know-How und unsere Expertise in der gekonnten Suc\n he nach Informatikern\\, Ingenieuren und Technikern weiter aus.\\n\\n\\nMach\n en Sie mit und profitieren Sie vom Expertenpool in Ihrer Region.\\n Die T\n eilnahme an unseren Expertenforen ist wie immer kostenfrei. Jedoch ist e\n ine kurze Registrierung und eine Freischaltung aus organisatorischen Grü\n nden erforderlich.\\n\\n\\nAußerdem bieten wir unseren Partnern an\\, ab 14:\n 00 Uhr ein kostenfreies Informationsvideo zu drehen. Dafür wird ein Kame\n rateam vor Ort sein und ein ca. 15 minütiges Interview mit Ihnen durchfü\n hren. \\n Sind Sie interessiert? Für weitere Informationen stehen wir Ihn\n en gerne zur Verfügung: beratung@pludoni.de\\n\\n\\nWann: 24.05.2016 16-19U\n hr\\n Gastgeber: T-Systems Multimedia Solutions GmbH\\n Ort: Riesaer Straß\n e 5\\, 01129 Dresden\\n\\n\\nAGENDA\\n\\n\\n* Begrüßung durch die T-Systems Mul\n timedia Solutions GmbH* Erfahrungsaustausch über die am meisten genutzte\n n Bewerberkanäle* Kurzes Community Update: Kennzahlen\\, neue Kooperation\n en\\, neue FunktionalitätenKeynotes\\n\\n\\n* Optimale Gehälter dank optimal\n em Überblick – Auswertung des Gehaltsbenchmarks 2016* Das neueste Tool z\n ur Personalgewinnung: Mittlr – Die andere Art Spezialisten zu finden* Be\n werbungsprozesse\\, die Bewerber überzeugen? – Auswertung der Candidate E\n xperience Studie\\n\nURL:https://www.empfehlungsbund.de/events/30\nSUMMARY:46/47. Expertenforum - Personalmanagement und OpenNetwork Event *\n SAX/MITTE\nORGANIZER;CN=ccc software gmbh / Empfehlungsbund.de:https://www.empfehlun\n gsbund.de/events/30\nATTACH:https://www.empfehlungsbund.de/events/30\nLOCATION:ccc software gmbh\\, Mozartstraße 3\\, 04107 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003eAm 24. Mai ist es wieder sowe\n it. Die Community *SAX heißt Sie willkommen zum 46. Expertenforum – Pers\n onalmanagement und OpenNetwork. Unser Forum bietet Ihnen eine Plattform \n zur Vernetzung und zum Wissensaustausch zu den aktuellsten Neuigkeiten d\n es Personalmarketing und der Personalgewinnung. Und das gleich in Ihrer \n Nähe. In unseren regelmäßigen Expertenforen und Community-Treffen finden\n  Geschäftsführer und Personaler mit Fachkräftebedarf aus Sachsen zueinan\n der. Wir teilen unser Wissen über Themen, Tools und Trends in der Person\n algewinnung untereinander. Gemeinsam bauen wir unser Know-How und unsere\n  Expertise in der gekonnten Suche nach Informatikern, Ingenieuren und Te\n chnikern weiter aus.\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eMachen Sie mit und profitieren Si\n e vom Expertenpool in Ihrer Region.\u003cbr\u003e\u0026nbsp;Die Teilnahme an unseren Ex\n pertenforen ist wie immer kostenfrei. Jedoch ist eine kurze Registrierun\n g und eine Freischaltung aus organisatorischen Gründen erforderlich.\u003cbr\u003e\n \u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eAußerdem bieten wir unseren Partnern an, ab 14:00 Uhr ein\n  kostenfreies Informationsvideo zu drehen. Dafür wird ein Kamerateam vor\n  Ort sein und ein ca. 15 minütiges Interview mit Ihnen durchführen.\u0026nbsp\n ;\u003cbr\u003e\u0026nbsp;Sind Sie interessiert? Für weitere Informationen stehen wir I\n hnen gerne zur Verfügung: beratung@pludoni.de\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWann: 24\n .05.2016 16-19Uhr\u003cbr\u003e\u0026nbsp;Gastgeber: T-Systems Multimedia Solutions Gmb\n H\u003cbr\u003e\u0026nbsp;Ort: Riesaer Straße 5, 01129 Dresden\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cstron\n g\u003eAGENDA\u003cbr\u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eBegrüßung durch die T-Systems Mul\n timedia Solutions GmbH\u003c/li\u003e\u003cli\u003eErfahrungsaustausch über die am meisten g\n enutzten Bewerberkanäle\u003c/li\u003e\u003cli\u003eKurzes Community Update: Kennzahlen, neu\n e Kooperationen, neue Funktionalitäten\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cstrong\u003eKeynotes\u003cbr\n \u003e\u003c/strong\u003e\u003cbr\u003e\u003c/div\u003e\u003cul\u003e\u003cli\u003eOptimale Gehälter dank optimalem Überblick –\n  Auswertung des Gehaltsbenchmarks 2016\u003c/li\u003e\u003cli\u003eDas neueste Tool zur Pers\n onalgewinnung: Mittlr – Die andere Art Spezialisten zu finden\u003c/li\u003e\u003cli\u003eBe\n werbungsprozesse, die Bewerber überzeugen? – Auswertung der Candidate Ex\n perience Studie\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210034,"Bezeichnung":"ccc software gmbh","Kommentar":"","Typ":10,"Nutzername":"ccc","Website":"https://ccc-industriesoftware.de/karriere/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-07T11:36:18.000+02:00"}}]},{"id":29,"name":"oxfp2016","hashtag":"ofxp","title":"Expertenforum - Personalmanagement und 44. Community Training *SAX/5. Community Training *MITTE","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eDie Arbeitnehmer von Morgen \u0026#8211; oder die Generation Z \u0026#8211; zu gewinnen und zu binden, wird ein Schwerpunkt unser Expertenforums im Janaur 2016 sein. Nicht nur geänderte Werte bzw. Bedürfnisse dieser Generation werden betrachtet sondern auch darauf, dass sich der technologische Wandel auch in unserer Außendarstellung auf unsere Webseiten bemerkbar macht. 60% aller Jobsuchen starten mobil\u003csup class=\"footnote\" id=\"fnr1\"\u003e\u003ca href=\"#fn1\"\u003e1\u003c/a\u003e\u003c/sup\u003e. Kandidaten sind mit dem Smartphone online, schauen sich auf Jobbörsen und Karriereseiten um, nutzen S-Bahnfahrten, Mittagspausen und langweilige Meetings, um sich über Karriereoptionen zu informieren. Die Generation Z wird es gar nicht anders kennen.\u003c/p\u003e\n\u003cp\u003eIn unseren Expertenforen und Community Treffen der Geschäftsführer und Personaler mit Fachkräfte-Bedarf aus Sachsen tauschen wir uns zu solchen Trends in der Personalgewinnung regelmäßig aus. Dieses Expertenforum richtet sich an Geschäftsführer und Personaler auf der Suche nach Informatikern, Maschinenbauern, Elektrotechnikern sowie allgemein Ingeniure und Technikern. Eine Registrierung mit Freischaltung ist erforderlich. Die Teilnahme ist kostenfrei.\u003c/p\u003e\n\u003cp\u003eWann: 26.01.2016 17-19Uhr\u003cbr /\u003e\nGastgeber: 3D-Micromac AG\u003cbr /\u003e\nOrt: Technologie-Campus 8, 09126 Chemnitz\u003c/p\u003e\n\u003cp\u003e\u003cb\u003e\u003cspan class=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eBegrüßung durch die 3D-Micromac AG\u003c/li\u003e\n\t\u003cli\u003eErfahrungsaustausch über die am meisten genutzten Bewerberkanäle\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cb\u003eKeynotes\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eGeneration Z \u0026#8211; Eigenschaften der Arbeitnehmer von morgen\u003c/li\u003e\n\t\u003cli\u003eKarrierewebseite mobil gestalten \u0026#8211; Tipps für Personaler\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\t\u003cli\u003eKurzes Community Update: Kennzahlen, neue Kooperationen, neue Funktionalitäten\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eQuellen:\u003cbr /\u003e\n\u003csup class=\"footnote\" id=\"fnr1\"\u003e\u003ca href=\"#fn1\"\u003e1\u003c/a\u003e\u003c/sup\u003e Indeed Studie zur mobilen Jobsuche in Deutschland 2014\u003c/p\u003e","agenda":null,"start":"2016-01-26T17:00:00.000+01:00","finish":"2016-01-27T19:00:00.000+01:00","visible":true,"is_open_network":true,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/29/register","show_url":"https://www.empfehlungsbund.de/events/29","events":[{"id":60,"display_line":"26.01.2016 - 17 bis 19:00 Uhr Chemnitz - Expertenforum - Personalmanagement und 44. Community Training *SAX - Gastgeber: 3D-Micromac AG","subtitle":"Expertenforum - Personalmanagement und 44. Community Training *SAX","city":"Chemnitz","start":"2016-01-26T17:00:00.000+01:00","finish":"2016-01-26T19:00:00.000+01:00","address":"Technologie-Campus 8, 09126 Chemnitz","event_host":"3D-Micromac AG","lat":50.8191,"lon":12.9377,"community_training_id":23,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20151025T030000\nRDATE:20151025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20160126T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20160126T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Die Arbeitnehmer von Morgen – oder die Generation Z – zu gewi\n nnen und zu binden\\, wird ein Schwerpunkt unser Expertenforums im Janaur\n  2016 sein. Nicht nur geänderte Werte bzw. Bedürfnisse dieser Generation\n  werden betrachtet sondern auch darauf\\, dass sich der technologische Wa\n ndel auch in unserer Außendarstellung auf unsere Webseiten bemerkbar mac\n ht. 60% aller Jobsuchen starten mobil1. Kandidaten sind mit dem Smartpho\n ne online\\, schauen sich auf Jobbörsen und Karriereseiten um\\, nutzen S-\n Bahnfahrten\\, Mittagspausen und langweilige Meetings\\, um sich über Karr\n iereoptionen zu informieren. Die Generation Z wird es gar nicht anders k\n ennen.\\nIn unseren Expertenforen und Community Treffen der Geschäftsführ\n er und Personaler mit Fachkräfte-Bedarf aus Sachsen tauschen wir uns zu \n solchen Trends in der Personalgewinnung regelmäßig aus. Dieses Expertenf\n orum richtet sich an Geschäftsführer und Personaler auf der Suche nach I\n nformatikern\\, Maschinenbauern\\, Elektrotechnikern sowie allgemein Ingen\n iure und Technikern. Eine Registrierung mit Freischaltung ist erforderli\n ch. Die Teilnahme ist kostenfrei.\\nWann: 26.01.2016 17-19Uhr\\nGastgeber:\n  3D-Micromac AG\\nOrt: Technologie-Campus 8\\, 09126 Chemnitz\\nAGENDA\\n\\n\t\n * Begrüßung durch die 3D-Micromac AG\\n\t* Erfahrungsaustausch über die am\n  meisten genutzten Bewerberkanäle\\n\\nKeynotes\\n\\n\t* Generation Z – Eigen\n schaften der Arbeitnehmer von morgen\\n\t* Karrierewebseite mobil gestalte\n n – Tipps für Personaler\\n\\n\\n\t* Kurzes Community Update: Kennzahlen\\, n\n eue Kooperationen\\, neue Funktionalitäten\\n\\nQuellen:\\n1 Indeed Studie z\n ur mobilen Jobsuche in Deutschland 2014\\n\nURL:https://www.empfehlungsbund.de/events/29\nSUMMARY:Expertenforum - Personalmanagement und 44. Community Training *SA\n X/5. Community Training *MITTE\nORGANIZER;CN=3D-Micromac AG / Empfehlungsbund.de:https://www.empfehlungsb\n und.de/events/29\nATTACH:https://www.empfehlungsbund.de/events/29\nLOCATION:3D-Micromac AG\\, Technologie-Campus 8\\, 09126 Chemnitz\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eDie Arbeitnehmer von Morgen \u0026#8\n 211; oder die Generation Z \u0026#8211; zu gewinnen und zu binden, wird ein S\n chwerpunkt unser Expertenforums im Janaur 2016 sein. Nicht nur geänderte\n  Werte bzw. Bedürfnisse dieser Generation werden betrachtet sondern auch\n  darauf, dass sich der technologische Wandel auch in unserer Außendarste\n llung auf unsere Webseiten bemerkbar macht. 60% aller Jobsuchen starten \n mobil\u003csup class=\"footnote\" id=\"fnr1\"\u003e\u003ca href=\"#fn1\"\u003e1\u003c/a\u003e\u003c/sup\u003e. Kandida\n ten sind mit dem Smartphone online, schauen sich auf Jobbörsen und Karri\n ereseiten um, nutzen S-Bahnfahrten, Mittagspausen und langweilige Meetin\n gs, um sich über Karriereoptionen zu informieren. Die Generation Z wird \n es gar nicht anders kennen.\u003c/p\u003e\u003cp\u003eIn unseren Expertenforen und Community\n  Treffen der Geschäftsführer und Personaler mit Fachkräfte-Bedarf aus Sa\n chsen tauschen wir uns zu solchen Trends in der Personalgewinnung regelm\n äßig aus. Dieses Expertenforum richtet sich an Geschäftsführer und Perso\n naler auf der Suche nach Informatikern, Maschinenbauern, Elektrotechnike\n rn sowie allgemein Ingeniure und Technikern. Eine Registrierung mit Frei\n schaltung ist erforderlich. Die Teilnahme ist kostenfrei.\u003c/p\u003e\u003cp\u003eWann: 26\n .01.2016 17-19Uhr\u003cbr /\u003eGastgeber: 3D-Micromac AG\u003cbr /\u003eOrt: Technologie-C\n ampus 8, 09126 Chemnitz\u003c/p\u003e\u003cp\u003e\u003cb\u003e\u003cspan class=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\n \u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch die 3D-Micromac AG\u003c/li\u003e\t\u003cli\u003eErfahrungsaustausc\n h über die am meisten genutzten Bewerberkanäle\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eKeynotes\u003c/\n b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eGeneration Z \u0026#8211; Eigenschaften der Arbeitnehmer von m\n orgen\u003c/li\u003e\t\u003cli\u003eKarrierewebseite mobil gestalten \u0026#8211; Tipps für Person\n aler\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\t\u003cli\u003eKurzes Community Update: Kennzahlen, neue Koopera\n tionen, neue Funktionalitäten\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eQuellen:\u003cbr /\u003e\u003csup class=\"foot\n note\" id=\"fnr1\"\u003e\u003ca href=\"#fn1\"\u003e1\u003c/a\u003e\u003c/sup\u003e Indeed Studie zur mobilen Job\n suche in Deutschland 2014\u003c/p\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210197,"Bezeichnung":"3D-Micromac AG","Kommentar":"Sondermaschinenhersteller","Typ":10,"Nutzername":"micromac","Website":"https://3d-micromac.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:38.000+02:00"}},{"id":61,"display_line":"27.01.2016 - 17 bis 19:00 Uhr Leipzig - Expertenforum - Personalmanagement und 45. Community Training *MITTE - Gastgeber: OR Soft Jänicke GmbH","subtitle":"Expertenforum - Personalmanagement und 45. Community Training *MITTE","city":"Leipzig","start":"2016-01-27T17:00:00.000+01:00","finish":"2016-01-27T19:00:00.000+01:00","address":"Martin-Luther-Ring  13, 04109 Leipzig","event_host":"OR Soft Jänicke GmbH","lat":51.3377,"lon":12.3708,"community_training_id":24,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20151025T030000\nRDATE:20151025T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20160127T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20160127T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Die Arbeitnehmer von Morgen – oder die Generation Z – zu gewi\n nnen und zu binden\\, wird ein Schwerpunkt unser Expertenforums im Janaur\n  2016 sein. Nicht nur geänderte Werte bzw. Bedürfnisse dieser Generation\n  werden betrachtet sondern auch darauf\\, dass sich der technologische Wa\n ndel auch in unserer Außendarstellung auf unsere Webseiten bemerkbar mac\n ht. 60% aller Jobsuchen starten mobil1. Kandidaten sind mit dem Smartpho\n ne online\\, schauen sich auf Jobbörsen und Karriereseiten um\\, nutzen S-\n Bahnfahrten\\, Mittagspausen und langweilige Meetings\\, um sich über Karr\n iereoptionen zu informieren. Die Generation Z wird es gar nicht anders k\n ennen.\\nIn unseren Expertenforen und Community Treffen der Geschäftsführ\n er und Personaler mit Fachkräfte-Bedarf aus Sachsen tauschen wir uns zu \n solchen Trends in der Personalgewinnung regelmäßig aus. Dieses Expertenf\n orum richtet sich an Geschäftsführer und Personaler auf der Suche nach I\n nformatikern\\, Maschinenbauern\\, Elektrotechnikern sowie allgemein Ingen\n iure und Technikern. Eine Registrierung mit Freischaltung ist erforderli\n ch. Die Teilnahme ist kostenfrei.\\nWann: 26.01.2016 17-19Uhr\\nGastgeber:\n  3D-Micromac AG\\nOrt: Technologie-Campus 8\\, 09126 Chemnitz\\nAGENDA\\n\\n\t\n * Begrüßung durch die 3D-Micromac AG\\n\t* Erfahrungsaustausch über die am\n  meisten genutzten Bewerberkanäle\\n\\nKeynotes\\n\\n\t* Generation Z – Eigen\n schaften der Arbeitnehmer von morgen\\n\t* Karrierewebseite mobil gestalte\n n – Tipps für Personaler\\n\\n\\n\t* Kurzes Community Update: Kennzahlen\\, n\n eue Kooperationen\\, neue Funktionalitäten\\n\\nQuellen:\\n1 Indeed Studie z\n ur mobilen Jobsuche in Deutschland 2014\\n\nURL:https://www.empfehlungsbund.de/events/29\nSUMMARY:Expertenforum - Personalmanagement und 44. Community Training *SA\n X/5. Community Training *MITTE\nORGANIZER;CN=OR Soft Jänicke GmbH / Empfehlungsbund.de:https://www.empfeh\n lungsbund.de/events/29\nATTACH:https://www.empfehlungsbund.de/events/29\nLOCATION:OR Soft Jänicke GmbH\\, Martin-Luther-Ring  13\\, 04109 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eDie Arbeitnehmer von Morgen \u0026#8\n 211; oder die Generation Z \u0026#8211; zu gewinnen und zu binden, wird ein S\n chwerpunkt unser Expertenforums im Janaur 2016 sein. Nicht nur geänderte\n  Werte bzw. Bedürfnisse dieser Generation werden betrachtet sondern auch\n  darauf, dass sich der technologische Wandel auch in unserer Außendarste\n llung auf unsere Webseiten bemerkbar macht. 60% aller Jobsuchen starten \n mobil\u003csup class=\"footnote\" id=\"fnr1\"\u003e\u003ca href=\"#fn1\"\u003e1\u003c/a\u003e\u003c/sup\u003e. Kandida\n ten sind mit dem Smartphone online, schauen sich auf Jobbörsen und Karri\n ereseiten um, nutzen S-Bahnfahrten, Mittagspausen und langweilige Meetin\n gs, um sich über Karriereoptionen zu informieren. Die Generation Z wird \n es gar nicht anders kennen.\u003c/p\u003e\u003cp\u003eIn unseren Expertenforen und Community\n  Treffen der Geschäftsführer und Personaler mit Fachkräfte-Bedarf aus Sa\n chsen tauschen wir uns zu solchen Trends in der Personalgewinnung regelm\n äßig aus. Dieses Expertenforum richtet sich an Geschäftsführer und Perso\n naler auf der Suche nach Informatikern, Maschinenbauern, Elektrotechnike\n rn sowie allgemein Ingeniure und Technikern. Eine Registrierung mit Frei\n schaltung ist erforderlich. Die Teilnahme ist kostenfrei.\u003c/p\u003e\u003cp\u003eWann: 26\n .01.2016 17-19Uhr\u003cbr /\u003eGastgeber: 3D-Micromac AG\u003cbr /\u003eOrt: Technologie-C\n ampus 8, 09126 Chemnitz\u003c/p\u003e\u003cp\u003e\u003cb\u003e\u003cspan class=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\n \u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch die 3D-Micromac AG\u003c/li\u003e\t\u003cli\u003eErfahrungsaustausc\n h über die am meisten genutzten Bewerberkanäle\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eKeynotes\u003c/\n b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eGeneration Z \u0026#8211; Eigenschaften der Arbeitnehmer von m\n orgen\u003c/li\u003e\t\u003cli\u003eKarrierewebseite mobil gestalten \u0026#8211; Tipps für Person\n aler\u003c/li\u003e\u003c/ul\u003e\u003cul\u003e\t\u003cli\u003eKurzes Community Update: Kennzahlen, neue Koopera\n tionen, neue Funktionalitäten\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eQuellen:\u003cbr /\u003e\u003csup class=\"foot\n note\" id=\"fnr1\"\u003e\u003ca href=\"#fn1\"\u003e1\u003c/a\u003e\u003c/sup\u003e Indeed Studie zur mobilen Job\n suche in Deutschland 2014\u003c/p\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210833,"Bezeichnung":"OR Soft Jänicke GmbH","Kommentar":null,"Typ":10,"Nutzername":"orsoft","Website":"http://www.orsoft.de/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:49.000+02:00"}}]},{"id":28,"name":"ebcw_20154","hashtag":"ebcw","title":"Expertenforum - Personalmanagement und 42. Community Training *SAX/3. Community Training *MITTE/Expertenforum - Trends in der Gewinnung von IT-Fachkräften in Berlin und Brandenburg/Expertenforum - Trends in der Gewinnung von IT-Fachkräften in Bayern","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eWir laden zur Vernetzung und zum Wissensaufbau rund um das Thema Personalmarketing und Personalgewinnung ein. In unseren regelmäßigen Expertenforen und Community Treffen der Geschäftsführer und Personaler mit Fachkräfte-Bedarf aus Sachsen tauschen wir uns zu Trends in der Personalgewinnung aus. Dieses Expertenforum richtet sich an Geschäftsführer und Personaler auf der Suche nach Informatikern, Maschinenbauern, Elektrotechnikern sowie allgemein Ingeniure und Technikern. Eine Registrierung mit Freischaltung ist erforderlich. Die Teilnahme ist kostenfrei.\u003c/p\u003e\n\u003cp\u003eWann: 29.09.2015 17-19Uhr\u003cbr /\u003e\nGastgeber: Communardo Software GmbH\u003cbr /\u003e\nOrt: Kleiststrasse 10a, 01129 Dresden\u003c/p\u003e\n\u003cp\u003e\u003cb\u003e\u003cspan class=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eBegrüßung durch die Communardo Software GmbH\u003c/li\u003e\n\t\u003cli\u003eErfahrungsaustausch über die am meist genutzten Bewerberkanäle\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cb\u003eKeyNote Vortrag \u0026#8211; gewünschtes Sonderthema:\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eVortrag \u0026#8220;Suchen Frauen anders als Männer; Seniors als Juniors?\u0026#8221;, Prof. Dr. Jörg Klukas, \u003cspan class=\"caps\"\u003eFOM\u003c/span\u003e Leipzig\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cb\u003eDiese Weiterentwicklungen verbessern Ihre Personalarbeit\u003c/b\u003e\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eRelauch \u0026#8220;Faire-Karriere.de\u0026#8221; \u0026#8211; Bewerber überzeugen durch Einblicke in das Unternehmen\u003c/li\u003e\n\t\u003cli\u003eNeuer Service: HRFilter \u0026#8211; Aktuelle News zum Personalmanagement mit speziellen Filtermöglichkeiten\u003c/li\u003e\n\t\u003cli\u003eAuswertung der häufigster Suchanfragen \u0026#8211; Diese Keywords bringen Ihre Anzeige nach vorn\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2015-09-03T16:00:00.000+02:00","finish":"2015-09-30T19:00:00.000+02:00","visible":true,"is_open_network":false,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/28/register","show_url":"https://www.empfehlungsbund.de/events/28","events":[{"id":56,"display_line":"29.09.2015 - 17 bis 19:00 Uhr Dresden - Expertenforum - Personalmanagement und 42. Community Training *SAX - Gastgeber: Communardo Software GmbH ","subtitle":"Expertenforum - Personalmanagement und 42. Community Training *SAX","city":"Dresden","start":"2015-09-29T17:00:00.000+02:00","finish":"2015-09-29T19:00:00.000+02:00","address":"Kleiststrasse 10a, 01129 Dresden","event_host":"Communardo Software GmbH ","lat":51.0867,"lon":13.7283,"community_training_id":19,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20150329T020000\nRDATE:20150329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20150929T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20150929T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wir laden zur Vernetzung und zum Wissensaufbau rund um das Th\n ema Personalmarketing und Personalgewinnung ein. In unseren regelmäßigen\n  Expertenforen und Community Treffen der Geschäftsführer und Personaler \n mit Fachkräfte-Bedarf aus Sachsen tauschen wir uns zu Trends in der Pers\n onalgewinnung aus. Dieses Expertenforum richtet sich an Geschäftsführer \n und Personaler auf der Suche nach Informatikern\\, Maschinenbauern\\, Elek\n trotechnikern sowie allgemein Ingeniure und Technikern. Eine Registrieru\n ng mit Freischaltung ist erforderlich. Die Teilnahme ist kostenfrei.\\nWa\n nn: 29.09.2015 17-19Uhr\\nGastgeber: Communardo Software GmbH\\nOrt: Kleis\n tstrasse 10a\\, 01129 Dresden\\nAGENDA\\n\\n\t* Begrüßung durch die Communard\n o Software GmbH\\n\t* Erfahrungsaustausch über die am meist genutzten Bewe\n rberkanäle\\n\\nKeyNote Vortrag – gewünschtes Sonderthema:\\n\\n\t* Vortrag “\n Suchen Frauen anders als Männer\\; Seniors als Juniors?”\\, Prof. Dr. Jörg\n  Klukas\\, FOM Leipzig\\n\\nDiese Weiterentwicklungen verbessern Ihre Perso\n nalarbeit\\n\\n\t* Relauch “Faire-Karriere.de” – Bewerber überzeugen durch \n Einblicke in das Unternehmen\\n\t* Neuer Service: HRFilter – Aktuelle News\n  zum Personalmanagement mit speziellen Filtermöglichkeiten\\n\t* Auswertun\n g der häufigster Suchanfragen – Diese Keywords bringen Ihre Anzeige nach\n  vorn\\n\\n\nURL:https://www.empfehlungsbund.de/events/28\nSUMMARY:Expertenforum - Personalmanagement und 42. Community Training *SA\n X/3. Community Training *MITTE/Expertenforum - Trends in der Gewinnung v\n on IT-Fachkräften in Berlin und Brandenburg/Expertenforum - Trends in de\n r Gewinnung von IT-Fachkräften in Bayern\nORGANIZER;CN=Communardo Software GmbH  / Empfehlungsbund.de:https://www.e\n mpfehlungsbund.de/events/28\nATTACH:https://www.empfehlungsbund.de/events/28\nLOCATION:Communardo Software GmbH \\, Kleiststrasse 10a\\, 01129 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eWir laden zur Vernetzung und zu\n m Wissensaufbau rund um das Thema Personalmarketing und Personalgewinnun\n g ein. In unseren regelmäßigen Expertenforen und Community Treffen der G\n eschäftsführer und Personaler mit Fachkräfte-Bedarf aus Sachsen tauschen\n  wir uns zu Trends in der Personalgewinnung aus. Dieses Expertenforum ri\n chtet sich an Geschäftsführer und Personaler auf der Suche nach Informat\n ikern, Maschinenbauern, Elektrotechnikern sowie allgemein Ingeniure und \n Technikern. Eine Registrierung mit Freischaltung ist erforderlich. Die T\n eilnahme ist kostenfrei.\u003c/p\u003e\u003cp\u003eWann: 29.09.2015 17-19Uhr\u003cbr /\u003eGastgeber:\n  Communardo Software GmbH\u003cbr /\u003eOrt: Kleiststrasse 10a, 01129 Dresden\u003c/p\u003e\n \u003cp\u003e\u003cb\u003e\u003cspan class=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch d\n ie Communardo Software GmbH\u003c/li\u003e\t\u003cli\u003eErfahrungsaustausch über die am mei\n st genutzten Bewerberkanäle\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eKeyNote Vortrag \u0026#8211; gewün\n schtes Sonderthema:\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eVortrag \u0026#8220;Suchen Frauen anders \n als Männer; Seniors als Juniors?\u0026#8221;, Prof. Dr. Jörg Klukas, \u003cspan cl\n ass=\"caps\"\u003eFOM\u003c/span\u003e Leipzig\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eDiese Weiterentwicklungen v\n erbessern Ihre Personalarbeit\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eRelauch \u0026#8220;Faire-Karri\n ere.de\u0026#8221; \u0026#8211; Bewerber überzeugen durch Einblicke in das Unterne\n hmen\u003c/li\u003e\t\u003cli\u003eNeuer Service: HRFilter \u0026#8211; Aktuelle News zum Personal\n management mit speziellen Filtermöglichkeiten\u003c/li\u003e\t\u003cli\u003eAuswertung der hä\n ufigster Suchanfragen \u0026#8211; Diese Keywords bringen Ihre Anzeige nach v\n orn\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210009,"Bezeichnung":"Communardo Software GmbH ","Kommentar":"","Typ":10,"Nutzername":"communardo","Website":"https://www.communardo.de/karriere/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:34.000+02:00"}},{"id":57,"display_line":"30.09.2015 - 17 bis 19:00 Uhr Leipzig - Expertenforum - Personalmanagement und 43. Community Training *MITTE - Gastgeber: Händlerbund e.V.","subtitle":"Expertenforum - Personalmanagement und 43. Community Training *MITTE","city":"Leipzig","start":"2015-09-30T17:00:00.000+02:00","finish":"2015-09-30T19:00:00.000+02:00","address":"Torgauer Straße  233, 04347 Leipzig","event_host":"Händlerbund e.V.","lat":51.3625,"lon":12.4465,"community_training_id":20,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20150329T020000\nRDATE:20150329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20150930T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20150930T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wir laden zur Vernetzung und zum Wissensaufbau rund um das Th\n ema Personalmarketing und Personalgewinnung ein. In unseren regelmäßigen\n  Expertenforen und Community Treffen der Geschäftsführer und Personaler \n mit Fachkräfte-Bedarf aus Sachsen tauschen wir uns zu Trends in der Pers\n onalgewinnung aus. Dieses Expertenforum richtet sich an Geschäftsführer \n und Personaler auf der Suche nach Informatikern\\, Maschinenbauern\\, Elek\n trotechnikern sowie allgemein Ingeniure und Technikern. Eine Registrieru\n ng mit Freischaltung ist erforderlich. Die Teilnahme ist kostenfrei.\\nWa\n nn: 29.09.2015 17-19Uhr\\nGastgeber: Communardo Software GmbH\\nOrt: Kleis\n tstrasse 10a\\, 01129 Dresden\\nAGENDA\\n\\n\t* Begrüßung durch die Communard\n o Software GmbH\\n\t* Erfahrungsaustausch über die am meist genutzten Bewe\n rberkanäle\\n\\nKeyNote Vortrag – gewünschtes Sonderthema:\\n\\n\t* Vortrag “\n Suchen Frauen anders als Männer\\; Seniors als Juniors?”\\, Prof. Dr. Jörg\n  Klukas\\, FOM Leipzig\\n\\nDiese Weiterentwicklungen verbessern Ihre Perso\n nalarbeit\\n\\n\t* Relauch “Faire-Karriere.de” – Bewerber überzeugen durch \n Einblicke in das Unternehmen\\n\t* Neuer Service: HRFilter – Aktuelle News\n  zum Personalmanagement mit speziellen Filtermöglichkeiten\\n\t* Auswertun\n g der häufigster Suchanfragen – Diese Keywords bringen Ihre Anzeige nach\n  vorn\\n\\n\nURL:https://www.empfehlungsbund.de/events/28\nSUMMARY:Expertenforum - Personalmanagement und 42. Community Training *SA\n X/3. Community Training *MITTE/Expertenforum - Trends in der Gewinnung v\n on IT-Fachkräften in Berlin und Brandenburg/Expertenforum - Trends in de\n r Gewinnung von IT-Fachkräften in Bayern\nORGANIZER;CN=Händlerbund e.V. / Empfehlungsbund.de:https://www.empfehlung\n sbund.de/events/28\nATTACH:https://www.empfehlungsbund.de/events/28\nLOCATION:Händlerbund e.V.\\, Torgauer Straße  233\\, 04347 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eWir laden zur Vernetzung und zu\n m Wissensaufbau rund um das Thema Personalmarketing und Personalgewinnun\n g ein. In unseren regelmäßigen Expertenforen und Community Treffen der G\n eschäftsführer und Personaler mit Fachkräfte-Bedarf aus Sachsen tauschen\n  wir uns zu Trends in der Personalgewinnung aus. Dieses Expertenforum ri\n chtet sich an Geschäftsführer und Personaler auf der Suche nach Informat\n ikern, Maschinenbauern, Elektrotechnikern sowie allgemein Ingeniure und \n Technikern. Eine Registrierung mit Freischaltung ist erforderlich. Die T\n eilnahme ist kostenfrei.\u003c/p\u003e\u003cp\u003eWann: 29.09.2015 17-19Uhr\u003cbr /\u003eGastgeber:\n  Communardo Software GmbH\u003cbr /\u003eOrt: Kleiststrasse 10a, 01129 Dresden\u003c/p\u003e\n \u003cp\u003e\u003cb\u003e\u003cspan class=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch d\n ie Communardo Software GmbH\u003c/li\u003e\t\u003cli\u003eErfahrungsaustausch über die am mei\n st genutzten Bewerberkanäle\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eKeyNote Vortrag \u0026#8211; gewün\n schtes Sonderthema:\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eVortrag \u0026#8220;Suchen Frauen anders \n als Männer; Seniors als Juniors?\u0026#8221;, Prof. Dr. Jörg Klukas, \u003cspan cl\n ass=\"caps\"\u003eFOM\u003c/span\u003e Leipzig\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eDiese Weiterentwicklungen v\n erbessern Ihre Personalarbeit\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eRelauch \u0026#8220;Faire-Karri\n ere.de\u0026#8221; \u0026#8211; Bewerber überzeugen durch Einblicke in das Unterne\n hmen\u003c/li\u003e\t\u003cli\u003eNeuer Service: HRFilter \u0026#8211; Aktuelle News zum Personal\n management mit speziellen Filtermöglichkeiten\u003c/li\u003e\t\u003cli\u003eAuswertung der hä\n ufigster Suchanfragen \u0026#8211; Diese Keywords bringen Ihre Anzeige nach v\n orn\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9220052,"Bezeichnung":"Händlerbund Management AG","Kommentar":"kostenfreie Mitgliedschaft als Partner, dafür AGBs von kanaleo.de gemacht. Sollte die dann auch für IT*.de, MINTsax.de und it-jobs-und-stellen.de machen; werden auch in CRM als Partner geführt, um Verwirrungen zu vermeiden","Typ":10,"Nutzername":"haendlerbund","Website":"https://karriere.haendlerbund.de/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:59:52.000+02:00"}},{"id":58,"display_line":"10.09.2015 - 16 bis 19:00 Uhr Berlin - Expertenforum - Trends in der Gewinnung von IT-Fachkräften in Berlin und Brandenburg - Gastgeber: Pokeshot GmbH (vor 2016 \"Pokeshot///SMZ GmbH \u0026 Co. KG\")","subtitle":"Expertenforum - Trends in der Gewinnung von IT-Fachkräften in Berlin und Brandenburg","city":"Berlin","start":"2015-09-10T16:00:00.000+02:00","finish":"2015-09-10T19:00:00.000+02:00","address":"Am Studio  2, 12489 Berlin","event_host":"Pokeshot GmbH (vor 2016 \"Pokeshot///SMZ GmbH \u0026 Co. KG\")","lat":52.4313,"lon":13.5386,"community_training_id":21,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20150329T020000\nRDATE:20150329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20150910T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20150910T160000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wir laden zur Vernetzung und zum Wissensaufbau rund um das Th\n ema Personalmarketing und Personalgewinnung ein. In unseren regelmäßigen\n  Expertenforen und Community Treffen der Geschäftsführer und Personaler \n mit Fachkräfte-Bedarf aus Sachsen tauschen wir uns zu Trends in der Pers\n onalgewinnung aus. Dieses Expertenforum richtet sich an Geschäftsführer \n und Personaler auf der Suche nach Informatikern\\, Maschinenbauern\\, Elek\n trotechnikern sowie allgemein Ingeniure und Technikern. Eine Registrieru\n ng mit Freischaltung ist erforderlich. Die Teilnahme ist kostenfrei.\\nWa\n nn: 29.09.2015 17-19Uhr\\nGastgeber: Communardo Software GmbH\\nOrt: Kleis\n tstrasse 10a\\, 01129 Dresden\\nAGENDA\\n\\n\t* Begrüßung durch die Communard\n o Software GmbH\\n\t* Erfahrungsaustausch über die am meist genutzten Bewe\n rberkanäle\\n\\nKeyNote Vortrag – gewünschtes Sonderthema:\\n\\n\t* Vortrag “\n Suchen Frauen anders als Männer\\; Seniors als Juniors?”\\, Prof. Dr. Jörg\n  Klukas\\, FOM Leipzig\\n\\nDiese Weiterentwicklungen verbessern Ihre Perso\n nalarbeit\\n\\n\t* Relauch “Faire-Karriere.de” – Bewerber überzeugen durch \n Einblicke in das Unternehmen\\n\t* Neuer Service: HRFilter – Aktuelle News\n  zum Personalmanagement mit speziellen Filtermöglichkeiten\\n\t* Auswertun\n g der häufigster Suchanfragen – Diese Keywords bringen Ihre Anzeige nach\n  vorn\\n\\n\nURL:https://www.empfehlungsbund.de/events/28\nSUMMARY:Expertenforum - Personalmanagement und 42. Community Training *SA\n X/3. Community Training *MITTE/Expertenforum - Trends in der Gewinnung v\n on IT-Fachkräften in Berlin und Brandenburg/Expertenforum - Trends in de\n r Gewinnung von IT-Fachkräften in Bayern\nORGANIZER;CN=Pokeshot GmbH (vor 2016 \"Pokeshot///SMZ GmbH \u0026 Co. KG\") / Em\n pfehlungsbund.de:https://www.empfehlungsbund.de/events/28\nATTACH:https://www.empfehlungsbund.de/events/28\nLOCATION:Pokeshot GmbH (vor 2016 \"Pokeshot///SMZ GmbH \u0026 Co. KG\")\\, Am Stu\n dio  2\\, 12489 Berlin\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eWir laden zur Vernetzung und zu\n m Wissensaufbau rund um das Thema Personalmarketing und Personalgewinnun\n g ein. In unseren regelmäßigen Expertenforen und Community Treffen der G\n eschäftsführer und Personaler mit Fachkräfte-Bedarf aus Sachsen tauschen\n  wir uns zu Trends in der Personalgewinnung aus. Dieses Expertenforum ri\n chtet sich an Geschäftsführer und Personaler auf der Suche nach Informat\n ikern, Maschinenbauern, Elektrotechnikern sowie allgemein Ingeniure und \n Technikern. Eine Registrierung mit Freischaltung ist erforderlich. Die T\n eilnahme ist kostenfrei.\u003c/p\u003e\u003cp\u003eWann: 29.09.2015 17-19Uhr\u003cbr /\u003eGastgeber:\n  Communardo Software GmbH\u003cbr /\u003eOrt: Kleiststrasse 10a, 01129 Dresden\u003c/p\u003e\n \u003cp\u003e\u003cb\u003e\u003cspan class=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch d\n ie Communardo Software GmbH\u003c/li\u003e\t\u003cli\u003eErfahrungsaustausch über die am mei\n st genutzten Bewerberkanäle\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eKeyNote Vortrag \u0026#8211; gewün\n schtes Sonderthema:\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eVortrag \u0026#8220;Suchen Frauen anders \n als Männer; Seniors als Juniors?\u0026#8221;, Prof. Dr. Jörg Klukas, \u003cspan cl\n ass=\"caps\"\u003eFOM\u003c/span\u003e Leipzig\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eDiese Weiterentwicklungen v\n erbessern Ihre Personalarbeit\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eRelauch \u0026#8220;Faire-Karri\n ere.de\u0026#8221; \u0026#8211; Bewerber überzeugen durch Einblicke in das Unterne\n hmen\u003c/li\u003e\t\u003cli\u003eNeuer Service: HRFilter \u0026#8211; Aktuelle News zum Personal\n management mit speziellen Filtermöglichkeiten\u003c/li\u003e\t\u003cli\u003eAuswertung der hä\n ufigster Suchanfragen \u0026#8211; Diese Keywords bringen Ihre Anzeige nach v\n orn\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9211981,"Bezeichnung":"Pokeshot GmbH ","Kommentar":"(vor 2016 \"Pokeshot///SMZ GmbH \u0026 Co. KG\")","Typ":10,"Nutzername":"pokeshot_smz","Website":"https://pokeshot.com/karriere/jobs/?lang=de","created_at":"2015-05-15T12:55:40.000+02:00","updated_at":"2021-09-30T11:07:26.000+02:00"}},{"id":59,"display_line":"03.09.2015 - 16 bis 19:00 Uhr München - Expertenforum - Trends in der Gewinnung von IT-Fachkräften in Bayern - Gastgeber: mgm technology partners GmbH","subtitle":"Expertenforum - Trends in der Gewinnung von IT-Fachkräften in Bayern","city":"München","start":"2015-09-03T16:00:00.000+02:00","finish":"2015-09-03T19:00:00.000+02:00","address":"Frankfurter Ring 105a, 80807 München","event_host":"mgm technology partners GmbH","lat":48.1882,"lon":11.5853,"community_training_id":22,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20150329T020000\nRDATE:20150329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20150903T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20150903T160000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wir laden zur Vernetzung und zum Wissensaufbau rund um das Th\n ema Personalmarketing und Personalgewinnung ein. In unseren regelmäßigen\n  Expertenforen und Community Treffen der Geschäftsführer und Personaler \n mit Fachkräfte-Bedarf aus Sachsen tauschen wir uns zu Trends in der Pers\n onalgewinnung aus. Dieses Expertenforum richtet sich an Geschäftsführer \n und Personaler auf der Suche nach Informatikern\\, Maschinenbauern\\, Elek\n trotechnikern sowie allgemein Ingeniure und Technikern. Eine Registrieru\n ng mit Freischaltung ist erforderlich. Die Teilnahme ist kostenfrei.\\nWa\n nn: 29.09.2015 17-19Uhr\\nGastgeber: Communardo Software GmbH\\nOrt: Kleis\n tstrasse 10a\\, 01129 Dresden\\nAGENDA\\n\\n\t* Begrüßung durch die Communard\n o Software GmbH\\n\t* Erfahrungsaustausch über die am meist genutzten Bewe\n rberkanäle\\n\\nKeyNote Vortrag – gewünschtes Sonderthema:\\n\\n\t* Vortrag “\n Suchen Frauen anders als Männer\\; Seniors als Juniors?”\\, Prof. Dr. Jörg\n  Klukas\\, FOM Leipzig\\n\\nDiese Weiterentwicklungen verbessern Ihre Perso\n nalarbeit\\n\\n\t* Relauch “Faire-Karriere.de” – Bewerber überzeugen durch \n Einblicke in das Unternehmen\\n\t* Neuer Service: HRFilter – Aktuelle News\n  zum Personalmanagement mit speziellen Filtermöglichkeiten\\n\t* Auswertun\n g der häufigster Suchanfragen – Diese Keywords bringen Ihre Anzeige nach\n  vorn\\n\\n\nURL:https://www.empfehlungsbund.de/events/28\nSUMMARY:Expertenforum - Personalmanagement und 42. Community Training *SA\n X/3. Community Training *MITTE/Expertenforum - Trends in der Gewinnung v\n on IT-Fachkräften in Berlin und Brandenburg/Expertenforum - Trends in de\n r Gewinnung von IT-Fachkräften in Bayern\nORGANIZER;CN=mgm technology partners GmbH / Empfehlungsbund.de:https://ww\n w.empfehlungsbund.de/events/28\nATTACH:https://www.empfehlungsbund.de/events/28\nLOCATION:mgm technology partners GmbH\\, Frankfurter Ring 105a\\, 80807 Mün\n chen\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eWir laden zur Vernetzung und zu\n m Wissensaufbau rund um das Thema Personalmarketing und Personalgewinnun\n g ein. In unseren regelmäßigen Expertenforen und Community Treffen der G\n eschäftsführer und Personaler mit Fachkräfte-Bedarf aus Sachsen tauschen\n  wir uns zu Trends in der Personalgewinnung aus. Dieses Expertenforum ri\n chtet sich an Geschäftsführer und Personaler auf der Suche nach Informat\n ikern, Maschinenbauern, Elektrotechnikern sowie allgemein Ingeniure und \n Technikern. Eine Registrierung mit Freischaltung ist erforderlich. Die T\n eilnahme ist kostenfrei.\u003c/p\u003e\u003cp\u003eWann: 29.09.2015 17-19Uhr\u003cbr /\u003eGastgeber:\n  Communardo Software GmbH\u003cbr /\u003eOrt: Kleiststrasse 10a, 01129 Dresden\u003c/p\u003e\n \u003cp\u003e\u003cb\u003e\u003cspan class=\"caps\"\u003eAGENDA\u003c/span\u003e\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch d\n ie Communardo Software GmbH\u003c/li\u003e\t\u003cli\u003eErfahrungsaustausch über die am mei\n st genutzten Bewerberkanäle\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eKeyNote Vortrag \u0026#8211; gewün\n schtes Sonderthema:\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eVortrag \u0026#8220;Suchen Frauen anders \n als Männer; Seniors als Juniors?\u0026#8221;, Prof. Dr. Jörg Klukas, \u003cspan cl\n ass=\"caps\"\u003eFOM\u003c/span\u003e Leipzig\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cb\u003eDiese Weiterentwicklungen v\n erbessern Ihre Personalarbeit\u003c/b\u003e\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eRelauch \u0026#8220;Faire-Karri\n ere.de\u0026#8221; \u0026#8211; Bewerber überzeugen durch Einblicke in das Unterne\n hmen\u003c/li\u003e\t\u003cli\u003eNeuer Service: HRFilter \u0026#8211; Aktuelle News zum Personal\n management mit speziellen Filtermöglichkeiten\u003c/li\u003e\t\u003cli\u003eAuswertung der hä\n ufigster Suchanfragen \u0026#8211; Diese Keywords bringen Ihre Anzeige nach v\n orn\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210011,"Bezeichnung":"mgm technology partners GmbH","Kommentar":"Kontakte zu Internetzeitungen: Leipziger Internet Zeitung, Herr Ralf Julke, Herr Robert Dobschütz, r.dobschuetz@l-iz.de !!! Umfirmierung: der Software \u0026 Firends GmbH zu mgm technology partners GmbH !!!","Typ":10,"Nutzername":"mgm-tp","Website":"https://career.mgm-tp.com/de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:34.000+02:00"}}]},{"id":27,"name":"oxfp2015","hashtag":"ofxp","title":"40/41. Community Training *SAX/MITTE und 5. Geburtstag ITmitte","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eWir laden zur Vernetzung und zum Wissensaufbau rund um das Thema Personalmarketing und Personalgewinnung ein.\u003c/p\u003e\n\u003cp\u003eAgenda:\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eBegrüßung durch den Gastgeber, Vorstellungsrunde\u003c/li\u003e\n\t\u003cli\u003eKurzes Community Update: Kennzahlen, neue Kooperationen, neue Funktionalitäten\u003c/li\u003e\n\t\u003cli\u003eImpulsvortrag: Richtige Anwendung und Ausnahmeregelungen des Mindestlohns bei Mitarbeitern und Studierenden\u003c/li\u003e\n\t\u003cli\u003eErgebnisbericht Gehaltsbenchmark jobwert.info 2015 \u0026#8211; für Ingenieure und InformatikerInnen in Sachsen\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eDieses Community Training richtet sich an die Mitglieder der Communitys www.ITsax.de, www.MINTsax.de und www.OFFICEsax.de und alle interessierten Unternehmen, sowie Förderer unserer Communitys. Eingeladen sind alle Partner, Förderer und Interessenten nach vorheriger Anmeldung und Bestätigung.\u003c/p\u003e\n\u003cp\u003eGastgeber: Trans4mation\u003cbr /\u003e\nOrt: Dresden\u003c/p\u003e","agenda":null,"start":"2015-05-26T16:00:00.000+02:00","finish":"2015-05-27T22:00:00.000+02:00","visible":true,"is_open_network":true,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/27/register","show_url":"https://www.empfehlungsbund.de/events/27","events":[{"id":54,"display_line":"26.05.2015 - 16 bis 19:00 Uhr Dresden - 40. Community Training *SAX - Gastgeber: Trans4mation IT GmbH","subtitle":"40. Community Training *SAX","city":"Dresden","start":"2015-05-26T16:00:00.000+02:00","finish":"2015-05-26T19:00:00.000+02:00","address":"Glashütter Str. 55, 01309 Dresden","event_host":"Trans4mation IT GmbH","lat":51.0422,"lon":13.7941,"community_training_id":17,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20150329T020000\nRDATE:20150329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20150526T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20150526T160000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wir laden zur Vernetzung und zum Wissensaufbau rund um das Th\n ema Personalmarketing und Personalgewinnung ein.\\nAgenda:\\n\\n\t* Begrüßun\n g durch den Gastgeber\\, Vorstellungsrunde\\n\t* Kurzes Community Update: K\n ennzahlen\\, neue Kooperationen\\, neue Funktionalitäten\\n\t* Impulsvortrag\n : Richtige Anwendung und Ausnahmeregelungen des Mindestlohns bei Mitarbe\n itern und Studierenden\\n\t* Ergebnisbericht Gehaltsbenchmark jobwert.info\n  2015 – für Ingenieure und InformatikerInnen in Sachsen\\n\\nDieses Commun\n ity Training richtet sich an die Mitglieder der Communitys www.ITsax.de\\\n , www.MINTsax.de und www.OFFICEsax.de und alle interessierten Unternehme\n n\\, sowie Förderer unserer Communitys. Eingeladen sind alle Partner\\, Fö\n rderer und Interessenten nach vorheriger Anmeldung und Bestätigung.\\nGas\n tgeber: Trans4mation\\nOrt: Dresden\\n\nURL:https://www.empfehlungsbund.de/events/27\nSUMMARY:40/41. Community Training *SAX/MITTE und 5. Geburtstag ITmitte\nORGANIZER;CN=Trans4mation IT GmbH / Empfehlungsbund.de:https://www.empfeh\n lungsbund.de/events/27\nATTACH:https://www.empfehlungsbund.de/events/27\nLOCATION:Trans4mation IT GmbH\\, Glashütter Str. 55\\, 01309 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eWir laden zur Vernetzung und zu\n m Wissensaufbau rund um das Thema Personalmarketing und Personalgewinnun\n g ein.\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch den Gastgeber, Vorstell\n ungsrunde\u003c/li\u003e\t\u003cli\u003eKurzes Community Update: Kennzahlen, neue Kooperation\n en, neue Funktionalitäten\u003c/li\u003e\t\u003cli\u003eImpulsvortrag: Richtige Anwendung und\n  Ausnahmeregelungen des Mindestlohns bei Mitarbeitern und Studierenden\u003c/\n li\u003e\t\u003cli\u003eErgebnisbericht Gehaltsbenchmark jobwert.info 2015 \u0026#8211; für I\n ngenieure und InformatikerInnen in Sachsen\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eDieses Community \n Training richtet sich an die Mitglieder der Communitys www.ITsax.de, www\n .MINTsax.de und www.OFFICEsax.de und alle interessierten Unternehmen, so\n wie Förderer unserer Communitys. Eingeladen sind alle Partner, Förderer \n und Interessenten nach vorheriger Anmeldung und Bestätigung.\u003c/p\u003e\u003cp\u003eGastg\n eber: Trans4mation\u003cbr /\u003eOrt: Dresden\u003c/p\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210040,"Bezeichnung":"Trans4mation IT GmbH","Kommentar":"","Typ":10,"Nutzername":"trans4mation","Website":"https://www.trans4mation.de/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-09-30T11:06:20.000+02:00"}},{"id":55,"display_line":"27.05.2015 - 15 bis 22:00 Uhr Leipzig - 41. Community Training *MITTE und 5. Geburtstag ITmitte - Gastgeber: Softwareforen Leipzig GmbH","subtitle":"41. Community Training *MITTE und 5. Geburtstag ITmitte","city":"Leipzig","start":"2015-05-27T15:00:00.000+02:00","finish":"2015-05-27T22:00:00.000+02:00","address":"Hainstraße 16, 04109 Leipzig","event_host":"Softwareforen Leipzig GmbH","lat":51.3425,"lon":12.3737,"community_training_id":18,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20150329T020000\nRDATE:20150329T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20150527T220000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20150527T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wir laden zur Vernetzung und zum Wissensaufbau rund um das Th\n ema Personalmarketing und Personalgewinnung ein.\\nAgenda:\\n\\n\t* Begrüßun\n g durch den Gastgeber\\, Vorstellungsrunde\\n\t* Kurzes Community Update: K\n ennzahlen\\, neue Kooperationen\\, neue Funktionalitäten\\n\t* Impulsvortrag\n : Richtige Anwendung und Ausnahmeregelungen des Mindestlohns bei Mitarbe\n itern und Studierenden\\n\t* Ergebnisbericht Gehaltsbenchmark jobwert.info\n  2015 – für Ingenieure und InformatikerInnen in Sachsen\\n\\nDieses Commun\n ity Training richtet sich an die Mitglieder der Communitys www.ITsax.de\\\n , www.MINTsax.de und www.OFFICEsax.de und alle interessierten Unternehme\n n\\, sowie Förderer unserer Communitys. Eingeladen sind alle Partner\\, Fö\n rderer und Interessenten nach vorheriger Anmeldung und Bestätigung.\\nGas\n tgeber: Trans4mation\\nOrt: Dresden\\n\nURL:https://www.empfehlungsbund.de/events/27\nSUMMARY:40/41. Community Training *SAX/MITTE und 5. Geburtstag ITmitte\nORGANIZER;CN=Softwareforen Leipzig GmbH / Empfehlungsbund.de:https://www.\n empfehlungsbund.de/events/27\nATTACH:https://www.empfehlungsbund.de/events/27\nLOCATION:Softwareforen Leipzig GmbH\\, Hainstraße 16\\, 04109 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eWir laden zur Vernetzung und zu\n m Wissensaufbau rund um das Thema Personalmarketing und Personalgewinnun\n g ein.\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch den Gastgeber, Vorstell\n ungsrunde\u003c/li\u003e\t\u003cli\u003eKurzes Community Update: Kennzahlen, neue Kooperation\n en, neue Funktionalitäten\u003c/li\u003e\t\u003cli\u003eImpulsvortrag: Richtige Anwendung und\n  Ausnahmeregelungen des Mindestlohns bei Mitarbeitern und Studierenden\u003c/\n li\u003e\t\u003cli\u003eErgebnisbericht Gehaltsbenchmark jobwert.info 2015 \u0026#8211; für I\n ngenieure und InformatikerInnen in Sachsen\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eDieses Community \n Training richtet sich an die Mitglieder der Communitys www.ITsax.de, www\n .MINTsax.de und www.OFFICEsax.de und alle interessierten Unternehmen, so\n wie Förderer unserer Communitys. Eingeladen sind alle Partner, Förderer \n und Interessenten nach vorheriger Anmeldung und Bestätigung.\u003c/p\u003e\u003cp\u003eGastg\n eber: Trans4mation\u003cbr /\u003eOrt: Dresden\u003c/p\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210709,"Bezeichnung":"SF Holding GmbH","Kommentar":"Umfirmierung. Ehemals Softwareforen Leipzig GmbH","Typ":10,"Nutzername":"softwareforen","Website":"https://www.softwareforen.de/portal/Startseite.xhtml","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-10T20:18:11.000+02:00"}}]},{"id":25,"name":"ebcw_20151","hashtag":"ebcw","title":"38/39. Community Training *SAX/MITTE","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eWir laden zur Vernetzung und des Wissensaufbaus rund um das Thema Personalmarketing und Personalgewinnung ein. Dieses Community Tranining richtet an die Mitglieder der Communitys www.ITsax.de, www.MINTsax.de und www.OFFICEsax.de. Eingeladen sind alle Partner nach vorheriger Anmeldung und Bestätigung.\u003c/p\u003e\n\u003cp\u003eGastgeber: noch offen \u003cbr /\u003e\nOrt: Dresden\u003c/p\u003e\n\u003cp\u003eAgenda:\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eBegrüßung durch den Gastgeber, Vorstellungsrunde\u003c/li\u003e\n\t\u003cli\u003eJahresrückblick der Ergebnisse unserer Communitys 2014\u003c/li\u003e\n\t\u003cli\u003eVorstellung von technischen Neuerungen zur Verbesserung Ihres Personalmarketings\u003c/li\u003e\n\t\u003cli\u003eMitarbeiter-werben-Mitarbeiter 2.0: Entwicklung zu Job-Publisher und Contact-Finder \u0026#8211; Social Media Recruiting\u003c/li\u003e\n\t\u003cli\u003eNeuerungen zum Gehaltsbenchmark 2015 \u0026#8211; jobwert.de\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2015-01-27T17:00:00.000+01:00","finish":"2015-01-28T19:00:00.000+01:00","visible":true,"is_open_network":false,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/25/register","show_url":"https://www.empfehlungsbund.de/events/25","events":[{"id":51,"display_line":"27.01.2015 - 17 bis 19:00 Uhr Dresden - 38. Community Training *SAX - Gastgeber: ENTIRETEC AG","subtitle":"38. Community Training *SAX","city":"Dresden","start":"2015-01-27T17:00:00.000+01:00","finish":"2015-01-27T19:00:00.000+01:00","address":"Pforzheimer Strasse 33, 01189 Dresden","event_host":"ENTIRETEC AG","lat":51.0079,"lon":13.7,"community_training_id":14,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20141026T030000\nRDATE:20141026T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20150127T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20150127T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wir laden zur Vernetzung und des Wissensaufbaus rund um das T\n hema Personalmarketing und Personalgewinnung ein. Dieses Community Trani\n ning richtet an die Mitglieder der Communitys www.ITsax.de\\, www.MINTsax\n .de und www.OFFICEsax.de. Eingeladen sind alle Partner nach vorheriger A\n nmeldung und Bestätigung.\\nGastgeber: noch offen \\nOrt: Dresden\\nAgenda:\n \\n\\n\t* Begrüßung durch den Gastgeber\\, Vorstellungsrunde\\n\t* Jahresrückb\n lick der Ergebnisse unserer Communitys 2014\\n\t* Vorstellung von technisc\n hen Neuerungen zur Verbesserung Ihres Personalmarketings\\n\t* Mitarbeiter\n -werben-Mitarbeiter 2.0: Entwicklung zu Job-Publisher und Contact-Finder\n  – Social Media Recruiting\\n\t* Neuerungen zum Gehaltsbenchmark 2015 – jo\n bwert.de\\n\\n\nURL:https://www.empfehlungsbund.de/events/25\nSUMMARY:38/39. Community Training *SAX/MITTE\nORGANIZER;CN=ENTIRETEC AG / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/25\nATTACH:https://www.empfehlungsbund.de/events/25\nLOCATION:ENTIRETEC AG\\, Pforzheimer Strasse 33\\, 01189 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eWir laden zur Vernetzung und de\n s Wissensaufbaus rund um das Thema Personalmarketing und Personalgewinnu\n ng ein. Dieses Community Tranining richtet an die Mitglieder der Communi\n tys www.ITsax.de, www.MINTsax.de und www.OFFICEsax.de. Eingeladen sind a\n lle Partner nach vorheriger Anmeldung und Bestätigung.\u003c/p\u003e\u003cp\u003eGastgeber: \n noch offen \u003cbr /\u003eOrt: Dresden\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch \n den Gastgeber, Vorstellungsrunde\u003c/li\u003e\t\u003cli\u003eJahresrückblick der Ergebnisse\n  unserer Communitys 2014\u003c/li\u003e\t\u003cli\u003eVorstellung von technischen Neuerungen\n  zur Verbesserung Ihres Personalmarketings\u003c/li\u003e\t\u003cli\u003eMitarbeiter-werben-M\n itarbeiter 2.0: Entwicklung zu Job-Publisher und Contact-Finder \u0026#8211; \n Social Media Recruiting\u003c/li\u003e\t\u003cli\u003eNeuerungen zum Gehaltsbenchmark 2015 \u0026#\n 8211; jobwert.de\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210082,"Bezeichnung":"ENTIRETEC AG","Kommentar":"An Laura Wittig keine E-Mail senden. Habe daher E-Mail-Adresse gelöscht.\r\n\r\nAlle zukünftigen Rechnungen etc. an e-invoices@entiretec.com senden. ","Typ":10,"Nutzername":"entiretec","Website":"https://www.entiretec.com/karriere/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:36.000+02:00"}},{"id":52,"display_line":"28.01.2015 - 17 bis 19:00 Uhr Leipzig - 39. Community Training *MITTE - Gastgeber: forcont business technology gmbh","subtitle":"39. Community Training *MITTE","city":"Leipzig","start":"2015-01-28T17:00:00.000+01:00","finish":"2015-01-28T19:00:00.000+01:00","address":"Nonnenstraße  39, 04229 Leipzig","event_host":"forcont business technology gmbh","lat":51.3256,"lon":12.338,"community_training_id":15,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20141026T030000\nRDATE:20141026T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20150128T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20150128T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Wir laden zur Vernetzung und des Wissensaufbaus rund um das T\n hema Personalmarketing und Personalgewinnung ein. Dieses Community Trani\n ning richtet an die Mitglieder der Communitys www.ITsax.de\\, www.MINTsax\n .de und www.OFFICEsax.de. Eingeladen sind alle Partner nach vorheriger A\n nmeldung und Bestätigung.\\nGastgeber: noch offen \\nOrt: Dresden\\nAgenda:\n \\n\\n\t* Begrüßung durch den Gastgeber\\, Vorstellungsrunde\\n\t* Jahresrückb\n lick der Ergebnisse unserer Communitys 2014\\n\t* Vorstellung von technisc\n hen Neuerungen zur Verbesserung Ihres Personalmarketings\\n\t* Mitarbeiter\n -werben-Mitarbeiter 2.0: Entwicklung zu Job-Publisher und Contact-Finder\n  – Social Media Recruiting\\n\t* Neuerungen zum Gehaltsbenchmark 2015 – jo\n bwert.de\\n\\n\nURL:https://www.empfehlungsbund.de/events/25\nSUMMARY:38/39. Community Training *SAX/MITTE\nORGANIZER;CN=forcont business technology gmbh / Empfehlungsbund.de:https:\n //www.empfehlungsbund.de/events/25\nATTACH:https://www.empfehlungsbund.de/events/25\nLOCATION:forcont business technology gmbh\\, Nonnenstraße  39\\, 04229 Leip\n zig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eWir laden zur Vernetzung und de\n s Wissensaufbaus rund um das Thema Personalmarketing und Personalgewinnu\n ng ein. Dieses Community Tranining richtet an die Mitglieder der Communi\n tys www.ITsax.de, www.MINTsax.de und www.OFFICEsax.de. Eingeladen sind a\n lle Partner nach vorheriger Anmeldung und Bestätigung.\u003c/p\u003e\u003cp\u003eGastgeber: \n noch offen \u003cbr /\u003eOrt: Dresden\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung durch \n den Gastgeber, Vorstellungsrunde\u003c/li\u003e\t\u003cli\u003eJahresrückblick der Ergebnisse\n  unserer Communitys 2014\u003c/li\u003e\t\u003cli\u003eVorstellung von technischen Neuerungen\n  zur Verbesserung Ihres Personalmarketings\u003c/li\u003e\t\u003cli\u003eMitarbeiter-werben-M\n itarbeiter 2.0: Entwicklung zu Job-Publisher und Contact-Finder \u0026#8211; \n Social Media Recruiting\u003c/li\u003e\t\u003cli\u003eNeuerungen zum Gehaltsbenchmark 2015 \u0026#\n 8211; jobwert.de\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210565,"Bezeichnung":"forcont business technology gmbh","Kommentar":"","Typ":10,"Nutzername":"forcont-gmbh","Website":"https://www.forcont.de/jobs/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:44.000+02:00"}}]},{"id":26,"name":"oxfp_14","hashtag":"ofxp","title":"Informationsabend - Fachkräftegewinnung im Gesundheitswesen","teaser":"","teaser_hrfilter":"","countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cdiv\u003ePersonalverantwortliche des sächsischen Gesundheitswesens treffen sich zum Gedankenaustausch, um moderne Wege und erfolgreiche Alternativen des Personalmarketings zu veranschaulichen\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e","agenda":"","start":"2014-10-14T17:00:00.000+02:00","finish":"2014-10-14T20:00:00.000+02:00","visible":true,"is_open_network":true,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/26/register","show_url":"https://www.empfehlungsbund.de/events/26","events":[{"id":53,"display_line":"14.10.2014 - 17 bis 19:00 Uhr Dresden - Informationsabend - Fachkräftegewinnung im Gesundheitswesen - Gastgeber: pludoni GmbH","subtitle":"Informationsabend - Fachkräftegewinnung im Gesundheitswesen","city":"Dresden","start":"2014-10-14T17:00:00.000+02:00","finish":"2014-10-14T19:00:00.000+02:00","address":"Fiedlerstraße 42, 01307 Dresden","event_host":"pludoni GmbH","lat":51.0541,"lon":13.7827,"community_training_id":16,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20140330T020000\nRDATE:20140330T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20141014T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20141014T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Personalverantwortliche des sächsischen Gesundheitswesens tre\n ffen sich zum Gedankenaustausch\\, um moderne Wege und erfolgreiche Alter\n nativen des Personalmarketings zu veranschaulichen\\n\\n\\n\\n\nURL:https://www.empfehlungsbund.de/events/26\nSUMMARY:Informationsabend - Fachkräftegewinnung im Gesundheitswesen\nORGANIZER;CN=pludoni GmbH / Empfehlungsbund.de:https://www.empfehlungsbun\n d.de/events/26\nATTACH:https://www.empfehlungsbund.de/events/26\nLOCATION:pludoni GmbH\\, Fiedlerstraße 42\\, 01307 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cdiv\u003ePersonalverantwortliche des s\n ächsischen Gesundheitswesens treffen sich zum Gedankenaustausch, um mode\n rne Wege und erfolgreiche Alternativen des Personalmarketings zu veransc\n haulichen\u003cbr\u003e\u003cbr\u003e\u003c/div\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9200000,"Bezeichnung":"pludoni GmbH","Kommentar":"","Typ":10,"Nutzername":"pludoni","Website":"https://www.pludoni.de/jobs","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-24T13:44:27.000+02:00"}}]},{"id":24,"name":"ebcw_20144","hashtag":"ebcw","title":"36/37. Community Training *SAX in Chemnitz/MITTE in Leipzig","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003ein den letzten vier Monaten haben wir einige wichtige Änderungen in unseren Systemen eingebaut, welche wir in unserem Community Training vorstellen. Eine Auswahl dieser Themen lesen Sie unten.  Dieses Community Tranining richtet sich ausschließlich an die Mitglieder der Communitys www.ITsax.de, www.MINTsax.de, ITbbb.de und www.OFFICEsax.de.  Eingeladen sind alle Partner, Förderer, sowie Interessierte Organisationen nach vorheriger Anmeldung und Bestätigung.\u003c/p\u003e\n\u003cp\u003eGastgeber: 3D-Micromac AG\u003cbr /\u003e\nOrt: Chemnitz,  Technologie Campus 8\u003cbr /\u003e\nZeit: 17-19Uhr\u003c/p\u003e\n\u003cp\u003eThemen:\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eAuswertung Gehaltsbenchmark 2014 v2.0\u003c/li\u003e\n\t\u003cli\u003eMehrsprachigkeit der Community Portale nutzen (Englische Anzeigen, etc.)\u003c/li\u003e\n\t\u003cli\u003eMitarbeiter-werben-Mitarbeiter effizient und wirkungsvoll umsetzen (Neue Funktion der Community Portale nutzen)\u003c/li\u003e\n\t\u003cli\u003eBeste Mitarbeiter-Zitate direkt auf eigener Karriere-Webseite integrieren (Erweiterung faire-karriere.de)\u003c/li\u003e\n\t\u003cli\u003eWelche Jobbörsen und Bewerberkanäle kann man sich sparen, bzw. welche muss man nutzen (Erweiterung kanaleo.de)\u003c/li\u003e\n\t\u003cli\u003eErweiterte Careerbuilder Kooperation mit Premium-Anzeigen Jahresflat für ganz wenig Geld\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2014-09-23T17:00:00.000+02:00","finish":"2014-09-24T19:00:00.000+02:00","visible":true,"is_open_network":false,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/24/register","show_url":"https://www.empfehlungsbund.de/events/24","events":[{"id":49,"display_line":"23.09.2014 - 17 bis 19:00 Uhr Chemnitz - 36. Community Training *SAX in Chemnitz - Gastgeber: 3D-Micromac AG","subtitle":"36. Community Training *SAX in Chemnitz","city":"Chemnitz","start":"2014-09-23T17:00:00.000+02:00","finish":"2014-09-23T19:00:00.000+02:00","address":"Technologie-Campus 8, 09126 Chemnitz","event_host":"3D-Micromac AG","lat":50.8191,"lon":12.9377,"community_training_id":12,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20140330T020000\nRDATE:20140330T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20140923T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20140923T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:in den letzten vier Monaten haben wir einige wichtige Änderun\n gen in unseren Systemen eingebaut\\, welche wir in unserem Community Trai\n ning vorstellen. Eine Auswahl dieser Themen lesen Sie unten.  Dieses Com\n munity Tranining richtet sich ausschließlich an die Mitglieder der Commu\n nitys www.ITsax.de\\, www.MINTsax.de\\, ITbbb.de und www.OFFICEsax.de.  Ei\n ngeladen sind alle Partner\\, Förderer\\, sowie Interessierte Organisation\n en nach vorheriger Anmeldung und Bestätigung.\\nGastgeber: 3D-Micromac AG\n \\nOrt: Chemnitz\\,  Technologie Campus 8\\nZeit: 17-19Uhr\\nThemen:\\n\\n\t* A\n uswertung Gehaltsbenchmark 2014 v2.0\\n\t* Mehrsprachigkeit der Community \n Portale nutzen (Englische Anzeigen\\, etc.)\\n\t* Mitarbeiter-werben-Mitarb\n eiter effizient und wirkungsvoll umsetzen (Neue Funktion der Community P\n ortale nutzen)\\n\t* Beste Mitarbeiter-Zitate direkt auf eigener Karriere-\n Webseite integrieren (Erweiterung faire-karriere.de)\\n\t* Welche Jobbörse\n n und Bewerberkanäle kann man sich sparen\\, bzw. welche muss man nutzen \n (Erweiterung kanaleo.de)\\n\t* Erweiterte Careerbuilder Kooperation mit Pr\n emium-Anzeigen Jahresflat für ganz wenig Geld\\n\\n\nURL:https://www.empfehlungsbund.de/events/24\nSUMMARY:36/37. Community Training *SAX in Chemnitz/MITTE in Leipzig\nORGANIZER;CN=3D-Micromac AG / Empfehlungsbund.de:https://www.empfehlungsb\n und.de/events/24\nATTACH:https://www.empfehlungsbund.de/events/24\nLOCATION:3D-Micromac AG\\, Technologie-Campus 8\\, 09126 Chemnitz\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003ein den letzten vier Monaten hab\n en wir einige wichtige Änderungen in unseren Systemen eingebaut, welche \n wir in unserem Community Training vorstellen. Eine Auswahl dieser Themen\n  lesen Sie unten.  Dieses Community Tranining richtet sich ausschließlic\n h an die Mitglieder der Communitys www.ITsax.de, www.MINTsax.de, ITbbb.d\n e und www.OFFICEsax.de.  Eingeladen sind alle Partner, Förderer, sowie I\n nteressierte Organisationen nach vorheriger Anmeldung und Bestätigung.\u003c/\n p\u003e\u003cp\u003eGastgeber: 3D-Micromac AG\u003cbr /\u003eOrt: Chemnitz,  Technologie Campus 8\n \u003cbr /\u003eZeit: 17-19Uhr\u003c/p\u003e\u003cp\u003eThemen:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eAuswertung Gehaltsbenchma\n rk 2014 v2.0\u003c/li\u003e\t\u003cli\u003eMehrsprachigkeit der Community Portale nutzen (Eng\n lische Anzeigen, etc.)\u003c/li\u003e\t\u003cli\u003eMitarbeiter-werben-Mitarbeiter effizient\n  und wirkungsvoll umsetzen (Neue Funktion der Community Portale nutzen)\u003c\n /li\u003e\t\u003cli\u003eBeste Mitarbeiter-Zitate direkt auf eigener Karriere-Webseite i\n ntegrieren (Erweiterung faire-karriere.de)\u003c/li\u003e\t\u003cli\u003eWelche Jobbörsen und\n  Bewerberkanäle kann man sich sparen, bzw. welche muss man nutzen (Erwei\n terung kanaleo.de)\u003c/li\u003e\t\u003cli\u003eErweiterte Careerbuilder Kooperation mit Pre\n mium-Anzeigen Jahresflat für ganz wenig Geld\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210197,"Bezeichnung":"3D-Micromac AG","Kommentar":"Sondermaschinenhersteller","Typ":10,"Nutzername":"micromac","Website":"https://3d-micromac.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:38.000+02:00"}},{"id":50,"display_line":"24.09.2014 - 17 bis 19:00 Uhr Leipzig - 37. Community Training *MITTE in Leipzig - Gastgeber: FIO SYSTEMS AG","subtitle":"37. Community Training *MITTE in Leipzig","city":"Leipzig","start":"2014-09-24T17:00:00.000+02:00","finish":"2014-09-24T19:00:00.000+02:00","address":"Ritter-Pflugk-Straße 24, 04249 Leipzig","event_host":"FIO SYSTEMS AG","lat":51.2744,"lon":12.3177,"community_training_id":13,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20140330T020000\nRDATE:20140330T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20140924T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20140924T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:in den letzten vier Monaten haben wir einige wichtige Änderun\n gen in unseren Systemen eingebaut\\, welche wir in unserem Community Trai\n ning vorstellen. Eine Auswahl dieser Themen lesen Sie unten.  Dieses Com\n munity Tranining richtet sich ausschließlich an die Mitglieder der Commu\n nitys www.ITsax.de\\, www.MINTsax.de\\, ITbbb.de und www.OFFICEsax.de.  Ei\n ngeladen sind alle Partner\\, Förderer\\, sowie Interessierte Organisation\n en nach vorheriger Anmeldung und Bestätigung.\\nGastgeber: 3D-Micromac AG\n \\nOrt: Chemnitz\\,  Technologie Campus 8\\nZeit: 17-19Uhr\\nThemen:\\n\\n\t* A\n uswertung Gehaltsbenchmark 2014 v2.0\\n\t* Mehrsprachigkeit der Community \n Portale nutzen (Englische Anzeigen\\, etc.)\\n\t* Mitarbeiter-werben-Mitarb\n eiter effizient und wirkungsvoll umsetzen (Neue Funktion der Community P\n ortale nutzen)\\n\t* Beste Mitarbeiter-Zitate direkt auf eigener Karriere-\n Webseite integrieren (Erweiterung faire-karriere.de)\\n\t* Welche Jobbörse\n n und Bewerberkanäle kann man sich sparen\\, bzw. welche muss man nutzen \n (Erweiterung kanaleo.de)\\n\t* Erweiterte Careerbuilder Kooperation mit Pr\n emium-Anzeigen Jahresflat für ganz wenig Geld\\n\\n\nURL:https://www.empfehlungsbund.de/events/24\nSUMMARY:36/37. Community Training *SAX in Chemnitz/MITTE in Leipzig\nORGANIZER;CN=FIO SYSTEMS AG / Empfehlungsbund.de:https://www.empfehlungsb\n und.de/events/24\nATTACH:https://www.empfehlungsbund.de/events/24\nLOCATION:FIO SYSTEMS AG\\, Ritter-Pflugk-Straße 24\\, 04249 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003ein den letzten vier Monaten hab\n en wir einige wichtige Änderungen in unseren Systemen eingebaut, welche \n wir in unserem Community Training vorstellen. Eine Auswahl dieser Themen\n  lesen Sie unten.  Dieses Community Tranining richtet sich ausschließlic\n h an die Mitglieder der Communitys www.ITsax.de, www.MINTsax.de, ITbbb.d\n e und www.OFFICEsax.de.  Eingeladen sind alle Partner, Förderer, sowie I\n nteressierte Organisationen nach vorheriger Anmeldung und Bestätigung.\u003c/\n p\u003e\u003cp\u003eGastgeber: 3D-Micromac AG\u003cbr /\u003eOrt: Chemnitz,  Technologie Campus 8\n \u003cbr /\u003eZeit: 17-19Uhr\u003c/p\u003e\u003cp\u003eThemen:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eAuswertung Gehaltsbenchma\n rk 2014 v2.0\u003c/li\u003e\t\u003cli\u003eMehrsprachigkeit der Community Portale nutzen (Eng\n lische Anzeigen, etc.)\u003c/li\u003e\t\u003cli\u003eMitarbeiter-werben-Mitarbeiter effizient\n  und wirkungsvoll umsetzen (Neue Funktion der Community Portale nutzen)\u003c\n /li\u003e\t\u003cli\u003eBeste Mitarbeiter-Zitate direkt auf eigener Karriere-Webseite i\n ntegrieren (Erweiterung faire-karriere.de)\u003c/li\u003e\t\u003cli\u003eWelche Jobbörsen und\n  Bewerberkanäle kann man sich sparen, bzw. welche muss man nutzen (Erwei\n terung kanaleo.de)\u003c/li\u003e\t\u003cli\u003eErweiterte Careerbuilder Kooperation mit Pre\n mium-Anzeigen Jahresflat für ganz wenig Geld\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210548,"Bezeichnung":"FIO SYSTEMS AG","Kommentar":"ab 12_2020: bekommt ato","Typ":10,"Nutzername":"fiosystems","Website":"https://www.fio.de/ueber-fio/karriere/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-09-30T10:54:55.000+02:00"}}]},{"id":23,"name":"oxfp2014","hashtag":"ofxp","title":"35/34. OpenNetwork *SAX Event - 5 Jahre ITsax.de/MITTE Event","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eAnlässlich des 5. Geburtstags unserer Community ITsax möchten wir vor unserem kommenden Open Network zum Sektempfang laden. Das Event dient wie immer der Vernetzung und dem Wissensaufbau rund um das Thema Personalmarketing und Personalgewinnung und richtet sich vornehmlich an die Mitglieder der Communitys www.ITsax.de, www.MINTsax.de und www.OFFICEsax.de. Eingeladen sind alle Partner, Förderer und Interessierte Organisationen nach vorheriger Anmeldung.\u003c/p\u003e\n\u003cp\u003eGastgeber: T-Systems Multimedia Solutions GmbH, Riesaer Straße 5, Dresden\u003cbr /\u003e\nOrt: Dresden\u003c/p\u003e\n\u003cp\u003eAgenda:\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eSektempfang (ab 15Uhr)\u003c/li\u003e\n\t\u003cli\u003eBegrüßung durch den Gastgeber (ab 16Uhr)\u003c/li\u003e\n\t\u003cli\u003eVorstellung Redesign und Ergebnisse der Communitys \u0026#8211; 5 Jahre ITsax.de, 3 Jahre MINTsax.de und 2 Jahre OFFICEmitte.de\u003c/li\u003e\n\t\u003cli\u003eWelche Personalmarketingkanäle sollte man nutzen \u0026#8211; Auswertung der Trendstudie zum Personalmarketing\u003c/li\u003e\n\t\u003cli\u003eVorstellung Mobile-App und Facebook/\u003cspan class=\"caps\"\u003eXING\u003c/span\u003e-Job-Pusher zur Unterstützung des Social Media Marketings\u003c/li\u003e\n\t\u003cli\u003eAuswertung aktueller Gehaltsbenchmark \u0026#8211; wettbewerbsfähige Vergütungssysteme\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2014-05-26T16:00:00.000+02:00","finish":"2014-05-27T19:00:00.000+02:00","visible":true,"is_open_network":true,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/23/register","show_url":"https://www.empfehlungsbund.de/events/23","events":[{"id":47,"display_line":"27.05.2014 - 15 bis 19:00 Uhr Dresden - 35. OpenNetwork *SAX Event - 5 Jahre ITsax.de - Gastgeber: T-Systems Multimedia Solutions GmbH","subtitle":"35. OpenNetwork *SAX Event - 5 Jahre ITsax.de","city":"Dresden","start":"2014-05-27T15:00:00.000+02:00","finish":"2014-05-27T19:00:00.000+02:00","address":"Riesaer Straße 5, 01129 Dresden","event_host":"T-Systems Multimedia Solutions GmbH","lat":51.0827,"lon":13.7256,"community_training_id":10,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20140330T020000\nRDATE:20140330T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20140527T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20140527T150000\nCATEGORIES:BUSINESS\nDESCRIPTION:Anlässlich des 5. Geburtstags unserer Community ITsax möchten\n  wir vor unserem kommenden Open Network zum Sektempfang laden. Das Event\n  dient wie immer der Vernetzung und dem Wissensaufbau rund um das Thema \n Personalmarketing und Personalgewinnung und richtet sich vornehmlich an \n die Mitglieder der Communitys www.ITsax.de\\, www.MINTsax.de und www.OFFI\n CEsax.de. Eingeladen sind alle Partner\\, Förderer und Interessierte Orga\n nisationen nach vorheriger Anmeldung.\\nGastgeber: T-Systems Multimedia S\n olutions GmbH\\, Riesaer Straße 5\\, Dresden\\nOrt: Dresden\\nAgenda:\\n\\n\t* \n Sektempfang (ab 15Uhr)\\n\t* Begrüßung durch den Gastgeber (ab 16Uhr)\\n\t* \n Vorstellung Redesign und Ergebnisse der Communitys – 5 Jahre ITsax.de\\, \n 3 Jahre MINTsax.de und 2 Jahre OFFICEmitte.de\\n\t* Welche Personalmarketi\n ngkanäle sollte man nutzen – Auswertung der Trendstudie zum Personalmark\n eting\\n\t* Vorstellung Mobile-App und Facebook/XING-Job-Pusher zur Unters\n tützung des Social Media Marketings\\n\t* Auswertung aktueller Gehaltsbenc\n hmark – wettbewerbsfähige Vergütungssysteme\\n\\n\nURL:https://www.empfehlungsbund.de/events/23\nSUMMARY:35/34. OpenNetwork *SAX Event - 5 Jahre ITsax.de/MITTE Event\nORGANIZER;CN=T-Systems Multimedia Solutions GmbH / Empfehlungsbund.de:htt\n ps://www.empfehlungsbund.de/events/23\nATTACH:https://www.empfehlungsbund.de/events/23\nLOCATION:T-Systems Multimedia Solutions GmbH\\, Riesaer Straße 5\\, 01129 D\n resden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eAnlässlich des 5. Geburtstags u\n nserer Community ITsax möchten wir vor unserem kommenden Open Network zu\n m Sektempfang laden. Das Event dient wie immer der Vernetzung und dem Wi\n ssensaufbau rund um das Thema Personalmarketing und Personalgewinnung un\n d richtet sich vornehmlich an die Mitglieder der Communitys www.ITsax.de\n , www.MINTsax.de und www.OFFICEsax.de. Eingeladen sind alle Partner, För\n derer und Interessierte Organisationen nach vorheriger Anmeldung.\u003c/p\u003e\u003cp\u003e\n Gastgeber: T-Systems Multimedia Solutions GmbH, Riesaer Straße 5, Dresde\n n\u003cbr /\u003eOrt: Dresden\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eSektempfang (ab 15Uhr)\u003c/li\n \u003e\t\u003cli\u003eBegrüßung durch den Gastgeber (ab 16Uhr)\u003c/li\u003e\t\u003cli\u003eVorstellung Rede\n sign und Ergebnisse der Communitys \u0026#8211; 5 Jahre ITsax.de, 3 Jahre MIN\n Tsax.de und 2 Jahre OFFICEmitte.de\u003c/li\u003e\t\u003cli\u003eWelche Personalmarketingkanä\n le sollte man nutzen \u0026#8211; Auswertung der Trendstudie zum Personalmark\n eting\u003c/li\u003e\t\u003cli\u003eVorstellung Mobile-App und Facebook/\u003cspan class=\"caps\"\u003eXI\n NG\u003c/span\u003e-Job-Pusher zur Unterstützung des Social Media Marketings\u003c/li\u003e\t\n \u003cli\u003eAuswertung aktueller Gehaltsbenchmark \u0026#8211; wettbewerbsfähige Verg\n ütungssysteme\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210013,"Bezeichnung":"T-Systems Multimedia Solutions GmbH","Kommentar":"Rechnung per Post zuschicken.\r\n\r\n","Typ":10,"Nutzername":"tsystemsmms","Website":"https://www.t-systems.com/de/en","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-09-30T10:38:54.000+02:00"}},{"id":48,"display_line":"26.05.2014 - 16 bis 19:00 Uhr Leipzig - 34. OpenNetwork *MITTE Event - Gastgeber: Softwareforen Leipzig GmbH","subtitle":"34. OpenNetwork *MITTE Event","city":"Leipzig","start":"2014-05-26T16:00:00.000+02:00","finish":"2014-05-26T19:00:00.000+02:00","address":"Hainstraße 16, 04109 Leipzig","event_host":"Softwareforen Leipzig GmbH","lat":51.3425,"lon":12.3737,"community_training_id":11,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20140330T020000\nRDATE:20140330T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20140526T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20140526T160000\nCATEGORIES:BUSINESS\nDESCRIPTION:Anlässlich des 5. Geburtstags unserer Community ITsax möchten\n  wir vor unserem kommenden Open Network zum Sektempfang laden. Das Event\n  dient wie immer der Vernetzung und dem Wissensaufbau rund um das Thema \n Personalmarketing und Personalgewinnung und richtet sich vornehmlich an \n die Mitglieder der Communitys www.ITsax.de\\, www.MINTsax.de und www.OFFI\n CEsax.de. Eingeladen sind alle Partner\\, Förderer und Interessierte Orga\n nisationen nach vorheriger Anmeldung.\\nGastgeber: T-Systems Multimedia S\n olutions GmbH\\, Riesaer Straße 5\\, Dresden\\nOrt: Dresden\\nAgenda:\\n\\n\t* \n Sektempfang (ab 15Uhr)\\n\t* Begrüßung durch den Gastgeber (ab 16Uhr)\\n\t* \n Vorstellung Redesign und Ergebnisse der Communitys – 5 Jahre ITsax.de\\, \n 3 Jahre MINTsax.de und 2 Jahre OFFICEmitte.de\\n\t* Welche Personalmarketi\n ngkanäle sollte man nutzen – Auswertung der Trendstudie zum Personalmark\n eting\\n\t* Vorstellung Mobile-App und Facebook/XING-Job-Pusher zur Unters\n tützung des Social Media Marketings\\n\t* Auswertung aktueller Gehaltsbenc\n hmark – wettbewerbsfähige Vergütungssysteme\\n\\n\nURL:https://www.empfehlungsbund.de/events/23\nSUMMARY:35/34. OpenNetwork *SAX Event - 5 Jahre ITsax.de/MITTE Event\nORGANIZER;CN=Softwareforen Leipzig GmbH / Empfehlungsbund.de:https://www.\n empfehlungsbund.de/events/23\nATTACH:https://www.empfehlungsbund.de/events/23\nLOCATION:Softwareforen Leipzig GmbH\\, Hainstraße 16\\, 04109 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eAnlässlich des 5. Geburtstags u\n nserer Community ITsax möchten wir vor unserem kommenden Open Network zu\n m Sektempfang laden. Das Event dient wie immer der Vernetzung und dem Wi\n ssensaufbau rund um das Thema Personalmarketing und Personalgewinnung un\n d richtet sich vornehmlich an die Mitglieder der Communitys www.ITsax.de\n , www.MINTsax.de und www.OFFICEsax.de. Eingeladen sind alle Partner, För\n derer und Interessierte Organisationen nach vorheriger Anmeldung.\u003c/p\u003e\u003cp\u003e\n Gastgeber: T-Systems Multimedia Solutions GmbH, Riesaer Straße 5, Dresde\n n\u003cbr /\u003eOrt: Dresden\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eSektempfang (ab 15Uhr)\u003c/li\n \u003e\t\u003cli\u003eBegrüßung durch den Gastgeber (ab 16Uhr)\u003c/li\u003e\t\u003cli\u003eVorstellung Rede\n sign und Ergebnisse der Communitys \u0026#8211; 5 Jahre ITsax.de, 3 Jahre MIN\n Tsax.de und 2 Jahre OFFICEmitte.de\u003c/li\u003e\t\u003cli\u003eWelche Personalmarketingkanä\n le sollte man nutzen \u0026#8211; Auswertung der Trendstudie zum Personalmark\n eting\u003c/li\u003e\t\u003cli\u003eVorstellung Mobile-App und Facebook/\u003cspan class=\"caps\"\u003eXI\n NG\u003c/span\u003e-Job-Pusher zur Unterstützung des Social Media Marketings\u003c/li\u003e\t\n \u003cli\u003eAuswertung aktueller Gehaltsbenchmark \u0026#8211; wettbewerbsfähige Verg\n ütungssysteme\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210709,"Bezeichnung":"SF Holding GmbH","Kommentar":"Umfirmierung. Ehemals Softwareforen Leipzig GmbH","Typ":10,"Nutzername":"softwareforen","Website":"https://www.softwareforen.de/portal/Startseite.xhtml","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-10T20:18:11.000+02:00"}}]},{"id":21,"name":"ebcw_20141","hashtag":"ebcw","title":"32/33. Community Training *sax.de/mitte.de","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eInnerhalb der regelmäßig stattfindenden Community Trainings stimmen sich die Partner über die Weiterentwicklungen und gemeinsamen Aktivitäten der Communitys und Empfehlungsplattformen ITsax, MINTsax.de und OFFICEsax.de ab.\u003c/p\u003e\n\u003cp\u003eTeilnehmer: Partner der Communitys ITsax, MINTsax.de und OFFICEsax.de sowie eingeladene Gäste\u003cbr /\u003e\nOrt: Stuttgarter Straße 3, 01189 Dresden\u003cbr /\u003e\nZeit: 17-19Uhr\u003c/p\u003e\n\u003cp\u003eAgenda:\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eaktuelle Ergebnisse und Trends\u003c/li\u003e\n\t\u003cli\u003eWeiterentwicklungen\n\t\u003cul\u003e\n\t\t\u003cli\u003eGehaltsbenchmark 2014\u003c/li\u003e\n\t\t\u003cli\u003eFaire Karriere Reifegrad Selbstbewertung\u003c/li\u003e\n\t\u003c/ul\u003e\u003c/li\u003e\n\t\u003cli\u003eFachvorträge:\n\t\u003cul\u003e\n\t\t\u003cli\u003eVorstellung Studie: Personaltrends 2014\u003c/li\u003e\n\t\t\u003cli\u003e\u003cspan class=\"caps\"\u003eAGG\u003c/span\u003e Konforme Stellenausschreibung\u003c/li\u003e\n\t\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2014-01-28T17:00:00.000+01:00","finish":"2014-01-29T19:00:00.000+01:00","visible":true,"is_open_network":false,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/21/register","show_url":"https://www.empfehlungsbund.de/events/21","events":[{"id":43,"display_line":"28.01.2014 - 17 bis 19:00 Uhr Dresden - 32. Community Training *sax.de - Gastgeber: TraceTronic GmbH","subtitle":"32. Community Training *sax.de","city":"Dresden","start":"2014-01-28T17:00:00.000+01:00","finish":"2014-01-28T19:00:00.000+01:00","address":"Stuttgarter Straße 3, 01189 Dresden","event_host":"TraceTronic GmbH","lat":51.0089,"lon":13.6932,"community_training_id":6,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20131027T030000\nRDATE:20131027T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20140128T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20140128T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Innerhalb der regelmäßig stattfindenden Community Trainings s\n timmen sich die Partner über die Weiterentwicklungen und gemeinsamen Akt\n ivitäten der Communitys und Empfehlungsplattformen ITsax\\, MINTsax.de un\n d OFFICEsax.de ab.\\nTeilnehmer: Partner der Communitys ITsax\\, MINTsax.d\n e und OFFICEsax.de sowie eingeladene Gäste\\nOrt: Stuttgarter Straße 3\\, \n 01189 Dresden\\nZeit: 17-19Uhr\\nAgenda:\\n\\n\t* aktuelle Ergebnisse und Tre\n nds\\n\t* Weiterentwicklungen\\n\t\\n\t\t* Gehaltsbenchmark 2014\\n\t\t* Faire Kar\n riere Reifegrad Selbstbewertung\\n\t\\n\t* Fachvorträge:\\n\t\\n\t\t* Vorstellung\n  Studie: Personaltrends 2014\\n\t\t* AGG Konforme Stellenausschreibung\\n\t\\n\n \\n\nURL:https://www.empfehlungsbund.de/events/21\nSUMMARY:32/33. Community Training *sax.de/mitte.de\nORGANIZER;CN=TraceTronic GmbH / Empfehlungsbund.de:https://www.empfehlung\n sbund.de/events/21\nATTACH:https://www.empfehlungsbund.de/events/21\nLOCATION:TraceTronic GmbH\\, Stuttgarter Straße 3\\, 01189 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eInnerhalb der regelmäßig stattf\n indenden Community Trainings stimmen sich die Partner über die Weiterent\n wicklungen und gemeinsamen Aktivitäten der Communitys und Empfehlungspla\n ttformen ITsax, MINTsax.de und OFFICEsax.de ab.\u003c/p\u003e\u003cp\u003eTeilnehmer: Partne\n r der Communitys ITsax, MINTsax.de und OFFICEsax.de sowie eingeladene Gä\n ste\u003cbr /\u003eOrt: Stuttgarter Straße 3, 01189 Dresden\u003cbr /\u003eZeit: 17-19Uhr\u003c/p\n \u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eaktuelle Ergebnisse und Trends\u003c/li\u003e\t\u003cli\u003eWeiteren\n twicklungen\t\u003cul\u003e\t\t\u003cli\u003eGehaltsbenchmark 2014\u003c/li\u003e\t\t\u003cli\u003eFaire Karriere Rei\n fegrad Selbstbewertung\u003c/li\u003e\t\u003c/ul\u003e\u003c/li\u003e\t\u003cli\u003eFachvorträge:\t\u003cul\u003e\t\t\u003cli\u003eVorst\n ellung Studie: Personaltrends 2014\u003c/li\u003e\t\t\u003cli\u003e\u003cspan class=\"caps\"\u003eAGG\u003c/spa\n n\u003e Konforme Stellenausschreibung\u003c/li\u003e\t\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210073,"Bezeichnung":"TraceTronic GmbH","Kommentar":"Haben keinen eigenen Münchner Standort, sind bei BMW, deshalb hier nicht erfasst.","Typ":10,"Nutzername":"tracetronic","Website":"http://www.tracetronic.de/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:36.000+02:00"}},{"id":44,"display_line":"29.01.2014 - 17 bis 19:00 Uhr Leipzig - 33. Community Training *mitte.de - Gastgeber: ipoque GmbH","subtitle":"33. Community Training *mitte.de","city":"Leipzig","start":"2014-01-29T17:00:00.000+01:00","finish":"2014-01-29T19:00:00.000+01:00","address":"Neumarkt 29-33, 04109 Leipzig","event_host":"ipoque GmbH","lat":51.3377,"lon":12.3764,"community_training_id":7,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20131027T030000\nRDATE:20131027T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20140129T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20140129T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Innerhalb der regelmäßig stattfindenden Community Trainings s\n timmen sich die Partner über die Weiterentwicklungen und gemeinsamen Akt\n ivitäten der Communitys und Empfehlungsplattformen ITsax\\, MINTsax.de un\n d OFFICEsax.de ab.\\nTeilnehmer: Partner der Communitys ITsax\\, MINTsax.d\n e und OFFICEsax.de sowie eingeladene Gäste\\nOrt: Stuttgarter Straße 3\\, \n 01189 Dresden\\nZeit: 17-19Uhr\\nAgenda:\\n\\n\t* aktuelle Ergebnisse und Tre\n nds\\n\t* Weiterentwicklungen\\n\t\\n\t\t* Gehaltsbenchmark 2014\\n\t\t* Faire Kar\n riere Reifegrad Selbstbewertung\\n\t\\n\t* Fachvorträge:\\n\t\\n\t\t* Vorstellung\n  Studie: Personaltrends 2014\\n\t\t* AGG Konforme Stellenausschreibung\\n\t\\n\n \\n\nURL:https://www.empfehlungsbund.de/events/21\nSUMMARY:32/33. Community Training *sax.de/mitte.de\nORGANIZER;CN=ipoque GmbH / Empfehlungsbund.de:https://www.empfehlungsbund\n .de/events/21\nATTACH:https://www.empfehlungsbund.de/events/21\nLOCATION:ipoque GmbH\\, Neumarkt 29-33\\, 04109 Leipzig\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eInnerhalb der regelmäßig stattf\n indenden Community Trainings stimmen sich die Partner über die Weiterent\n wicklungen und gemeinsamen Aktivitäten der Communitys und Empfehlungspla\n ttformen ITsax, MINTsax.de und OFFICEsax.de ab.\u003c/p\u003e\u003cp\u003eTeilnehmer: Partne\n r der Communitys ITsax, MINTsax.de und OFFICEsax.de sowie eingeladene Gä\n ste\u003cbr /\u003eOrt: Stuttgarter Straße 3, 01189 Dresden\u003cbr /\u003eZeit: 17-19Uhr\u003c/p\n \u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eaktuelle Ergebnisse und Trends\u003c/li\u003e\t\u003cli\u003eWeiteren\n twicklungen\t\u003cul\u003e\t\t\u003cli\u003eGehaltsbenchmark 2014\u003c/li\u003e\t\t\u003cli\u003eFaire Karriere Rei\n fegrad Selbstbewertung\u003c/li\u003e\t\u003c/ul\u003e\u003c/li\u003e\t\u003cli\u003eFachvorträge:\t\u003cul\u003e\t\t\u003cli\u003eVorst\n ellung Studie: Personaltrends 2014\u003c/li\u003e\t\t\u003cli\u003e\u003cspan class=\"caps\"\u003eAGG\u003c/spa\n n\u003e Konforme Stellenausschreibung\u003c/li\u003e\t\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210048,"Bezeichnung":"ipoque GmbH","Kommentar":"benutzen EBMS für Bewerbungseingänge aus den Portalen; Hauptansprechpartnerin handelt im EBMS im Namen von Herrn Langwald ","Typ":10,"Nutzername":"ipoque","Website":"https://www.ipoque.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-20T10:51:09.000+02:00"}}]},{"id":20,"name":"ebcw_20134","hashtag":"ebcw","title":"30/31. Community Training *sax.de/mitte.de","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eInnerhalb der regelmäßig stattfindenden Community Trainings stimmen sich die Partner über die Weiterentwicklungen und gemeinsamen Aktivitäten der Communitys und Empfehlungsplattformen ITsax, MINTsax.de und OFFICEsax.de ab.\u003c/p\u003e\n\u003cp\u003eTeilnehmer: Partner der Communitys ITsax, MINTsax.de und OFFICEsax.de sowie eingeladene Gäste\u003cbr /\u003e\nOrt: Marktjagd GmbH, Schützenplatz 14, 01067 Dresden\u003cbr /\u003e\nZeit: 17-19Uhr\u003c/p\u003e\n\u003cp\u003eAgenda:\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eErgebnisse und Trends\u003c/li\u003e\n\t\u003cli\u003eAuswertung Faire-Karriere.de\u003c/li\u003e\n\t\u003cli\u003eVorstellung von Weiterentwicklungen\u003c/li\u003e\n\t\u003cli\u003eneue Kooperationen\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2013-09-24T17:00:00.000+02:00","finish":"2013-09-25T19:00:00.000+02:00","visible":true,"is_open_network":false,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/20/register","show_url":"https://www.empfehlungsbund.de/events/20","events":[{"id":41,"display_line":"24.09.2013 - 17 bis 19:00 Uhr Dresden - 30. Community Training *sax.de - Gastgeber: Offerista Group GmbH","subtitle":"30. Community Training *sax.de","city":"Dresden","start":"2013-09-24T17:00:00.000+02:00","finish":"2013-09-24T19:00:00.000+02:00","address":"Schützenplatz 14, 01067 Dresden","event_host":"Offerista Group GmbH","lat":51.0559,"lon":13.7271,"community_training_id":4,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20130331T020000\nRDATE:20130331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20130924T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20130924T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Innerhalb der regelmäßig stattfindenden Community Trainings s\n timmen sich die Partner über die Weiterentwicklungen und gemeinsamen Akt\n ivitäten der Communitys und Empfehlungsplattformen ITsax\\, MINTsax.de un\n d OFFICEsax.de ab.\\nTeilnehmer: Partner der Communitys ITsax\\, MINTsax.d\n e und OFFICEsax.de sowie eingeladene Gäste\\nOrt: Marktjagd GmbH\\, Schütz\n enplatz 14\\, 01067 Dresden\\nZeit: 17-19Uhr\\nAgenda:\\n\\n\t* Ergebnisse und\n  Trends\\n\t* Auswertung Faire-Karriere.de\\n\t* Vorstellung von Weiterentwi\n cklungen\\n\t* neue Kooperationen\\n\\n\nURL:https://www.empfehlungsbund.de/events/20\nSUMMARY:30/31. Community Training *sax.de/mitte.de\nORGANIZER;CN=Offerista Group GmbH / Empfehlungsbund.de:https://www.empfeh\n lungsbund.de/events/20\nATTACH:https://www.empfehlungsbund.de/events/20\nLOCATION:Offerista Group GmbH\\, Schützenplatz 14\\, 01067 Dresden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eInnerhalb der regelmäßig stattf\n indenden Community Trainings stimmen sich die Partner über die Weiterent\n wicklungen und gemeinsamen Aktivitäten der Communitys und Empfehlungspla\n ttformen ITsax, MINTsax.de und OFFICEsax.de ab.\u003c/p\u003e\u003cp\u003eTeilnehmer: Partne\n r der Communitys ITsax, MINTsax.de und OFFICEsax.de sowie eingeladene Gä\n ste\u003cbr /\u003eOrt: Marktjagd GmbH, Schützenplatz 14, 01067 Dresden\u003cbr /\u003eZeit:\n  17-19Uhr\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eErgebnisse und Trends\u003c/li\u003e\t\u003cli\u003eAuswe\n rtung Faire-Karriere.de\u003c/li\u003e\t\u003cli\u003eVorstellung von Weiterentwicklungen\u003c/li\n \u003e\t\u003cli\u003eneue Kooperationen\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210133,"Bezeichnung":"Offerista Group GmbH","Kommentar":"ehemals Marktjagd\r\n\r\nRechnungsemail ist falsch und muss berichtigt werden!!","Typ":10,"Nutzername":"offerista","Website":"https://www.offerista.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:37.000+02:00"}},{"id":42,"display_line":"25.09.2013 - 17 bis 19:00 Uhr Jena - 31. Community Training *mitte.de - Gastgeber: JustOn GmbH","subtitle":"31. Community Training *mitte.de","city":"Jena","start":"2013-09-25T17:00:00.000+02:00","finish":"2013-09-25T19:00:00.000+02:00","address":"Otto-Schott-Str. 13 (G56), 07743 Jena","event_host":"JustOn GmbH","lat":50.9227,"lon":11.5757,"community_training_id":5,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20130331T020000\nRDATE:20130331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20130925T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20130925T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Innerhalb der regelmäßig stattfindenden Community Trainings s\n timmen sich die Partner über die Weiterentwicklungen und gemeinsamen Akt\n ivitäten der Communitys und Empfehlungsplattformen ITsax\\, MINTsax.de un\n d OFFICEsax.de ab.\\nTeilnehmer: Partner der Communitys ITsax\\, MINTsax.d\n e und OFFICEsax.de sowie eingeladene Gäste\\nOrt: Marktjagd GmbH\\, Schütz\n enplatz 14\\, 01067 Dresden\\nZeit: 17-19Uhr\\nAgenda:\\n\\n\t* Ergebnisse und\n  Trends\\n\t* Auswertung Faire-Karriere.de\\n\t* Vorstellung von Weiterentwi\n cklungen\\n\t* neue Kooperationen\\n\\n\nURL:https://www.empfehlungsbund.de/events/20\nSUMMARY:30/31. Community Training *sax.de/mitte.de\nORGANIZER;CN=JustOn GmbH / Empfehlungsbund.de:https://www.empfehlungsbund\n .de/events/20\nATTACH:https://www.empfehlungsbund.de/events/20\nLOCATION:JustOn GmbH\\, Otto-Schott-Str. 13 (G56)\\, 07743 Jena\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eInnerhalb der regelmäßig stattf\n indenden Community Trainings stimmen sich die Partner über die Weiterent\n wicklungen und gemeinsamen Aktivitäten der Communitys und Empfehlungspla\n ttformen ITsax, MINTsax.de und OFFICEsax.de ab.\u003c/p\u003e\u003cp\u003eTeilnehmer: Partne\n r der Communitys ITsax, MINTsax.de und OFFICEsax.de sowie eingeladene Gä\n ste\u003cbr /\u003eOrt: Marktjagd GmbH, Schützenplatz 14, 01067 Dresden\u003cbr /\u003eZeit:\n  17-19Uhr\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eErgebnisse und Trends\u003c/li\u003e\t\u003cli\u003eAuswe\n rtung Faire-Karriere.de\u003c/li\u003e\t\u003cli\u003eVorstellung von Weiterentwicklungen\u003c/li\n \u003e\t\u003cli\u003eneue Kooperationen\u003c/li\u003e\u003c/ul\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210541,"Bezeichnung":"JustOn GmbH","Kommentar":"früher OnCommerce","Typ":10,"Nutzername":"oncommerce","Website":"https://www.juston.com/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:44.000+02:00"}}]},{"id":22,"name":"oxfp2013","hashtag":"ofxp","title":"28/29. OpenNetwork Event von ITsax.de, MINTsax.de und OFFICEsax.de/mitte.de, MINTsax.de und OFFICEmitte.de","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003e\u003cstrong\u003e!!! Ort hat sich geändert: Aufgrund der sehr hohen Teilnehmerzahl, treffen wir uns gegenüber von der ACTech GmbH bei der \u003cspan class=\"caps\"\u003eSAXONIA\u003c/span\u003e Standortentwicklungs- und -verwaltungsgesellschaft mbH, Halsbrücker Straße 34, 09599 Freiberg.\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eNeben Partnern und Förderern von ITsax.de, MINTsax.de, OFFICEsax.de, Ansprechpartner der regionalen Hochschulen und Bildungseinrichtungen, sowie Ansprechpartner der regionalen Wirtschaftsförderung, sind Interessierte willkommen während des OpenNetwork Events wichtige Informationen zum Community-Konzept zu erhalten.\u003c/p\u003e\n\u003cp\u003eDen Förderern unserer Communitys (Wirtschaftsförderern, Career Services, Lehrstühle, Veranstalter regionaler Karriere-Messen,..) wird hierbei geboten, aktuelle Projekte in einem 5-minütigen Vortrag zu präsentieren. Ziel ist es die Zusammenarbeit zwischen der regionalen Wirtschaft und Ansprechpartnern aus Bildung, Wirtschaftsförderung und regionalen Marketingdienstleistern für eine gemeinsamen Fachkräftegewinnung zu stärken.\u003c/p\u003e\n\u003cp\u003eThemen:\u003cbr /\u003e\n1.\tErgebnisse und Trends aus den Communitys\u003cbr /\u003e\n2.\tVorstellung Ergebnisse Gehaltsbenchmark Mitteldeutschland (Speziell: IT, Maschinenbau, Elektrotechnik)\u003cbr /\u003e\n3.\tNeue Funktionen in Kanaleo.de zum Controlling des Personalmarketings\u003cbr /\u003e\n4.\tStart der neuen Faire-Karriere.de Plattform als kostenfreie Alternative zu FairCompany\u003cbr /\u003e\n5.\tVorstellung von Projekten verschiedener Förderer (Wirtschaftsförderungen, Career Services, Lehrstühle, Messen,..)\u003c/p\u003e","agenda":null,"start":"2013-05-28T16:00:00.000+02:00","finish":"2013-05-29T19:00:00.000+02:00","visible":true,"is_open_network":true,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/22/register","show_url":"https://www.empfehlungsbund.de/events/22","events":[{"id":45,"display_line":"28.05.2013 - 16 bis 19:00 Uhr Freiberg - 28. OpenNetwork Event von ITsax.de, MINTsax.de und OFFICEsax.de - Gastgeber: ACTech GmbH","subtitle":"28. OpenNetwork Event von ITsax.de, MINTsax.de und OFFICEsax.de","city":"Freiberg","start":"2013-05-28T16:00:00.000+02:00","finish":"2013-05-28T19:00:00.000+02:00","address":"Halsbrücker Str. 34, 09599 Freiberg","event_host":"ACTech GmbH","lat":50.9291,"lon":13.3481,"community_training_id":8,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20130331T020000\nRDATE:20130331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20130528T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20130528T160000\nCATEGORIES:BUSINESS\nDESCRIPTION:!!! Ort hat sich geändert: Aufgrund der sehr hohen Teilnehmer\n zahl\\, treffen wir uns gegenüber von der ACTech GmbH bei der SAXONIA Sta\n ndortentwicklungs- und -verwaltungsgesellschaft mbH\\, Halsbrücker Straße\n  34\\, 09599 Freiberg.\\nNeben Partnern und Förderern von ITsax.de\\, MINTs\n ax.de\\, OFFICEsax.de\\, Ansprechpartner der regionalen Hochschulen und Bi\n ldungseinrichtungen\\, sowie Ansprechpartner der regionalen Wirtschaftsfö\n rderung\\, sind Interessierte willkommen während des OpenNetwork Events w\n ichtige Informationen zum Community-Konzept zu erhalten.\\nDen Förderern \n unserer Communitys (Wirtschaftsförderern\\, Career Services\\, Lehrstühle\\\n , Veranstalter regionaler Karriere-Messen\\,..) wird hierbei geboten\\, ak\n tuelle Projekte in einem 5-minütigen Vortrag zu präsentieren. Ziel ist e\n s die Zusammenarbeit zwischen der regionalen Wirtschaft und Ansprechpart\n nern aus Bildung\\, Wirtschaftsförderung und regionalen Marketingdienstle\n istern für eine gemeinsamen Fachkräftegewinnung zu stärken.\\nThemen:\\n1.\n \tErgebnisse und Trends aus den Communitys\\n2.\tVorstellung Ergebnisse Geh\n altsbenchmark Mitteldeutschland (Speziell: IT\\, Maschinenbau\\, Elektrote\n chnik)\\n3.\tNeue Funktionen in Kanaleo.de zum Controlling des Personalmar\n ketings\\n4.\tStart der neuen Faire-Karriere.de Plattform als kostenfreie \n Alternative zu FairCompany\\n5.\tVorstellung von Projekten verschiedener F\n örderer (Wirtschaftsförderungen\\, Career Services\\, Lehrstühle\\, Messen\\\n ,..)\\n\nURL:https://www.empfehlungsbund.de/events/22\nSUMMARY:28/29. OpenNetwork Event von ITsax.de\\, MINTsax.de und OFFICEsax.\n de/mitte.de\\, MINTsax.de und OFFICEmitte.de\nORGANIZER;CN=ACTech GmbH / Empfehlungsbund.de:https://www.empfehlungsbund\n .de/events/22\nATTACH:https://www.empfehlungsbund.de/events/22\nLOCATION:ACTech GmbH\\, Halsbrücker Str. 34\\, 09599 Freiberg\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003e\u003cstrong\u003e!!! Ort hat sich geände\n rt: Aufgrund der sehr hohen Teilnehmerzahl, treffen wir uns gegenüber vo\n n der ACTech GmbH bei der \u003cspan class=\"caps\"\u003eSAXONIA\u003c/span\u003e Standortentw\n icklungs- und -verwaltungsgesellschaft mbH, Halsbrücker Straße 34, 09599\n  Freiberg.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eNeben Partnern und Förderern von ITsax.de, MIN\n Tsax.de, OFFICEsax.de, Ansprechpartner der regionalen Hochschulen und Bi\n ldungseinrichtungen, sowie Ansprechpartner der regionalen Wirtschaftsför\n derung, sind Interessierte willkommen während des OpenNetwork Events wic\n htige Informationen zum Community-Konzept zu erhalten.\u003c/p\u003e\u003cp\u003eDen Fördere\n rn unserer Communitys (Wirtschaftsförderern, Career Services, Lehrstühle\n , Veranstalter regionaler Karriere-Messen,..) wird hierbei geboten, aktu\n elle Projekte in einem 5-minütigen Vortrag zu präsentieren. Ziel ist es \n die Zusammenarbeit zwischen der regionalen Wirtschaft und Ansprechpartne\n rn aus Bildung, Wirtschaftsförderung und regionalen Marketingdienstleist\n ern für eine gemeinsamen Fachkräftegewinnung zu stärken.\u003c/p\u003e\u003cp\u003eThemen:\u003cb\n r /\u003e1.\tErgebnisse und Trends aus den Communitys\u003cbr /\u003e2.\tVorstellung Erge\n bnisse Gehaltsbenchmark Mitteldeutschland (Speziell: IT, Maschinenbau, E\n lektrotechnik)\u003cbr /\u003e3.\tNeue Funktionen in Kanaleo.de zum Controlling des\n  Personalmarketings\u003cbr /\u003e4.\tStart der neuen Faire-Karriere.de Plattform \n als kostenfreie Alternative zu FairCompany\u003cbr /\u003e5.\tVorstellung von Proje\n kten verschiedener Förderer (Wirtschaftsförderungen, Career Services, Le\n hrstühle, Messen,..)\u003c/p\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210264,"Bezeichnung":"ACTech GmbH","Kommentar":"Frau Birke ist nicht mehr im Unternehmen seit Okt.'12","Typ":10,"Nutzername":"actech","Website":"https://www.actech.de/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:40.000+02:00"}},{"id":46,"display_line":"29.05.2013 - 16 bis 19:00 Uhr Bitterfeld-Wolfen - 29. OpenNetwork Event von ITmitte.de, MINTsax.de und OFFICEmitte.de - Gastgeber: Hanwha Q.CELLS GmbH","subtitle":"29. OpenNetwork Event von ITmitte.de, MINTsax.de und OFFICEmitte.de","city":"Bitterfeld-Wolfen","start":"2013-05-29T16:00:00.000+02:00","finish":"2013-05-29T19:00:00.000+02:00","address":"Sonnenallee  17-21, 06766 Bitterfeld-Wolfen","event_host":"Hanwha Q.CELLS GmbH","lat":51.6429,"lon":12.2236,"community_training_id":9,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:DAYLIGHT\nDTSTART:20130331T020000\nRDATE:20130331T020000\nTZOFFSETFROM:+0100\nTZOFFSETTO:+0200\nTZNAME:CEST\nEND:DAYLIGHT\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20130529T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20130529T160000\nCATEGORIES:BUSINESS\nDESCRIPTION:!!! Ort hat sich geändert: Aufgrund der sehr hohen Teilnehmer\n zahl\\, treffen wir uns gegenüber von der ACTech GmbH bei der SAXONIA Sta\n ndortentwicklungs- und -verwaltungsgesellschaft mbH\\, Halsbrücker Straße\n  34\\, 09599 Freiberg.\\nNeben Partnern und Förderern von ITsax.de\\, MINTs\n ax.de\\, OFFICEsax.de\\, Ansprechpartner der regionalen Hochschulen und Bi\n ldungseinrichtungen\\, sowie Ansprechpartner der regionalen Wirtschaftsfö\n rderung\\, sind Interessierte willkommen während des OpenNetwork Events w\n ichtige Informationen zum Community-Konzept zu erhalten.\\nDen Förderern \n unserer Communitys (Wirtschaftsförderern\\, Career Services\\, Lehrstühle\\\n , Veranstalter regionaler Karriere-Messen\\,..) wird hierbei geboten\\, ak\n tuelle Projekte in einem 5-minütigen Vortrag zu präsentieren. Ziel ist e\n s die Zusammenarbeit zwischen der regionalen Wirtschaft und Ansprechpart\n nern aus Bildung\\, Wirtschaftsförderung und regionalen Marketingdienstle\n istern für eine gemeinsamen Fachkräftegewinnung zu stärken.\\nThemen:\\n1.\n \tErgebnisse und Trends aus den Communitys\\n2.\tVorstellung Ergebnisse Geh\n altsbenchmark Mitteldeutschland (Speziell: IT\\, Maschinenbau\\, Elektrote\n chnik)\\n3.\tNeue Funktionen in Kanaleo.de zum Controlling des Personalmar\n ketings\\n4.\tStart der neuen Faire-Karriere.de Plattform als kostenfreie \n Alternative zu FairCompany\\n5.\tVorstellung von Projekten verschiedener F\n örderer (Wirtschaftsförderungen\\, Career Services\\, Lehrstühle\\, Messen\\\n ,..)\\n\nURL:https://www.empfehlungsbund.de/events/22\nSUMMARY:28/29. OpenNetwork Event von ITsax.de\\, MINTsax.de und OFFICEsax.\n de/mitte.de\\, MINTsax.de und OFFICEmitte.de\nORGANIZER;CN=Hanwha Q.CELLS GmbH / Empfehlungsbund.de:https://www.empfehl\n ungsbund.de/events/22\nATTACH:https://www.empfehlungsbund.de/events/22\nLOCATION:Hanwha Q.CELLS GmbH\\, Sonnenallee  17-21\\, 06766 Bitterfeld-Wolf\n en\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003e\u003cstrong\u003e!!! Ort hat sich geände\n rt: Aufgrund der sehr hohen Teilnehmerzahl, treffen wir uns gegenüber vo\n n der ACTech GmbH bei der \u003cspan class=\"caps\"\u003eSAXONIA\u003c/span\u003e Standortentw\n icklungs- und -verwaltungsgesellschaft mbH, Halsbrücker Straße 34, 09599\n  Freiberg.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eNeben Partnern und Förderern von ITsax.de, MIN\n Tsax.de, OFFICEsax.de, Ansprechpartner der regionalen Hochschulen und Bi\n ldungseinrichtungen, sowie Ansprechpartner der regionalen Wirtschaftsför\n derung, sind Interessierte willkommen während des OpenNetwork Events wic\n htige Informationen zum Community-Konzept zu erhalten.\u003c/p\u003e\u003cp\u003eDen Fördere\n rn unserer Communitys (Wirtschaftsförderern, Career Services, Lehrstühle\n , Veranstalter regionaler Karriere-Messen,..) wird hierbei geboten, aktu\n elle Projekte in einem 5-minütigen Vortrag zu präsentieren. Ziel ist es \n die Zusammenarbeit zwischen der regionalen Wirtschaft und Ansprechpartne\n rn aus Bildung, Wirtschaftsförderung und regionalen Marketingdienstleist\n ern für eine gemeinsamen Fachkräftegewinnung zu stärken.\u003c/p\u003e\u003cp\u003eThemen:\u003cb\n r /\u003e1.\tErgebnisse und Trends aus den Communitys\u003cbr /\u003e2.\tVorstellung Erge\n bnisse Gehaltsbenchmark Mitteldeutschland (Speziell: IT, Maschinenbau, E\n lektrotechnik)\u003cbr /\u003e3.\tNeue Funktionen in Kanaleo.de zum Controlling des\n  Personalmarketings\u003cbr /\u003e4.\tStart der neuen Faire-Karriere.de Plattform \n als kostenfreie Alternative zu FairCompany\u003cbr /\u003e5.\tVorstellung von Proje\n kten verschiedener Förderer (Wirtschaftsförderungen, Career Services, Le\n hrstühle, Messen,..)\u003c/p\u003e\u003c/BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210037,"Bezeichnung":"Hanwha Q.CELLS GmbH","Kommentar":"Bundle: MINTsax.de 4.900€, ITmitte.de 2.900, OFFICEmitte.de 0€ plus Jobscout24.de Flat 2.400 +1.000€ PremiumUpdate (inkl. Empfehlungsbund+40); PremiumCareerbuilder gekündigt!","Typ":10,"Nutzername":"qcells","Website":"https://www.q-cells.com/en/redirection4IP","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-11T22:04:13.000+02:00"}}]},{"id":19,"name":"ebcw_20131","hashtag":"ebcw","title":"13/9/6. Community-Training ITsax.de/ Training ITmitte.de/ Training MINTsax.de","teaser":null,"teaser_hrfilter":null,"countdown_visible":false,"countdown_start":null,"countdown_description":null,"description":"\u003cp\u003eInnerhalb der regelmäßig stattfinden Community Trainings stimmen sich die Partner über die Weiterentwicklung und gemeinsame Aktivitäten der Community und Empfehlungsplattform ITsax.de ab.\u003c/p\u003e\n\u003cp\u003eTeilnehmer: Nur Partner der Community ITsax.de\u003cbr /\u003e\nOrt: T-Systems Multimedia Solutions GmbH, Riesaer Straße 5, 01129 Dresden\u003cbr /\u003e\nZeit: 17-19Uhr\u003c/p\u003e\n\u003cp\u003eAgenda:\u003c/p\u003e\n\u003cul\u003e\n\t\u003cli\u003eBegrüßung und Vorstellungsrunde, Vortrag des Gastgebers\u003c/li\u003e\n\t\u003cli\u003eErgebnisse und Abstimmung von Weiterentwicklungen\u003c/li\u003e\n\t\u003cli\u003eSpezialthemen in diesem Community-Training:\n\t\u003cul\u003e\n\t\t\u003cli\u003eNeues Werkzeug: Messung und Optimierung der Stellenanzeigenattraktivität\u003c/li\u003e\n\t\t\u003cli\u003eTrend: \u0026#8220;Employer Branding\u0026#8221; durch \u0026#8220;Applicant Experience\u0026#8221;\u003c/li\u003e\n\t\t\u003cli\u003eGehaltsbenchmark Projektleitung, Beratung sowie für Studenten\u003c/li\u003e\n\t\t\u003cli\u003eAbstimmung neue Termine und Themen in 2013\u003c/li\u003e\n\t\u003c/ul\u003e\u003c/li\u003e\n\t\u003cli\u003eAustausch und Networking Imbiss\u003c/li\u003e\n\u003c/ul\u003e","agenda":null,"start":"2013-01-22T17:00:00.000+01:00","finish":"2013-01-24T19:00:00.000+01:00","visible":true,"is_open_network":false,"banner":null,"banner_hrfilter":null,"logo":null,"register_url":"https://www.empfehlungsbund.de/events/19/register","show_url":"https://www.empfehlungsbund.de/events/19","events":[{"id":38,"display_line":"22.01.2013 - 17 bis 19:00 Uhr Dresden - 13. Community-Training ITsax.de - Gastgeber: T-Systems Multimedia Solutions GmbH","subtitle":"13. Community-Training ITsax.de","city":"Dresden","start":"2013-01-22T17:00:00.000+01:00","finish":"2013-01-22T19:00:00.000+01:00","address":"Riesaer Straße 5, 01129 Dresden","event_host":"T-Systems Multimedia Solutions GmbH","lat":51.0827,"lon":13.7256,"community_training_id":1,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20121028T030000\nRDATE:20121028T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20130122T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20130122T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Innerhalb der regelmäßig stattfinden Community Trainings stim\n men sich die Partner über die Weiterentwicklung und gemeinsame Aktivität\n en der Community und Empfehlungsplattform ITsax.de ab.\\nTeilnehmer: Nur \n Partner der Community ITsax.de\\nOrt: T-Systems Multimedia Solutions GmbH\n \\, Riesaer Straße 5\\, 01129 Dresden\\nZeit: 17-19Uhr\\nAgenda:\\n\\n\t* Begrü\n ßung und Vorstellungsrunde\\, Vortrag des Gastgebers\\n\t* Ergebnisse und A\n bstimmung von Weiterentwicklungen\\n\t* Spezialthemen in diesem Community-\n Training:\\n\t\\n\t\t* Neues Werkzeug: Messung und Optimierung der Stellenanz\n eigenattraktivität\\n\t\t* Trend: “Employer Branding” durch “Applicant Expe\n rience”\\n\t\t* Gehaltsbenchmark Projektleitung\\, Beratung sowie für Studen\n ten\\n\t\t* Abstimmung neue Termine und Themen in 2013\\n\t\\n\t* Austausch und\n  Networking Imbiss\\n\\n\nURL:https://www.empfehlungsbund.de/events/19\nSUMMARY:13/9/6. Community-Training ITsax.de/ Training ITmitte.de/ Trainin\n g MINTsax.de\nORGANIZER;CN=T-Systems Multimedia Solutions GmbH / Empfehlungsbund.de:htt\n ps://www.empfehlungsbund.de/events/19\nATTACH:https://www.empfehlungsbund.de/events/19\nLOCATION:T-Systems Multimedia Solutions GmbH\\, Riesaer Straße 5\\, 01129 D\n resden\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eInnerhalb der regelmäßig stattf\n inden Community Trainings stimmen sich die Partner über die Weiterentwic\n klung und gemeinsame Aktivitäten der Community und Empfehlungsplattform \n ITsax.de ab.\u003c/p\u003e\u003cp\u003eTeilnehmer: Nur Partner der Community ITsax.de\u003cbr /\u003eO\n rt: T-Systems Multimedia Solutions GmbH, Riesaer Straße 5, 01129 Dresden\n \u003cbr /\u003eZeit: 17-19Uhr\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung und Vorstellung\n srunde, Vortrag des Gastgebers\u003c/li\u003e\t\u003cli\u003eErgebnisse und Abstimmung von We\n iterentwicklungen\u003c/li\u003e\t\u003cli\u003eSpezialthemen in diesem Community-Training:\t\u003c\n ul\u003e\t\t\u003cli\u003eNeues Werkzeug: Messung und Optimierung der Stellenanzeigenattr\n aktivität\u003c/li\u003e\t\t\u003cli\u003eTrend: \u0026#8220;Employer Branding\u0026#8221; durch \u0026#8220;\n Applicant Experience\u0026#8221;\u003c/li\u003e\t\t\u003cli\u003eGehaltsbenchmark Projektleitung, B\n eratung sowie für Studenten\u003c/li\u003e\t\t\u003cli\u003eAbstimmung neue Termine und Themen\n  in 2013\u003c/li\u003e\t\u003c/ul\u003e\u003c/li\u003e\t\u003cli\u003eAustausch und Networking Imbiss\u003c/li\u003e\u003c/ul\u003e\u003c/\n BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210013,"Bezeichnung":"T-Systems Multimedia Solutions GmbH","Kommentar":"Rechnung per Post zuschicken.\r\n\r\n","Typ":10,"Nutzername":"tsystemsmms","Website":"https://www.t-systems.com/de/en","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-09-30T10:38:54.000+02:00"}},{"id":39,"display_line":"23.01.2013 - 17 bis 19:00 Uhr Halle (Saale) - 9. Community Training ITmitte.de - Gastgeber: Gisa GmbH","subtitle":"9. Community Training ITmitte.de","city":"Halle (Saale)","start":"2013-01-23T17:00:00.000+01:00","finish":"2013-01-23T19:00:00.000+01:00","address":"Leipziger Chaussee 191a, 06112 Halle","event_host":"Gisa GmbH","lat":51.449,"lon":12.0246,"community_training_id":2,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20121028T030000\nRDATE:20121028T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20130123T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20130123T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Innerhalb der regelmäßig stattfinden Community Trainings stim\n men sich die Partner über die Weiterentwicklung und gemeinsame Aktivität\n en der Community und Empfehlungsplattform ITsax.de ab.\\nTeilnehmer: Nur \n Partner der Community ITsax.de\\nOrt: T-Systems Multimedia Solutions GmbH\n \\, Riesaer Straße 5\\, 01129 Dresden\\nZeit: 17-19Uhr\\nAgenda:\\n\\n\t* Begrü\n ßung und Vorstellungsrunde\\, Vortrag des Gastgebers\\n\t* Ergebnisse und A\n bstimmung von Weiterentwicklungen\\n\t* Spezialthemen in diesem Community-\n Training:\\n\t\\n\t\t* Neues Werkzeug: Messung und Optimierung der Stellenanz\n eigenattraktivität\\n\t\t* Trend: “Employer Branding” durch “Applicant Expe\n rience”\\n\t\t* Gehaltsbenchmark Projektleitung\\, Beratung sowie für Studen\n ten\\n\t\t* Abstimmung neue Termine und Themen in 2013\\n\t\\n\t* Austausch und\n  Networking Imbiss\\n\\n\nURL:https://www.empfehlungsbund.de/events/19\nSUMMARY:13/9/6. Community-Training ITsax.de/ Training ITmitte.de/ Trainin\n g MINTsax.de\nORGANIZER;CN=Gisa GmbH / Empfehlungsbund.de:https://www.empfehlungsbund.d\n e/events/19\nATTACH:https://www.empfehlungsbund.de/events/19\nLOCATION:Gisa GmbH\\, Leipziger Chaussee 191a\\, 06112 Halle\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eInnerhalb der regelmäßig stattf\n inden Community Trainings stimmen sich die Partner über die Weiterentwic\n klung und gemeinsame Aktivitäten der Community und Empfehlungsplattform \n ITsax.de ab.\u003c/p\u003e\u003cp\u003eTeilnehmer: Nur Partner der Community ITsax.de\u003cbr /\u003eO\n rt: T-Systems Multimedia Solutions GmbH, Riesaer Straße 5, 01129 Dresden\n \u003cbr /\u003eZeit: 17-19Uhr\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung und Vorstellung\n srunde, Vortrag des Gastgebers\u003c/li\u003e\t\u003cli\u003eErgebnisse und Abstimmung von We\n iterentwicklungen\u003c/li\u003e\t\u003cli\u003eSpezialthemen in diesem Community-Training:\t\u003c\n ul\u003e\t\t\u003cli\u003eNeues Werkzeug: Messung und Optimierung der Stellenanzeigenattr\n aktivität\u003c/li\u003e\t\t\u003cli\u003eTrend: \u0026#8220;Employer Branding\u0026#8221; durch \u0026#8220;\n Applicant Experience\u0026#8221;\u003c/li\u003e\t\t\u003cli\u003eGehaltsbenchmark Projektleitung, B\n eratung sowie für Studenten\u003c/li\u003e\t\t\u003cli\u003eAbstimmung neue Termine und Themen\n  in 2013\u003c/li\u003e\t\u003c/ul\u003e\u003c/li\u003e\t\u003cli\u003eAustausch und Networking Imbiss\u003c/li\u003e\u003c/ul\u003e\u003c/\n BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210031,"Bezeichnung":"Gisa GmbH","Kommentar":"ab 11_2020: ato","Typ":10,"Nutzername":"gisa","Website":"https://www.gisa.de/karriere/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-10-12T15:36:43.000+02:00"}},{"id":40,"display_line":"24.01.2013 - 17 bis 19:00 Uhr Freiberg - 6. Community Training MINTsax.de - Gastgeber: ACTech GmbH","subtitle":"6. Community Training MINTsax.de","city":"Freiberg","start":"2013-01-24T17:00:00.000+01:00","finish":"2013-01-24T19:00:00.000+01:00","address":"Halsbrücker Str. 51, 09599 Freiberg","event_host":"ACTech GmbH","lat":50.9318,"lon":13.3464,"community_training_id":3,"ics":"BEGIN:VCALENDAR\nPRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN\nCALSCALE:GREGORIAN\nVERSION:2.0\nBEGIN:VTIMEZONE\nTZID;X-RICAL-TZSOURCE=TZINFO:Europe/Berlin\nBEGIN:STANDARD\nDTSTART:20121028T030000\nRDATE:20121028T030000\nTZOFFSETFROM:+0200\nTZOFFSETTO:+0100\nTZNAME:CET\nEND:STANDARD\nEND:VTIMEZONE\nBEGIN:VEVENT\nDTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20130124T190000\nDTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20130124T170000\nCATEGORIES:BUSINESS\nDESCRIPTION:Innerhalb der regelmäßig stattfinden Community Trainings stim\n men sich die Partner über die Weiterentwicklung und gemeinsame Aktivität\n en der Community und Empfehlungsplattform ITsax.de ab.\\nTeilnehmer: Nur \n Partner der Community ITsax.de\\nOrt: T-Systems Multimedia Solutions GmbH\n \\, Riesaer Straße 5\\, 01129 Dresden\\nZeit: 17-19Uhr\\nAgenda:\\n\\n\t* Begrü\n ßung und Vorstellungsrunde\\, Vortrag des Gastgebers\\n\t* Ergebnisse und A\n bstimmung von Weiterentwicklungen\\n\t* Spezialthemen in diesem Community-\n Training:\\n\t\\n\t\t* Neues Werkzeug: Messung und Optimierung der Stellenanz\n eigenattraktivität\\n\t\t* Trend: “Employer Branding” durch “Applicant Expe\n rience”\\n\t\t* Gehaltsbenchmark Projektleitung\\, Beratung sowie für Studen\n ten\\n\t\t* Abstimmung neue Termine und Themen in 2013\\n\t\\n\t* Austausch und\n  Networking Imbiss\\n\\n\nURL:https://www.empfehlungsbund.de/events/19\nSUMMARY:13/9/6. Community-Training ITsax.de/ Training ITmitte.de/ Trainin\n g MINTsax.de\nORGANIZER;CN=ACTech GmbH / Empfehlungsbund.de:https://www.empfehlungsbund\n .de/events/19\nATTACH:https://www.empfehlungsbund.de/events/19\nLOCATION:ACTech GmbH\\, Halsbrücker Str. 51\\, 09599 Freiberg\nX-ALT-DESC:\u003c!DOCTYPE HTML\u003e\u003cHTML\u003e\u003cBODY\u003e\u003cp\u003eInnerhalb der regelmäßig stattf\n inden Community Trainings stimmen sich die Partner über die Weiterentwic\n klung und gemeinsame Aktivitäten der Community und Empfehlungsplattform \n ITsax.de ab.\u003c/p\u003e\u003cp\u003eTeilnehmer: Nur Partner der Community ITsax.de\u003cbr /\u003eO\n rt: T-Systems Multimedia Solutions GmbH, Riesaer Straße 5, 01129 Dresden\n \u003cbr /\u003eZeit: 17-19Uhr\u003c/p\u003e\u003cp\u003eAgenda:\u003c/p\u003e\u003cul\u003e\t\u003cli\u003eBegrüßung und Vorstellung\n srunde, Vortrag des Gastgebers\u003c/li\u003e\t\u003cli\u003eErgebnisse und Abstimmung von We\n iterentwicklungen\u003c/li\u003e\t\u003cli\u003eSpezialthemen in diesem Community-Training:\t\u003c\n ul\u003e\t\t\u003cli\u003eNeues Werkzeug: Messung und Optimierung der Stellenanzeigenattr\n aktivität\u003c/li\u003e\t\t\u003cli\u003eTrend: \u0026#8220;Employer Branding\u0026#8221; durch \u0026#8220;\n Applicant Experience\u0026#8221;\u003c/li\u003e\t\t\u003cli\u003eGehaltsbenchmark Projektleitung, B\n eratung sowie für Studenten\u003c/li\u003e\t\t\u003cli\u003eAbstimmung neue Termine und Themen\n  in 2013\u003c/li\u003e\t\u003c/ul\u003e\u003c/li\u003e\t\u003cli\u003eAustausch und Networking Imbiss\u003c/li\u003e\u003c/ul\u003e\u003c/\n BODY\u003e\u003c/HTML\u003e\nEND:VEVENT\nEND:VCALENDAR\n","organisation":{"ID":9210264,"Bezeichnung":"ACTech GmbH","Kommentar":"Frau Birke ist nicht mehr im Unternehmen seit Okt.'12","Typ":10,"Nutzername":"actech","Website":"https://www.actech.de/","created_at":"2014-01-01T01:00:00.000+01:00","updated_at":"2021-06-18T10:58:40.000+02:00"}}]}]
  recorded_at: Thu, 11 Nov 2021 13:01:44 GMT
recorded_with: VCR 6.0.0
