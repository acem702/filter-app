---
http_interactions:
- request:
    method: get
    uri: http://api.empfehlungsbund.de/api/v2/community_trainings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 20 Feb 2016 20:20:52 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Server:
      - nginx
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 20 Feb 2016 20:20:52 GMT
- request:
    method: get
    uri: http://api.empfehlungsbund.de/api/v2/community_trainings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 20 Feb 2016 20:20:53 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Server:
      - nginx
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 27 Feb 2016 20:20:53 GMT
- request:
    method: get
    uri: http://api.empfehlungsbund.de/api/v2/partner_events.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sat, 20 Feb 2016 20:20:53 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Server:
      - nginx
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 27 Feb 2016 20:20:53 GMT
- request:
    method: get
    uri: http://api.empfehlungsbund.de/api/v2/partner_events.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Sun, 21 Feb 2016 13:41:38 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Server:
      - nginx
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 28 Feb 2016 13:41:38 GMT
- request:
    method: get
    uri: https://crm.pludoni.com/api/community_workshops.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 05 Sep 2017 08:40:27 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"a754b48f56b4fd7a5a37bc36e8677c0a"
      Server:
      - nginx
      Front-End-Https:
      - 'on'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 05 Sep 2017 08:40:28 GMT
- request:
    method: get
    uri: https://crm.pludoni.com/api/community_workshops.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 05 Sep 2017 08:40:29 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      Status:
      - 200 OK
      Cache-Control:
      - max-age=0, private, must-revalidate
      Etag:
      - W/"a754b48f56b4fd7a5a37bc36e8677c0a"
      Server:
      - nginx
      Front-End-Https:
      - 'on'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 12 Sep 2017 08:40:29 GMT
- request:
    method: get
    uri: https://fonts.googleapis.com/css?family=Ubuntu:300,400,500,700
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/css; charset=utf-8
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      Expires:
      - Thu, 20 Oct 2022 15:50:58 GMT
      Date:
      - Thu, 20 Oct 2022 15:50:58 GMT
      Cache-Control:
      - private, max-age=86400
      Cross-Origin-Opener-Policy:
      - same-origin-allow-popups
      Cross-Origin-Resource-Policy:
      - cross-origin
      Server:
      - ESF
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        @font-face {
          font-family: 'Ubuntu';
          font-style: normal;
          font-weight: 300;
          src: url(https://fonts.gstatic.com/s/ubuntu/v20/4iCv6KVjbNBYlgoC1CzjsGyI.ttf) format('truetype');
        }
        @font-face {
          font-family: 'Ubuntu';
          font-style: normal;
          font-weight: 400;
          src: url(https://fonts.gstatic.com/s/ubuntu/v20/4iCs6KVjbNBYlgoKfw7z.ttf) format('truetype');
        }
        @font-face {
          font-family: 'Ubuntu';
          font-style: normal;
          font-weight: 500;
          src: url(https://fonts.gstatic.com/s/ubuntu/v20/4iCv6KVjbNBYlgoCjC3jsGyI.ttf) format('truetype');
        }
        @font-face {
          font-family: 'Ubuntu';
          font-style: normal;
          font-weight: 700;
          src: url(https://fonts.gstatic.com/s/ubuntu/v20/4iCv6KVjbNBYlgoCxCvjsGyI.ttf) format('truetype');
        }
  recorded_at: Fri, 18 Oct 2019 12:00:00 GMT
- request:
    method: get
    uri: https://fonts.googleapis.com/css?family=Ubuntu:300,400,500,700
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/css; charset=utf-8
      Access-Control-Allow-Origin:
      - "*"
      Timing-Allow-Origin:
      - "*"
      Expires:
      - Thu, 20 Oct 2022 16:11:43 GMT
      Date:
      - Thu, 20 Oct 2022 16:11:43 GMT
      Cache-Control:
      - private, max-age=86400
      Cross-Origin-Resource-Policy:
      - cross-origin
      Cross-Origin-Opener-Policy:
      - same-origin-allow-popups
      Server:
      - ESF
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443";
        ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |
        @font-face {
          font-family: 'Ubuntu';
          font-style: normal;
          font-weight: 300;
          src: url(https://fonts.gstatic.com/s/ubuntu/v20/4iCv6KVjbNBYlgoC1CzjsGyI.ttf) format('truetype');
        }
        @font-face {
          font-family: 'Ubuntu';
          font-style: normal;
          font-weight: 400;
          src: url(https://fonts.gstatic.com/s/ubuntu/v20/4iCs6KVjbNBYlgoKfw7z.ttf) format('truetype');
        }
        @font-face {
          font-family: 'Ubuntu';
          font-style: normal;
          font-weight: 500;
          src: url(https://fonts.gstatic.com/s/ubuntu/v20/4iCv6KVjbNBYlgoCjC3jsGyI.ttf) format('truetype');
        }
        @font-face {
          font-family: 'Ubuntu';
          font-style: normal;
          font-weight: 700;
          src: url(https://fonts.gstatic.com/s/ubuntu/v20/4iCv6KVjbNBYlgoCxCvjsGyI.ttf) format('truetype');
        }
  recorded_at: Thu, 27 Oct 2022 16:11:43 GMT
recorded_with: VCR 6.0.0
